[{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AssertionError\">AssertionError</a> = <a href=\"#v:AssertionError\">AssertionError</a>","name":"AssertionError AssertionError","module":"Grisette.Internal.Core.Control.Exception","link":"Grisette-Internal-Core-Control-Exception.html#t:AssertionError"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:VerificationConditions\">VerificationConditions</a><ul class=\"subs\"><li>= <a href=\"#v:AssertionViolation\">AssertionViolation</a></li><li>| <a href=\"#v:AssumptionViolation\">AssumptionViolation</a></li></ul>","name":"VerificationConditions AssertionViolation AssumptionViolation","module":"Grisette.Internal.Core.Control.Exception","link":"Grisette-Internal-Core-Control-Exception.html#t:VerificationConditions"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:BitCast\">BitCast</a> from to <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:bitCast\">bitCast</a> :: from -&gt; to</li></ul>","name":"BitCast bitCast","module":"Grisette.Internal.Core.Data.Class.BitCast","link":"Grisette-Internal-Core-Data-Class-BitCast.html#t:BitCast"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:BitCastCanonical\">BitCastCanonical</a> from to <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:bitCastCanonicalValue\">bitCastCanonicalValue</a> :: proxy from -&gt; to</li></ul>","name":"BitCastCanonical bitCastCanonicalValue","module":"Grisette.Internal.Core.Data.Class.BitCast","link":"Grisette-Internal-Core-Data-Class-BitCast.html#t:BitCastCanonical"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:BitCastOr\">BitCastOr</a> from to <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:bitCastOr\">bitCastOr</a> :: to -&gt; from -&gt; to</li></ul>","name":"BitCastOr bitCastOr","module":"Grisette.Internal.Core.Data.Class.BitCast","link":"Grisette-Internal-Core-Data-Class-BitCast.html#t:BitCastOr"},{"display_html":"<a href=\"#v:bitCastOrCanonical\">bitCastOrCanonical</a> :: <a href=\"Grisette-Internal-Core-Data-Class-BitCast.html#t:BitCastOrCanonical\" title=\"Grisette.Internal.Core.Data.Class.BitCast\">BitCastOrCanonical</a> from to =&gt; from -&gt; to","name":"bitCastOrCanonical","module":"Grisette.Internal.Core.Data.Class.BitCast","link":"Grisette-Internal-Core-Data-Class-BitCast.html#v:bitCastOrCanonical"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:BitCastOrCanonical\">BitCastOrCanonical</a> a b = (<a href=\"Grisette-Internal-Core-Data-Class-BitCast.html#t:BitCastCanonical\" title=\"Grisette.Internal.Core.Data.Class.BitCast\">BitCastCanonical</a> a b, <a href=\"Grisette-Internal-Core-Data-Class-BitCast.html#t:BitCastOr\" title=\"Grisette.Internal.Core.Data.Class.BitCast\">BitCastOr</a> a b)","name":"BitCastOrCanonical","module":"Grisette.Internal.Core.Data.Class.BitCast","link":"Grisette-Internal-Core-Data-Class-BitCast.html#t:BitCastOrCanonical"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Concrete\">Concrete</a> a","name":"Concrete","module":"Grisette.Internal.Core.Data.Class.Concrete","link":"Grisette-Internal-Core-Data-Class-Concrete.html#t:Concrete"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Function\">Function</a> f arg ret | f -&gt; arg ret <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:-35-\">(#)</a> :: f -&gt; arg -&gt; ret</li></ul>","name":"Function #","module":"Grisette.Internal.Core.Data.Class.Function","link":"Grisette-Internal-Core-Data-Class-Function.html#t:Function"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Apply\">Apply</a> uf <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:FunType\">FunType</a> uf</li><li><a href=\"#v:apply\">apply</a> :: uf -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Function.html#t:FunType\" title=\"Grisette.Internal.Core.Data.Class.Function\">FunType</a> uf</li></ul>","name":"Apply apply FunType","module":"Grisette.Internal.Core.Data.Class.Function","link":"Grisette-Internal-Core-Data-Class-Function.html#t:Apply"},{"display_html":"<a href=\"#v:fpIsNaN\">fpIsNaN</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsNaN","module":"Grisette.Internal.Core.Data.Class.IEEEFP","link":"Grisette-Internal-Core-Data-Class-IEEEFP.html#v:fpIsNaN"},{"display_html":"<a href=\"#v:fpIsPositiveZero\">fpIsPositiveZero</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsPositiveZero","module":"Grisette.Internal.Core.Data.Class.IEEEFP","link":"Grisette-Internal-Core-Data-Class-IEEEFP.html#v:fpIsPositiveZero"},{"display_html":"<a href=\"#v:fpIsNegativeZero\">fpIsNegativeZero</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsNegativeZero","module":"Grisette.Internal.Core.Data.Class.IEEEFP","link":"Grisette-Internal-Core-Data-Class-IEEEFP.html#v:fpIsNegativeZero"},{"display_html":"<a href=\"#v:fpIsPositiveInfinite\">fpIsPositiveInfinite</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsPositiveInfinite","module":"Grisette.Internal.Core.Data.Class.IEEEFP","link":"Grisette-Internal-Core-Data-Class-IEEEFP.html#v:fpIsPositiveInfinite"},{"display_html":"<a href=\"#v:fpIsNegativeInfinite\">fpIsNegativeInfinite</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsNegativeInfinite","module":"Grisette.Internal.Core.Data.Class.IEEEFP","link":"Grisette-Internal-Core-Data-Class-IEEEFP.html#v:fpIsNegativeInfinite"},{"display_html":"<a href=\"#v:fpIsPositive\">fpIsPositive</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsPositive","module":"Grisette.Internal.Core.Data.Class.IEEEFP","link":"Grisette-Internal-Core-Data-Class-IEEEFP.html#v:fpIsPositive"},{"display_html":"<a href=\"#v:fpIsNegative\">fpIsNegative</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsNegative","module":"Grisette.Internal.Core.Data.Class.IEEEFP","link":"Grisette-Internal-Core-Data-Class-IEEEFP.html#v:fpIsNegative"},{"display_html":"<a href=\"#v:fpIsInfinite\">fpIsInfinite</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsInfinite","module":"Grisette.Internal.Core.Data.Class.IEEEFP","link":"Grisette-Internal-Core-Data-Class-IEEEFP.html#v:fpIsInfinite"},{"display_html":"<a href=\"#v:fpIsZero\">fpIsZero</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsZero","module":"Grisette.Internal.Core.Data.Class.IEEEFP","link":"Grisette-Internal-Core-Data-Class-IEEEFP.html#v:fpIsZero"},{"display_html":"<a href=\"#v:fpIsNormal\">fpIsNormal</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsNormal","module":"Grisette.Internal.Core.Data.Class.IEEEFP","link":"Grisette-Internal-Core-Data-Class-IEEEFP.html#v:fpIsNormal"},{"display_html":"<a href=\"#v:fpIsSubnormal\">fpIsSubnormal</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsSubnormal","module":"Grisette.Internal.Core.Data.Class.IEEEFP","link":"Grisette-Internal-Core-Data-Class-IEEEFP.html#v:fpIsSubnormal"},{"display_html":"<a href=\"#v:fpIsPoint\">fpIsPoint</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsPoint","module":"Grisette.Internal.Core.Data.Class.IEEEFP","link":"Grisette-Internal-Core-Data-Class-IEEEFP.html#v:fpIsPoint"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IEEEFPConstants\">IEEEFPConstants</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fpPositiveInfinite\">fpPositiveInfinite</a> :: a</li><li><a href=\"#v:fpNegativeInfinite\">fpNegativeInfinite</a> :: a</li><li><a href=\"#v:fpNaN\">fpNaN</a> :: a</li><li><a href=\"#v:fpNegativeZero\">fpNegativeZero</a> :: a</li><li><a href=\"#v:fpPositiveZero\">fpPositiveZero</a> :: a</li><li><a href=\"#v:fpMinNormalized\">fpMinNormalized</a> :: a</li><li><a href=\"#v:fpMinSubnormal\">fpMinSubnormal</a> :: a</li><li><a href=\"#v:fpMaxNormalized\">fpMaxNormalized</a> :: a</li><li><a href=\"#v:fpMaxSubnormal\">fpMaxSubnormal</a> :: a</li></ul>","name":"IEEEFPConstants fpNaN fpMaxNormalized fpMaxSubnormal fpMinNormalized fpMinSubnormal fpNegativeInfinite fpNegativeZero fpPositiveInfinite fpPositiveZero","module":"Grisette.Internal.Core.Data.Class.IEEEFP","link":"Grisette-Internal-Core-Data-Class-IEEEFP.html#t:IEEEFPConstants"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IEEEFPRoundingMode\">IEEEFPRoundingMode</a> mode <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:rne\">rne</a> :: mode</li><li><a href=\"#v:rna\">rna</a> :: mode</li><li><a href=\"#v:rtp\">rtp</a> :: mode</li><li><a href=\"#v:rtn\">rtn</a> :: mode</li><li><a href=\"#v:rtz\">rtz</a> :: mode</li></ul>","name":"IEEEFPRoundingMode rna rne rtn rtp rtz","module":"Grisette.Internal.Core.Data.Class.IEEEFP","link":"Grisette-Internal-Core-Data-Class-IEEEFP.html#t:IEEEFPRoundingMode"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IEEEFPOp\">IEEEFPOp</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fpAbs\">fpAbs</a> :: a -&gt; a</li><li><a href=\"#v:fpNeg\">fpNeg</a> :: a -&gt; a</li><li><a href=\"#v:fpRem\">fpRem</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:fpMinimum\">fpMinimum</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:fpMinimumNumber\">fpMinimumNumber</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:fpMaximum\">fpMaximum</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:fpMaximumNumber\">fpMaximumNumber</a> :: a -&gt; a -&gt; a</li></ul>","name":"IEEEFPOp fpAbs fpNeg fpRem fpMaximum fpMaximumNumber fpMinimum fpMinimumNumber","module":"Grisette.Internal.Core.Data.Class.IEEEFP","link":"Grisette-Internal-Core-Data-Class-IEEEFP.html#t:IEEEFPOp"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Internal-Core-Data-Class-IEEEFP.html#t:IEEEFPRoundingMode\" title=\"Grisette.Internal.Core.Data.Class.IEEEFP\">IEEEFPRoundingMode</a> mode =&gt; <a href=\"#t:IEEEFPRoundingOp\">IEEEFPRoundingOp</a> a mode | a -&gt; mode <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fpAdd\">fpAdd</a> :: mode -&gt; a -&gt; a -&gt; a</li><li><a href=\"#v:fpSub\">fpSub</a> :: mode -&gt; a -&gt; a -&gt; a</li><li><a href=\"#v:fpMul\">fpMul</a> :: mode -&gt; a -&gt; a -&gt; a</li><li><a href=\"#v:fpDiv\">fpDiv</a> :: mode -&gt; a -&gt; a -&gt; a</li><li><a href=\"#v:fpFMA\">fpFMA</a> :: mode -&gt; a -&gt; a -&gt; a -&gt; a</li><li><a href=\"#v:fpSqrt\">fpSqrt</a> :: mode -&gt; a -&gt; a</li><li><a href=\"#v:fpRoundToIntegral\">fpRoundToIntegral</a> :: mode -&gt; a -&gt; a</li></ul>","name":"IEEEFPRoundingOp fpAdd fpSub fpMul fpDiv fpFMA fpSqrt fpRoundToIntegral","module":"Grisette.Internal.Core.Data.Class.IEEEFP","link":"Grisette-Internal-Core-Data-Class-IEEEFP.html#t:IEEEFPRoundingOp"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IEEEFPConvertible\">IEEEFPConvertible</a> a fp mode | fp -&gt; mode <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fromFPOr\">fromFPOr</a> :: a -&gt; mode -&gt; fp -&gt; a</li><li><a href=\"#v:toFP\">toFP</a> :: mode -&gt; a -&gt; fp</li></ul>","name":"IEEEFPConvertible fromFPOr toFP","module":"Grisette.Internal.Core.Data.Class.IEEEFP","link":"Grisette-Internal-Core-Data-Class-IEEEFP.html#t:IEEEFPConvertible"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Data-Class-IEEEFP.html#t:IEEEFPConvertible\" title=\"Grisette.Internal.Core.Data.Class.IEEEFP\">IEEEFPConvertible</a> a fp mode, <a href=\"Grisette-Internal-Core-Data-Class-IEEEFP.html#t:IEEEFPRoundingMode\" title=\"Grisette.Internal.Core.Data.Class.IEEEFP\">IEEEFPRoundingMode</a> mode) =&gt; <a href=\"#t:IEEEFPToAlgReal\">IEEEFPToAlgReal</a> a fp mode | fp -&gt; mode <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fpToAlgReal\">fpToAlgReal</a> :: a -&gt; fp -&gt; a</li></ul>","name":"IEEEFPToAlgReal fpToAlgReal $dmfpToAlgReal","module":"Grisette.Internal.Core.Data.Class.IEEEFP","link":"Grisette-Internal-Core-Data-Class-IEEEFP.html#t:IEEEFPToAlgReal"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Monoid.html#t:Monoid\" title=\"Data.Monoid\">Monoid</a> symbolSet =&gt; <a href=\"#t:SymbolSetOps\">SymbolSetOps</a> symbolSet (typedSymbol :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) | symbolSet -&gt; typedSymbol <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:emptySet\">emptySet</a> :: symbolSet</li><li><a href=\"#v:isEmptySet\">isEmptySet</a> :: symbolSet -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:containsSymbol\">containsSymbol</a> :: typedSymbol a -&gt; symbolSet -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:insertSymbol\">insertSymbol</a> :: typedSymbol a -&gt; symbolSet -&gt; symbolSet</li><li><a href=\"#v:intersectionSet\">intersectionSet</a> :: symbolSet -&gt; symbolSet -&gt; symbolSet</li><li><a href=\"#v:unionSet\">unionSet</a> :: symbolSet -&gt; symbolSet -&gt; symbolSet</li><li><a href=\"#v:differenceSet\">differenceSet</a> :: symbolSet -&gt; symbolSet -&gt; symbolSet</li></ul>","name":"SymbolSetOps isEmptySet containsSymbol differenceSet emptySet insertSymbol intersectionSet unionSet","module":"Grisette.Internal.Core.Data.Class.ModelOps","link":"Grisette-Internal-Core-Data-Class-ModelOps.html#t:SymbolSetOps"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Internal-Core-Data-Class-ModelOps.html#t:SymbolSetOps\" title=\"Grisette.Internal.Core.Data.Class.ModelOps\">SymbolSetOps</a> symbolSet typedSymbol =&gt; <a href=\"#t:SymbolSetRep\">SymbolSetRep</a> rep symbolSet (typedSymbol :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:buildSymbolSet\">buildSymbolSet</a> :: rep -&gt; symbolSet</li></ul>","name":"SymbolSetRep buildSymbolSet","module":"Grisette.Internal.Core.Data.Class.ModelOps","link":"Grisette-Internal-Core-Data-Class-ModelOps.html#t:SymbolSetRep"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Internal-Core-Data-Class-ModelOps.html#t:SymbolSetOps\" title=\"Grisette.Internal.Core.Data.Class.ModelOps\">SymbolSetOps</a> symbolSet typedSymbol =&gt; <a href=\"#t:ModelOps\">ModelOps</a> model symbolSet (typedSymbol :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) | model -&gt; symbolSet typedSymbol <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:emptyModel\">emptyModel</a> :: model</li><li><a href=\"#v:isEmptyModel\">isEmptyModel</a> :: model -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:modelContains\">modelContains</a> :: typedSymbol a -&gt; model -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:valueOf\">valueOf</a> :: typedSymbol t -&gt; model -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> t</li><li><a href=\"#v:insertValue\">insertValue</a> :: typedSymbol t -&gt; t -&gt; model -&gt; model</li><li><a href=\"#v:exceptFor\">exceptFor</a> :: symbolSet -&gt; model -&gt; model</li><li><a href=\"#v:exceptFor-39-\">exceptFor'</a> :: typedSymbol t -&gt; model -&gt; model</li><li><a href=\"#v:restrictTo\">restrictTo</a> :: symbolSet -&gt; model -&gt; model</li><li><a href=\"#v:extendTo\">extendTo</a> :: symbolSet -&gt; model -&gt; model</li><li><a href=\"#v:exact\">exact</a> :: symbolSet -&gt; model -&gt; model</li></ul>","name":"ModelOps emptyModel insertValue exact exceptFor exceptFor' extendTo isEmptyModel modelContains restrictTo valueOf $dmexact","module":"Grisette.Internal.Core.Data.Class.ModelOps","link":"Grisette-Internal-Core-Data-Class-ModelOps.html#t:ModelOps"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ModelRep\">ModelRep</a> rep model | rep -&gt; model <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:buildModel\">buildModel</a> :: rep -&gt; model</li></ul>","name":"ModelRep buildModel","module":"Grisette.Internal.Core.Data.Class.ModelOps","link":"Grisette-Internal-Core-Data-Class-ModelOps.html#t:ModelRep"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:SignConversion\">SignConversion</a> ubv sbv | ubv -&gt; sbv, sbv -&gt; ubv <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toSigned\">toSigned</a> :: ubv -&gt; sbv</li><li><a href=\"#v:toUnsigned\">toUnsigned</a> :: sbv -&gt; ubv</li></ul>","name":"SignConversion toSigned toUnsigned","module":"Grisette.Internal.Core.Data.Class.SignConversion","link":"Grisette-Internal-Core-Data-Class-SignConversion.html#t:SignConversion"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:Bits\" title=\"Data.Bits\">Bits</a> a =&gt; <a href=\"#t:SymRotate\">SymRotate</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:symRotate\">symRotate</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:symRotateNegated\">symRotateNegated</a> :: a -&gt; a -&gt; a</li></ul>","name":"SymRotate symRotate symRotateNegated","module":"Grisette.Internal.Core.Data.Class.SymRotate","link":"Grisette-Internal-Core-Data-Class-SymRotate.html#t:SymRotate"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:DefaultFiniteBitsSymRotate\">DefaultFiniteBitsSymRotate</a> a = <a href=\"#v:DefaultFiniteBitsSymRotate\">DefaultFiniteBitsSymRotate</a> {<ul class=\"subs\"><li><a href=\"#v:unDefaultFiniteBitsSymRotate\">unDefaultFiniteBitsSymRotate</a> :: a</li></ul>}","name":"DefaultFiniteBitsSymRotate DefaultFiniteBitsSymRotate unDefaultFiniteBitsSymRotate","module":"Grisette.Internal.Core.Data.Class.SymRotate","link":"Grisette-Internal-Core-Data-Class-SymRotate.html#t:DefaultFiniteBitsSymRotate"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:Bits\" title=\"Data.Bits\">Bits</a> a =&gt; <a href=\"#t:SymShift\">SymShift</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:symShift\">symShift</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:symShiftNegated\">symShiftNegated</a> :: a -&gt; a -&gt; a</li></ul>","name":"SymShift symShift symShiftNegated","module":"Grisette.Internal.Core.Data.Class.SymShift","link":"Grisette-Internal-Core-Data-Class-SymShift.html#t:SymShift"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:DefaultFiniteBitsSymShift\">DefaultFiniteBitsSymShift</a> a = <a href=\"#v:DefaultFiniteBitsSymShift\">DefaultFiniteBitsSymShift</a> {<ul class=\"subs\"><li><a href=\"#v:unDefaultFiniteBitsSymShift\">unDefaultFiniteBitsSymShift</a> :: a</li></ul>}","name":"DefaultFiniteBitsSymShift DefaultFiniteBitsSymShift unDefaultFiniteBitsSymShift","module":"Grisette.Internal.Core.Data.Class.SymShift","link":"Grisette-Internal-Core-Data-Class-SymShift.html#t:DefaultFiniteBitsSymShift"},{"display_html":"<a href=\"#v:stableMemo\">stableMemo</a> :: (a -&gt; b) -&gt; a -&gt; b","name":"stableMemo","module":"Grisette.Internal.Core.Data.MemoUtils","link":"Grisette-Internal-Core-Data-MemoUtils.html#v:stableMemo"},{"display_html":"<a href=\"#v:stableMemo2\">stableMemo2</a> :: (a -&gt; b -&gt; c) -&gt; a -&gt; b -&gt; c","name":"stableMemo2","module":"Grisette.Internal.Core.Data.MemoUtils","link":"Grisette-Internal-Core-Data-MemoUtils.html#v:stableMemo2"},{"display_html":"<a href=\"#v:stableMemo3\">stableMemo3</a> :: (a -&gt; b -&gt; c -&gt; d) -&gt; a -&gt; b -&gt; c -&gt; d","name":"stableMemo3","module":"Grisette.Internal.Core.Data.MemoUtils","link":"Grisette-Internal-Core-Data-MemoUtils.html#v:stableMemo3"},{"display_html":"<a href=\"#v:stableMup\">stableMup</a> :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c","name":"stableMup","module":"Grisette.Internal.Core.Data.MemoUtils","link":"Grisette-Internal-Core-Data-MemoUtils.html#v:stableMup"},{"display_html":"<a href=\"#v:stableMemoFix\">stableMemoFix</a> :: ((a -&gt; b) -&gt; a -&gt; b) -&gt; a -&gt; b","name":"stableMemoFix","module":"Grisette.Internal.Core.Data.MemoUtils","link":"Grisette-Internal-Core-Data-MemoUtils.html#v:stableMemoFix"},{"display_html":"<a href=\"#v:weakStableMemo\">weakStableMemo</a> :: (a -&gt; b) -&gt; a -&gt; b","name":"weakStableMemo","module":"Grisette.Internal.Core.Data.MemoUtils","link":"Grisette-Internal-Core-Data-MemoUtils.html#v:weakStableMemo"},{"display_html":"<a href=\"#v:weakStableMemo2\">weakStableMemo2</a> :: (a -&gt; b -&gt; c) -&gt; a -&gt; b -&gt; c","name":"weakStableMemo2","module":"Grisette.Internal.Core.Data.MemoUtils","link":"Grisette-Internal-Core-Data-MemoUtils.html#v:weakStableMemo2"},{"display_html":"<a href=\"#v:weakStableMemo3\">weakStableMemo3</a> :: (a -&gt; b -&gt; c -&gt; d) -&gt; a -&gt; b -&gt; c -&gt; d","name":"weakStableMemo3","module":"Grisette.Internal.Core.Data.MemoUtils","link":"Grisette-Internal-Core-Data-MemoUtils.html#v:weakStableMemo3"},{"display_html":"<a href=\"#v:weakStableMup\">weakStableMup</a> :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c","name":"weakStableMup","module":"Grisette.Internal.Core.Data.MemoUtils","link":"Grisette-Internal-Core-Data-MemoUtils.html#v:weakStableMup"},{"display_html":"<a href=\"#v:weakStableMemoFix\">weakStableMemoFix</a> :: ((a -&gt; b) -&gt; a -&gt; b) -&gt; a -&gt; b","name":"weakStableMemoFix","module":"Grisette.Internal.Core.Data.MemoUtils","link":"Grisette-Internal-Core-Data-MemoUtils.html#v:weakStableMemoFix"},{"display_html":"<a href=\"#v:htmemo\">htmemo</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> k, <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> k) =&gt; (k -&gt; a) -&gt; k -&gt; a","name":"htmemo","module":"Grisette.Internal.Core.Data.MemoUtils","link":"Grisette-Internal-Core-Data-MemoUtils.html#v:htmemo"},{"display_html":"<a href=\"#v:htmemo2\">htmemo2</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> k1, <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> k1, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> k2, <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> k2) =&gt; (k1 -&gt; k2 -&gt; a) -&gt; k1 -&gt; k2 -&gt; a","name":"htmemo2","module":"Grisette.Internal.Core.Data.MemoUtils","link":"Grisette-Internal-Core-Data-MemoUtils.html#v:htmemo2"},{"display_html":"<a href=\"#v:htmemo3\">htmemo3</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> k1, <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> k1, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> k2, <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> k2, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> k3, <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> k3) =&gt; (k1 -&gt; k2 -&gt; k3 -&gt; a) -&gt; k1 -&gt; k2 -&gt; k3 -&gt; a","name":"htmemo3","module":"Grisette.Internal.Core.Data.MemoUtils","link":"Grisette-Internal-Core-Data-MemoUtils.html#v:htmemo3"},{"display_html":"<a href=\"#v:htmemoFix\">htmemoFix</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> k, <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> k) =&gt; ((k -&gt; a) -&gt; k -&gt; a) -&gt; k -&gt; a","name":"htmemoFix","module":"Grisette.Internal.Core.Data.MemoUtils","link":"Grisette-Internal-Core-Data-MemoUtils.html#v:htmemoFix"},{"display_html":"<a href=\"#v:htmup\">htmup</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> k, <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> k) =&gt; (b -&gt; c) -&gt; (k -&gt; b) -&gt; k -&gt; c","name":"htmup","module":"Grisette.Internal.Core.Data.MemoUtils","link":"Grisette-Internal-Core-Data-MemoUtils.html#v:htmup"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SExpr\">SExpr</a><ul class=\"subs\"><li>= <a href=\"#v:Atom\">Atom</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li>| <a href=\"#v:List\">List</a> [<a href=\"Grisette-Internal-Core-Data-SExpr.html#t:SExpr\" title=\"Grisette.Internal.Core.Data.SExpr\">SExpr</a>]</li><li>| <a href=\"#v:NumberAtom\">NumberAtom</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integer\" title=\"Prelude\">Integer</a></li><li>| <a href=\"#v:BoolAtom\">BoolAtom</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li></ul>","name":"SExpr List Atom NumberAtom BoolAtom","module":"Grisette.Internal.Core.Data.SExpr","link":"Grisette-Internal-Core-Data-SExpr.html#t:SExpr"},{"display_html":"<a href=\"#v:showsSExprWithParens\">showsSExprWithParens</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; <a href=\"Grisette-Internal-Core-Data-SExpr.html#t:SExpr\" title=\"Grisette.Internal.Core.Data.SExpr\">SExpr</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:ShowS\" title=\"Prelude\">ShowS</a>","name":"showsSExprWithParens","module":"Grisette.Internal.Core.Data.SExpr","link":"Grisette-Internal-Core-Data-SExpr.html#v:showsSExprWithParens"},{"display_html":"<a href=\"#v:parseFileLocation\">parseFileLocation</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"Grisette-Internal-Core-Data-SExpr.html#t:SExpr\" title=\"Grisette.Internal.Core.Data.SExpr\">SExpr</a>","name":"parseFileLocation","module":"Grisette.Internal.Core.Data.SExpr","link":"Grisette-Internal-Core-Data-SExpr.html#v:parseFileLocation"},{"display_html":"<a href=\"#v:fileLocation\">fileLocation</a> :: <a href=\"https://hackage.haskell.org/package/th-compat-0.1.5/docs/Language-Haskell-TH-Syntax-Compat.html#t:SpliceQ\" title=\"Language.Haskell.TH.Syntax.Compat\">SpliceQ</a> <a href=\"Grisette-Internal-Core-Data-SExpr.html#t:SExpr\" title=\"Grisette.Internal.Core.Data.SExpr\">SExpr</a>","name":"fileLocation","module":"Grisette.Internal.Core.Data.SExpr","link":"Grisette-Internal-Core-Data-SExpr.html#v:fileLocation"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Identifier\">Identifier</a> = <a href=\"#v:Identifier\">Identifier</a> {<ul class=\"subs\"><li><a href=\"#v:baseIdent\">baseIdent</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"Grisette-Internal-Core-Data-SExpr.html#t:SExpr\" title=\"Grisette.Internal.Core.Data.SExpr\">SExpr</a></li></ul>}","name":"Identifier Identifier baseIdent metadata","module":"Grisette.Internal.Core.Data.Symbol","link":"Grisette-Internal-Core-Data-Symbol.html#t:Identifier"},{"display_html":"<a href=\"#v:identifier\">identifier</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a>","name":"identifier","module":"Grisette.Internal.Core.Data.Symbol","link":"Grisette-Internal-Core-Data-Symbol.html#v:identifier"},{"display_html":"<a href=\"#v:withMetadata\">withMetadata</a> :: <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:AsMetadata\" title=\"Grisette.Internal.Core.Data.Symbol\">AsMetadata</a> a =&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; a -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a>","name":"withMetadata","module":"Grisette.Internal.Core.Data.Symbol","link":"Grisette-Internal-Core-Data-Symbol.html#v:withMetadata"},{"display_html":"<a href=\"#v:withLocation\">withLocation</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; <a href=\"https://hackage.haskell.org/package/th-compat-0.1.5/docs/Language-Haskell-TH-Syntax-Compat.html#t:SpliceQ\" title=\"Language.Haskell.TH.Syntax.Compat\">SpliceQ</a> <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a>","name":"withLocation","module":"Grisette.Internal.Core.Data.Symbol","link":"Grisette-Internal-Core-Data-Symbol.html#v:withLocation"},{"display_html":"<a href=\"#v:mapMetadata\">mapMetadata</a> :: <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:AsMetadata\" title=\"Grisette.Internal.Core.Data.Symbol\">AsMetadata</a> a =&gt; (<a href=\"Grisette-Internal-Core-Data-SExpr.html#t:SExpr\" title=\"Grisette.Internal.Core.Data.SExpr\">SExpr</a> -&gt; a) -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a>","name":"mapMetadata","module":"Grisette.Internal.Core.Data.Symbol","link":"Grisette-Internal-Core-Data-Symbol.html#v:mapMetadata"},{"display_html":"<a href=\"#v:uniqueIdentifier\">uniqueIdentifier</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a>","name":"uniqueIdentifier","module":"Grisette.Internal.Core.Data.Symbol","link":"Grisette-Internal-Core-Data-Symbol.html#v:uniqueIdentifier"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Symbol\">Symbol</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:SimpleSymbol\">SimpleSymbol</a> :: <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Symbol\" title=\"Grisette.Internal.Core.Data.Symbol\">Symbol</a></li><li><a href=\"#v:IndexedSymbol\">IndexedSymbol</a> :: <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Symbol\" title=\"Grisette.Internal.Core.Data.Symbol\">Symbol</a></li></ul>","name":"Symbol IndexedSymbol SimpleSymbol","module":"Grisette.Internal.Core.Data.Symbol","link":"Grisette-Internal-Core-Data-Symbol.html#t:Symbol"},{"display_html":"<a href=\"#v:simple\">simple</a> :: <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Symbol\" title=\"Grisette.Internal.Core.Data.Symbol\">Symbol</a>","name":"simple","module":"Grisette.Internal.Core.Data.Symbol","link":"Grisette-Internal-Core-Data-Symbol.html#v:simple"},{"display_html":"<a href=\"#v:indexed\">indexed</a> :: <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Symbol\" title=\"Grisette.Internal.Core.Data.Symbol\">Symbol</a>","name":"indexed","module":"Grisette.Internal.Core.Data.Symbol","link":"Grisette-Internal-Core-Data-Symbol.html#v:indexed"},{"display_html":"<a href=\"#v:symbolIdentifier\">symbolIdentifier</a> :: <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Symbol\" title=\"Grisette.Internal.Core.Data.Symbol\">Symbol</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a>","name":"symbolIdentifier","module":"Grisette.Internal.Core.Data.Symbol","link":"Grisette-Internal-Core-Data-Symbol.html#v:symbolIdentifier"},{"display_html":"<a href=\"#v:mapIdentifier\">mapIdentifier</a> :: (<a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a>) -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Symbol\" title=\"Grisette.Internal.Core.Data.Symbol\">Symbol</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Symbol\" title=\"Grisette.Internal.Core.Data.Symbol\">Symbol</a>","name":"mapIdentifier","module":"Grisette.Internal.Core.Data.Symbol","link":"Grisette-Internal-Core-Data-Symbol.html#v:mapIdentifier"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:AsMetadata\">AsMetadata</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:asMetadata\">asMetadata</a> :: a -&gt; <a href=\"Grisette-Internal-Core-Data-SExpr.html#t:SExpr\" title=\"Grisette.Internal.Core.Data.SExpr\">SExpr</a></li><li><a href=\"#v:fromMetadata\">fromMetadata</a> :: <a href=\"Grisette-Internal-Core-Data-SExpr.html#t:SExpr\" title=\"Grisette.Internal.Core.Data.SExpr\">SExpr</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> a</li></ul>","name":"AsMetadata asMetadata fromMetadata","module":"Grisette.Internal.Core.Data.Symbol","link":"Grisette-Internal-Core-Data-Symbol.html#t:AsMetadata"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:Metadata\">Metadata</a> :: <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:AsMetadata\" title=\"Grisette.Internal.Core.Data.Symbol\">AsMetadata</a> a =&gt; a -&gt; <a href=\"Grisette-Internal-Core-Data-SExpr.html#t:SExpr\" title=\"Grisette.Internal.Core.Data.SExpr\">SExpr</a>","name":"Metadata","module":"Grisette.Internal.Core.Data.Symbol","link":"Grisette-Internal-Core-Data-Symbol.html#v:Metadata"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:IsString\" title=\"Data.String\">IsString</a> t =&gt; <a href=\"#t:Solvable\">Solvable</a> c t | t -&gt; c <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:con\">con</a> :: c -&gt; t</li><li><a href=\"#v:conView\">conView</a> :: t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> c</li><li><a href=\"#v:sym\">sym</a> :: <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Symbol\" title=\"Grisette.Internal.Core.Data.Symbol\">Symbol</a> -&gt; t</li><li><a href=\"#v:ssym\">ssym</a> :: <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; t</li><li><a href=\"#v:isym\">isym</a> :: <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; t</li></ul>","name":"Solvable sym con isym conView ssym $dmisym $dmssym","module":"Grisette.Internal.Core.Data.Class.Solvable","link":"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:Con\">Con</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> c t =&gt; c -&gt; t","name":"Con","module":"Grisette.Internal.Core.Data.Class.Solvable","link":"Grisette-Internal-Core-Data-Class-Solvable.html#v:Con"},{"display_html":"<a href=\"#v:slocsym\">slocsym</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> c s =&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; <a href=\"https://hackage.haskell.org/package/th-compat-0.1.5/docs/Language-Haskell-TH-Syntax-Compat.html#t:SpliceQ\" title=\"Language.Haskell.TH.Syntax.Compat\">SpliceQ</a> s","name":"slocsym","module":"Grisette.Internal.Core.Data.Class.Solvable","link":"Grisette-Internal-Core-Data-Class-Solvable.html#v:slocsym"},{"display_html":"<a href=\"#v:ilocsym\">ilocsym</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> c s =&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/th-compat-0.1.5/docs/Language-Haskell-TH-Syntax-Compat.html#t:SpliceQ\" title=\"Language.Haskell.TH.Syntax.Compat\">SpliceQ</a> s","name":"ilocsym","module":"Grisette.Internal.Core.Data.Class.Solvable","link":"Grisette-Internal-Core-Data-Class-Solvable.html#v:ilocsym"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:AlgRealPoly\">AlgRealPoly</a> = <a href=\"#v:AlgRealPoly\">AlgRealPoly</a> [(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integer\" title=\"Prelude\">Integer</a>, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integer\" title=\"Prelude\">Integer</a>)]","name":"AlgRealPoly AlgRealPoly","module":"Grisette.Internal.SymPrim.AlgReal","link":"Grisette-Internal-SymPrim-AlgReal.html#t:AlgRealPoly"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UnsupportedAlgRealOperation\">UnsupportedAlgRealOperation</a> = <a href=\"#v:UnsupportedAlgRealOperation\">UnsupportedAlgRealOperation</a> {<ul class=\"subs\"><li><a href=\"#v:op\">op</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li><li><a href=\"#v:msg\">msg</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li></ul>}","name":"UnsupportedAlgRealOperation UnsupportedAlgRealOperation msg op","module":"Grisette.Internal.SymPrim.AlgReal","link":"Grisette-Internal-SymPrim-AlgReal.html#t:UnsupportedAlgRealOperation"},{"display_html":"<a href=\"#v:toSBVAlgReal\">toSBVAlgReal</a> :: <a href=\"Grisette-Internal-SymPrim-AlgReal.html#t:AlgReal\" title=\"Grisette.Internal.SymPrim.AlgReal\">AlgReal</a> -&gt; <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:AlgReal\" title=\"Data.SBV.Internals\">AlgReal</a>","name":"toSBVAlgReal","module":"Grisette.Internal.SymPrim.AlgReal","link":"Grisette-Internal-SymPrim-AlgReal.html#v:toSBVAlgReal"},{"display_html":"<a href=\"#v:fromSBVAlgReal\">fromSBVAlgReal</a> :: <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:AlgReal\" title=\"Data.SBV.Internals\">AlgReal</a> -&gt; <a href=\"Grisette-Internal-SymPrim-AlgReal.html#t:AlgReal\" title=\"Grisette.Internal.SymPrim.AlgReal\">AlgReal</a>","name":"fromSBVAlgReal","module":"Grisette.Internal.SymPrim.AlgReal","link":"Grisette-Internal-SymPrim-AlgReal.html#v:fromSBVAlgReal"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:RealPoint\">RealPoint</a><ul class=\"subs\"><li>= <a href=\"#v:OpenPoint\">OpenPoint</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Rational\" title=\"Prelude\">Rational</a></li><li>| <a href=\"#v:ClosedPoint\">ClosedPoint</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Rational\" title=\"Prelude\">Rational</a></li></ul>","name":"RealPoint OpenPoint ClosedPoint","module":"Grisette.Internal.SymPrim.AlgReal","link":"Grisette-Internal-SymPrim-AlgReal.html#t:RealPoint"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AlgReal\">AlgReal</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:AlgExactRational\">AlgExactRational</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Rational\" title=\"Prelude\">Rational</a> -&gt; <a href=\"Grisette-Internal-SymPrim-AlgReal.html#t:AlgReal\" title=\"Grisette.Internal.SymPrim.AlgReal\">AlgReal</a></li><li><a href=\"#v:AlgInexactRational\">AlgInexactRational</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Rational\" title=\"Prelude\">Rational</a> -&gt; <a href=\"Grisette-Internal-SymPrim-AlgReal.html#t:AlgReal\" title=\"Grisette.Internal.SymPrim.AlgReal\">AlgReal</a></li><li><a href=\"#v:AlgPolyRoot\">AlgPolyRoot</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integer\" title=\"Prelude\">Integer</a> -&gt; <a href=\"Grisette-Internal-SymPrim-AlgReal.html#t:AlgRealPoly\" title=\"Grisette.Internal.SymPrim.AlgReal\">AlgRealPoly</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"Grisette-Internal-SymPrim-AlgReal.html#t:AlgReal\" title=\"Grisette.Internal.SymPrim.AlgReal\">AlgReal</a></li><li><a href=\"#v:AlgInterval\">AlgInterval</a> :: <a href=\"Grisette-Internal-SymPrim-AlgReal.html#t:RealPoint\" title=\"Grisette.Internal.SymPrim.AlgReal\">RealPoint</a> -&gt; <a href=\"Grisette-Internal-SymPrim-AlgReal.html#t:RealPoint\" title=\"Grisette.Internal.SymPrim.AlgReal\">RealPoint</a> -&gt; <a href=\"Grisette-Internal-SymPrim-AlgReal.html#t:AlgReal\" title=\"Grisette.Internal.SymPrim.AlgReal\">AlgReal</a></li></ul>","name":"AlgReal AlgPolyRoot AlgInterval AlgExactRational AlgInexactRational","module":"Grisette.Internal.SymPrim.AlgReal","link":"Grisette-Internal-SymPrim-AlgReal.html#t:AlgReal"},{"display_html":"<a href=\"#v:intBitwidthQ\">intBitwidthQ</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:TypeQ\" title=\"Language.Haskell.TH.Lib\">TypeQ</a>","name":"intBitwidthQ","module":"Grisette.Internal.SymPrim.IntBitwidth","link":"Grisette-Internal-SymPrim-IntBitwidth.html#v:intBitwidthQ"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:Dyn\">Dyn</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> b) =&gt; a -&gt; b","name":"Dyn","module":"Grisette.Internal.SymPrim.Prim.Internal.Utils","link":"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#v:Dyn"},{"display_html":"<a href=\"#v:cmpHetero\">cmpHetero</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> b) =&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; a -&gt; b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"cmpHetero","module":"Grisette.Internal.SymPrim.Prim.Internal.Utils","link":"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#v:cmpHetero"},{"display_html":"<a href=\"#v:eqHetero\">eqHetero</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) =&gt; a -&gt; b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"eqHetero","module":"Grisette.Internal.SymPrim.Prim.Internal.Utils","link":"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#v:eqHetero"},{"display_html":"<a href=\"#v:cmpHeteroRep\">cmpHeteroRep</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Type-Reflection.html#t:TypeRep\" title=\"Type.Reflection\">TypeRep</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Type-Reflection.html#t:TypeRep\" title=\"Type.Reflection\">TypeRep</a> b -&gt; (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; a -&gt; b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"cmpHeteroRep","module":"Grisette.Internal.SymPrim.Prim.Internal.Utils","link":"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#v:cmpHeteroRep"},{"display_html":"<a href=\"#v:eqHeteroRep\">eqHeteroRep</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Type-Reflection.html#t:TypeRep\" title=\"Type.Reflection\">TypeRep</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Type-Reflection.html#t:TypeRep\" title=\"Type.Reflection\">TypeRep</a> b -&gt; a -&gt; b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"eqHeteroRep","module":"Grisette.Internal.SymPrim.Prim.Internal.Utils","link":"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#v:eqHeteroRep"},{"display_html":"<a href=\"#v:eqTypeRepBool\">eqTypeRepBool</a> :: <span class=\"keyword\">forall</span> ka kb (a :: ka) (b :: kb). <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Type-Reflection.html#t:TypeRep\" title=\"Type.Reflection\">TypeRep</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Type-Reflection.html#t:TypeRep\" title=\"Type.Reflection\">TypeRep</a> b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"eqTypeRepBool","module":"Grisette.Internal.SymPrim.Prim.Internal.Utils","link":"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#v:eqTypeRepBool"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:WeakThreadId\">WeakThreadId</a> = <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a>","name":"WeakThreadId","module":"Grisette.Internal.SymPrim.Prim.Internal.Utils","link":"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#t:WeakThreadId"},{"display_html":"<a href=\"#v:weakThreadId\">weakThreadId</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Concurrent.html#t:ThreadId\" title=\"Control.Concurrent\">ThreadId</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a>","name":"weakThreadId","module":"Grisette.Internal.SymPrim.Prim.Internal.Utils","link":"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#v:weakThreadId"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:WeakThreadIdRef\">WeakThreadIdRef</a> = <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/System-Mem-Weak.html#t:Weak\" title=\"System.Mem.Weak\">Weak</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Concurrent.html#t:ThreadId\" title=\"Control.Concurrent\">ThreadId</a>","name":"WeakThreadIdRef","module":"Grisette.Internal.SymPrim.Prim.Internal.Utils","link":"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#t:WeakThreadIdRef"},{"display_html":"<a href=\"#v:myWeakThreadId\">myWeakThreadId</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#t:WeakThreadId\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Utils\">WeakThreadId</a>","name":"myWeakThreadId","module":"Grisette.Internal.SymPrim.Prim.Internal.Utils","link":"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#v:myWeakThreadId"},{"display_html":"<a href=\"#v:weakThreadRefAlive\">weakThreadRefAlive</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#t:WeakThreadIdRef\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Utils\">WeakThreadIdRef</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"weakThreadRefAlive","module":"Grisette.Internal.SymPrim.Prim.Internal.Utils","link":"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#v:weakThreadRefAlive"},{"display_html":"<a href=\"#v:mkWeakThreadIdRefWithFinalizer\">mkWeakThreadIdRefWithFinalizer</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Concurrent.html#t:ThreadId\" title=\"Control.Concurrent\">ThreadId</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> () -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/System-Mem-Weak.html#t:Weak\" title=\"System.Mem.Weak\">Weak</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Concurrent.html#t:ThreadId\" title=\"Control.Concurrent\">ThreadId</a>)","name":"mkWeakThreadIdRefWithFinalizer","module":"Grisette.Internal.SymPrim.Prim.Internal.Utils","link":"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#v:mkWeakThreadIdRefWithFinalizer"},{"display_html":"<a href=\"#v:addStableNameFinalizer\">addStableNameFinalizer</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-StableName.html#t:StableName\" title=\"GHC.StableName\">StableName</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> () -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ()","name":"addStableNameFinalizer","module":"Grisette.Internal.SymPrim.Prim.Internal.Utils","link":"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#v:addStableNameFinalizer"},{"display_html":"<a href=\"#v:addThreadIdFinalizer\">addThreadIdFinalizer</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Concurrent.html#t:ThreadId\" title=\"Control.Concurrent\">ThreadId</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> () -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ()","name":"addThreadIdFinalizer","module":"Grisette.Internal.SymPrim.Prim.Internal.Utils","link":"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#v:addThreadIdFinalizer"},{"display_html":"<a href=\"#v:mkWeakStableNameRefWithFinalizer\">mkWeakStableNameRefWithFinalizer</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-StableName.html#t:StableName\" title=\"GHC.StableName\">StableName</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> () -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/System-Mem-Weak.html#t:Weak\" title=\"System.Mem.Weak\">Weak</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-StableName.html#t:StableName\" title=\"GHC.StableName\">StableName</a> a))","name":"mkWeakStableNameRefWithFinalizer","module":"Grisette.Internal.SymPrim.Prim.Internal.Utils","link":"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#v:mkWeakStableNameRefWithFinalizer"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeStableName\">SomeStableName</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:SomeStableName\">SomeStableName</a> :: <span class=\"keyword\">forall</span> a. <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-StableName.html#t:StableName\" title=\"GHC.StableName\">StableName</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#t:SomeStableName\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Utils\">SomeStableName</a></li></ul>","name":"SomeStableName SomeStableName","module":"Grisette.Internal.SymPrim.Prim.Internal.Utils","link":"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#t:SomeStableName"},{"display_html":"<a href=\"#v:mkWeakSomeStableNameRefWithFinalizer\">mkWeakSomeStableNameRefWithFinalizer</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#t:SomeStableName\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Utils\">SomeStableName</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> () -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/System-Mem-Weak.html#t:Weak\" title=\"System.Mem.Weak\">Weak</a> <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#t:SomeStableName\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Utils\">SomeStableName</a>)","name":"mkWeakSomeStableNameRefWithFinalizer","module":"Grisette.Internal.SymPrim.Prim.Internal.Utils","link":"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#v:mkWeakSomeStableNameRefWithFinalizer"},{"display_html":"<a href=\"#v:mkWeakSomeStableNameRef\">mkWeakSomeStableNameRef</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#t:SomeStableName\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Utils\">SomeStableName</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/System-Mem-Weak.html#t:Weak\" title=\"System.Mem.Weak\">Weak</a> <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#t:SomeStableName\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Utils\">SomeStableName</a>)","name":"mkWeakSomeStableNameRef","module":"Grisette.Internal.SymPrim.Prim.Internal.Utils","link":"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#v:mkWeakSomeStableNameRef"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeStableName\">SomeStableName</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:SomeStableName\">SomeStableName</a> :: <span class=\"keyword\">forall</span> a. <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-StableName.html#t:StableName\" title=\"GHC.StableName\">StableName</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:SomeStableName\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Caches\">SomeStableName</a></li></ul>","name":"SomeStableName SomeStableName","module":"Grisette.Internal.SymPrim.Prim.Internal.Caches","link":"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:SomeStableName"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Id\">Id</a> = <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a>","name":"Id","module":"Grisette.Internal.SymPrim.Prim.Internal.Caches","link":"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:Id"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:StableIdent\">StableIdent</a> = <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-StableName.html#t:StableName\" title=\"GHC.StableName\">StableName</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Exts.html#t:Any\" title=\"GHC.Exts\">Any</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"StableIdent","module":"Grisette.Internal.SymPrim.Prim.Internal.Caches","link":"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:StableIdent"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Digest\">Digest</a> = <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a>","name":"Digest","module":"Grisette.Internal.SymPrim.Prim.Internal.Caches","link":"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:Digest"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CachedInfo\">CachedInfo</a> = <a href=\"#v:CachedInfo\">CachedInfo</a> {<ul class=\"subs\"><li><a href=\"#v:cachedThreadId\">cachedThreadId</a> :: !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#t:WeakThreadId\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Utils\">WeakThreadId</a></li><li><a href=\"#v:cachedDigest\">cachedDigest</a> :: !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:Digest\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Caches\">Digest</a></li><li><a href=\"#v:cachedId\">cachedId</a> :: !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:Id\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Caches\">Id</a></li><li><a href=\"#v:cachedStableIdent\">cachedStableIdent</a> :: !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:StableIdent\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Caches\">StableIdent</a></li></ul>}","name":"CachedInfo CachedInfo cachedDigest cachedId cachedStableIdent cachedThreadId","module":"Grisette.Internal.SymPrim.Prim.Internal.Caches","link":"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:CachedInfo"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Interned\">Interned</a> t <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">data</span> <a href=\"#t:Description\">Description</a> t</li><li><span class=\"keyword\">type</span> <a href=\"#t:Uninterned\">Uninterned</a> t</li><li><a href=\"#v:describe\">describe</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:Uninterned\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Caches\">Uninterned</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:Description\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Caches\">Description</a> t</li><li><a href=\"#v:identify\">identify</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Caches\">CachedInfo</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:Uninterned\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Caches\">Uninterned</a> t -&gt; t</li><li><a href=\"#v:threadId\">threadId</a> :: t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#t:WeakThreadId\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Utils\">WeakThreadId</a></li><li><a href=\"#v:descriptionDigest\">descriptionDigest</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:Description\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Caches\">Description</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:Digest\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Caches\">Digest</a></li></ul>","name":"Interned Description Uninterned describe descriptionDigest identify threadId","module":"Grisette.Internal.SymPrim.Prim.Internal.Caches","link":"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:Interned"},{"display_html":"<a href=\"#v:intern\">intern</a> :: (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:Interned\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Caches\">Interned</a> t, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> t, <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:Description\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Caches\">Description</a> t), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:Description\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Caches\">Description</a> t)) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:Uninterned\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Caches\">Uninterned</a> t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> t","name":"intern","module":"Grisette.Internal.SymPrim.Prim.Internal.Caches","link":"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#v:intern"},{"display_html":"<a href=\"#v:haveCache\">haveCache</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"haveCache","module":"Grisette.Internal.SymPrim.Prim.Internal.Caches","link":"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#v:haveCache"},{"display_html":"<a href=\"#v:threadCacheSize\">threadCacheSize</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#t:WeakThreadId\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Utils\">WeakThreadId</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"threadCacheSize","module":"Grisette.Internal.SymPrim.Prim.Internal.Caches","link":"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#v:threadCacheSize"},{"display_html":"<a href=\"#v:threadCacheLiveSize\">threadCacheLiveSize</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#t:WeakThreadId\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Utils\">WeakThreadId</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"threadCacheLiveSize","module":"Grisette.Internal.SymPrim.Prim.Internal.Caches","link":"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#v:threadCacheLiveSize"},{"display_html":"<a href=\"#v:withNameTransformer\">withNameTransformer</a> :: ([<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]) -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>) -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"withNameTransformer","module":"Grisette.Internal.TH.Ctor.Common","link":"Grisette-Internal-TH-Ctor-Common.html#v:withNameTransformer"},{"display_html":"<a href=\"#v:prefixTransformer\">prefixTransformer</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"prefixTransformer","module":"Grisette.Internal.TH.Ctor.Common","link":"Grisette-Internal-TH-Ctor-Common.html#v:prefixTransformer"},{"display_html":"<a href=\"#v:decapitalizeTransformer\">decapitalizeTransformer</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"decapitalizeTransformer","module":"Grisette.Internal.TH.Ctor.Common","link":"Grisette-Internal-TH-Ctor-Common.html#v:decapitalizeTransformer"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:EvalModeTag\">EvalModeTag</a><ul class=\"subs\"><li>= <a href=\"#v:C\">C</a></li><li>| <a href=\"#v:S\">S</a></li></ul>","name":"EvalModeTag C S","module":"Grisette.Internal.Unified.EvalModeTag","link":"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:IsConMode\">IsConMode</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) = (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) <span class=\"keyword\">|</span> r -&gt; mode <span class=\"keyword\">where ...</span>","name":"IsConMode","module":"Grisette.Internal.Unified.EvalModeTag","link":"Grisette-Internal-Unified-EvalModeTag.html#t:IsConMode"},{"display_html":"<a href=\"#v:constructorInfoToType\">constructorInfoToType</a> :: <a href=\"https://hackage.haskell.org/package/th-abstraction-0.7.1.0/docs/Language-Haskell-TH-Datatype.html#t:DatatypeInfo\" title=\"Language.Haskell.TH.Datatype\">DatatypeInfo</a> -&gt; <a href=\"https://hackage.haskell.org/package/th-abstraction-0.7.1.0/docs/Language-Haskell-TH-Datatype.html#t:ConstructorInfo\" title=\"Language.Haskell.TH.Datatype\">ConstructorInfo</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>","name":"constructorInfoToType","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:constructorInfoToType"},{"display_html":"<a href=\"#v:tvIsMode\">tvIsMode</a> :: <a href=\"https://hackage.haskell.org/package/th-abstraction-0.7.1.0/docs/Language-Haskell-TH-Datatype-TyVarBndr.html#t:TyVarBndr_\" title=\"Language.Haskell.TH.Datatype.TyVarBndr\">TyVarBndr_</a> flag -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"tvIsMode","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:tvIsMode"},{"display_html":"<a href=\"#v:tvIsNat\">tvIsNat</a> :: <a href=\"https://hackage.haskell.org/package/th-abstraction-0.7.1.0/docs/Language-Haskell-TH-Datatype-TyVarBndr.html#t:TyVarBndr_\" title=\"Language.Haskell.TH.Datatype.TyVarBndr\">TyVarBndr_</a> flag -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"tvIsNat","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:tvIsNat"},{"display_html":"<a href=\"#v:tvIsStar\">tvIsStar</a> :: <a href=\"https://hackage.haskell.org/package/th-abstraction-0.7.1.0/docs/Language-Haskell-TH-Datatype-TyVarBndr.html#t:TyVarBndr_\" title=\"Language.Haskell.TH.Datatype.TyVarBndr\">TyVarBndr_</a> flag -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"tvIsStar","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:tvIsStar"},{"display_html":"<a href=\"#v:tvIsStarToStar\">tvIsStarToStar</a> :: <a href=\"https://hackage.haskell.org/package/th-abstraction-0.7.1.0/docs/Language-Haskell-TH-Datatype-TyVarBndr.html#t:TyVarBndr_\" title=\"Language.Haskell.TH.Datatype.TyVarBndr\">TyVarBndr_</a> flag -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"tvIsStarToStar","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:tvIsStarToStar"},{"display_html":"<a href=\"#v:substDataType\">substDataType</a> :: <a href=\"https://hackage.haskell.org/package/th-abstraction-0.7.1.0/docs/Language-Haskell-TH-Datatype.html#t:DatatypeInfo\" title=\"Language.Haskell.TH.Datatype\">DatatypeInfo</a> -&gt; <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/th-abstraction-0.7.1.0/docs/Language-Haskell-TH-Datatype.html#t:DatatypeInfo\" title=\"Language.Haskell.TH.Datatype\">DatatypeInfo</a>","name":"substDataType","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:substDataType"},{"display_html":"<a href=\"#v:reifyDatatypeWithFreshNames\">reifyDatatypeWithFreshNames</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/th-abstraction-0.7.1.0/docs/Language-Haskell-TH-Datatype.html#t:DatatypeInfo\" title=\"Language.Haskell.TH.Datatype\">DatatypeInfo</a>","name":"reifyDatatypeWithFreshNames","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:reifyDatatypeWithFreshNames"},{"display_html":"<a href=\"#v:singleParamClassParamKind\">singleParamClassParamKind</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>","name":"singleParamClassParamKind","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:singleParamClassParamKind"},{"display_html":"<a href=\"#v:binaryClassParamKind\">binaryClassParamKind</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>","name":"binaryClassParamKind","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:binaryClassParamKind"},{"display_html":"<a href=\"#v:getTypeWithMaybeSubst\">getTypeWithMaybeSubst</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:TyVarBndrUnit\" title=\"Language.Haskell.TH.Lib\">TyVarBndrUnit</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>","name":"getTypeWithMaybeSubst","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:getTypeWithMaybeSubst"},{"display_html":"<a href=\"#v:dropLastTypeParam\">dropLastTypeParam</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>","name":"dropLastTypeParam","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:dropLastTypeParam"},{"display_html":"<a href=\"#v:dropNTypeParam\">dropNTypeParam</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>","name":"dropNTypeParam","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:dropNTypeParam"},{"display_html":"<a href=\"#v:classParamKinds\">classParamKinds</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>]","name":"classParamKinds","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:classParamKinds"},{"display_html":"<a href=\"#v:allSameKind\">allSameKind</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:TyVarBndrUnit\" title=\"Language.Haskell.TH.Lib\">TyVarBndrUnit</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"allSameKind","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:allSameKind"},{"display_html":"<a href=\"#v:classNumParam\">classNumParam</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"classNumParam","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:classNumParam"},{"display_html":"<a href=\"#v:kindNumParam\">kindNumParam</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"kindNumParam","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:kindNumParam"},{"display_html":"<a href=\"#v:concatPreds\">concatPreds</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Pred\" title=\"Language.Haskell.TH.Syntax\">Pred</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Pred\" title=\"Language.Haskell.TH.Syntax\">Pred</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Pred\" title=\"Language.Haskell.TH.Syntax\">Pred</a>]","name":"concatPreds","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:concatPreds"},{"display_html":"<a href=\"#v:putHaddock\">putHaddock</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> ()","name":"putHaddock","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:putHaddock"},{"display_html":"<a href=\"#v:allUsedNamesMaybe\">allUsedNamesMaybe</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a> -&gt; <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Set.html#t:Set\" title=\"Data.Set\">Set</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>","name":"allUsedNamesMaybe","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:allUsedNamesMaybe"},{"display_html":"<a href=\"#v:allUsedNames\">allUsedNames</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a> -&gt; <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Set.html#t:Set\" title=\"Data.Set\">Set</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>","name":"allUsedNames","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:allUsedNames"},{"display_html":"<a href=\"#v:isNonUnitTupleString\">isNonUnitTupleString</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"isNonUnitTupleString","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:isNonUnitTupleString"},{"display_html":"<a href=\"#v:isNonUnitTuple\">isNonUnitTuple</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"isNonUnitTuple","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:isNonUnitTuple"},{"display_html":"<a href=\"#v:integerE\">integerE</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>","name":"integerE","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:integerE"},{"display_html":"<a href=\"#v:mangleName\">mangleName</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"mangleName","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:mangleName"},{"display_html":"<a href=\"#v:dataTypeHasExistential\">dataTypeHasExistential</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"dataTypeHasExistential","module":"Grisette.Internal.TH.Util","link":"Grisette-Internal-TH-Util.html#v:dataTypeHasExistential"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TheoryToUnify\">TheoryToUnify</a><ul class=\"subs\"><li>= <a href=\"#v:UBool\">UBool</a></li><li>| <a href=\"#v:UIntN\">UIntN</a></li><li>| <a href=\"#v:UWordN\">UWordN</a></li><li>| <a href=\"#v:UInteger\">UInteger</a></li><li>| <a href=\"#v:UAlgReal\">UAlgReal</a></li><li>| <a href=\"#v:UFP\">UFP</a></li><li>| <a href=\"#v:UFun\">UFun</a> [<a href=\"Grisette-Internal-Unified-Theories.html#t:TheoryToUnify\" title=\"Grisette.Internal.Unified.Theories\">TheoryToUnify</a>]</li></ul>","name":"TheoryToUnify UAlgReal UBool UFP UFun UIntN UInteger UWordN","module":"Grisette.Internal.Unified.Theories","link":"Grisette-Internal-Unified-Theories.html#t:TheoryToUnify"},{"display_html":"<a href=\"#v:isUFun\">isUFun</a> :: <a href=\"Grisette-Internal-Unified-Theories.html#t:TheoryToUnify\" title=\"Grisette.Internal.Unified.Theories\">TheoryToUnify</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"isUFun","module":"Grisette.Internal.Unified.Theories","link":"Grisette-Internal-Unified-Theories.html#v:isUFun"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Arity0\">Arity0</a>","name":"Arity0","module":"Grisette.Internal.Utils.Derive","link":"Grisette-Internal-Utils-Derive.html#t:Arity0"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Arity1\">Arity1</a>","name":"Arity1","module":"Grisette.Internal.Utils.Derive","link":"Grisette-Internal-Utils-Derive.html#t:Arity1"},{"display_html":"<a href=\"#v:unsafeAxiom\">unsafeAxiom</a> :: <span class=\"keyword\">forall</span> {k} (a :: k) (b :: k). a <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t::-126-:\" title=\"Data.Type.Equality\">:~:</a> b","name":"unsafeAxiom","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:unsafeAxiom"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeNatRepr\">SomeNatRepr</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:SomeNatRepr\">SomeNatRepr</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n =&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> n -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:SomeNatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">SomeNatRepr</a></li></ul>","name":"SomeNatRepr SomeNatRepr","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#t:SomeNatRepr"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomePositiveNatRepr\">SomePositiveNatRepr</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:SomePositiveNatRepr\">SomePositiveNatRepr</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> n -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:SomePositiveNatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">SomePositiveNatRepr</a></li></ul>","name":"SomePositiveNatRepr SomePositiveNatRepr","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#t:SomePositiveNatRepr"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:NatRepr\">NatRepr</a> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>)","name":"NatRepr","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#t:NatRepr"},{"display_html":"<a href=\"#v:withKnownNat\">withKnownNat</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) r. <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> n -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n =&gt; r) -&gt; r","name":"withKnownNat","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:withKnownNat"},{"display_html":"<a href=\"#v:natValue\">natValue</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> n -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a>","name":"natValue","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:natValue"},{"display_html":"<a href=\"#v:mkNatRepr\">mkNatRepr</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:SomeNatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">SomeNatRepr</a>","name":"mkNatRepr","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:mkNatRepr"},{"display_html":"<a href=\"#v:mkPositiveNatRepr\">mkPositiveNatRepr</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:SomePositiveNatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">SomePositiveNatRepr</a>","name":"mkPositiveNatRepr","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:mkPositiveNatRepr"},{"display_html":"<a href=\"#v:natRepr\">natRepr</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n =&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> n","name":"natRepr","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:natRepr"},{"display_html":"<a href=\"#v:decNat\">decNat</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a>). 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n =&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> n -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> (n <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-45-\" title=\"GHC.TypeLits\">-</a> 1)","name":"decNat","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:decNat"},{"display_html":"<a href=\"#v:predNat\">predNat</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a>). <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> (n <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> 1) -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> n","name":"predNat","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:predNat"},{"display_html":"<a href=\"#v:incNat\">incNat</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> n -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> (n <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> 1)","name":"incNat","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:incNat"},{"display_html":"<a href=\"#v:addNat\">addNat</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> m -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> n -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> (m <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> n)","name":"addNat","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:addNat"},{"display_html":"<a href=\"#v:subNat\">subNat</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). n <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> m =&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> m -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> n -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> (m <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-45-\" title=\"GHC.TypeLits\">-</a> n)","name":"subNat","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:subNat"},{"display_html":"<a href=\"#v:divNat\">divNat</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a>) (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n =&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> m -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> n -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Div\" title=\"GHC.TypeLits\">Div</a> m n)","name":"divNat","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:divNat"},{"display_html":"<a href=\"#v:halfNat\">halfNat</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a>). <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> (n <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> n) -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> n","name":"halfNat","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:halfNat"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:KnownProof\">KnownProof</a> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:KnownProof\">KnownProof</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n =&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:KnownProof\" title=\"Grisette.Internal.Utils.Parameterized\">KnownProof</a> n</li></ul>","name":"KnownProof KnownProof","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#t:KnownProof"},{"display_html":"<a href=\"#v:hasRepr\">hasRepr</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> n -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:KnownProof\" title=\"Grisette.Internal.Utils.Parameterized\">KnownProof</a> n","name":"hasRepr","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:hasRepr"},{"display_html":"<a href=\"#v:withKnownProof\">withKnownProof</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) r. <a href=\"Grisette-Internal-Utils-Parameterized.html#t:KnownProof\" title=\"Grisette.Internal.Utils.Parameterized\">KnownProof</a> n -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n =&gt; r) -&gt; r","name":"withKnownProof","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:withKnownProof"},{"display_html":"<a href=\"#v:unsafeKnownProof\">unsafeKnownProof</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:KnownProof\" title=\"Grisette.Internal.Utils.Parameterized\">KnownProof</a> n","name":"unsafeKnownProof","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:unsafeKnownProof"},{"display_html":"<a href=\"#v:knownAdd\">knownAdd</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-Utils-Parameterized.html#t:KnownProof\" title=\"Grisette.Internal.Utils.Parameterized\">KnownProof</a> m -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:KnownProof\" title=\"Grisette.Internal.Utils.Parameterized\">KnownProof</a> n -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:KnownProof\" title=\"Grisette.Internal.Utils.Parameterized\">KnownProof</a> (m <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> n)","name":"knownAdd","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:knownAdd"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CmpNatProof\">CmpNatProof</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (o :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:CmpNatProof\">CmpNatProof</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (o :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:CmpNat\" title=\"GHC.TypeLits\">CmpNat</a> m n <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-61--61-\" title=\"Data.Type.Equality\">==</a> o) <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#v:True\" title=\"Data.Bool\">True</a> =&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:CmpNatProof\" title=\"Grisette.Internal.Utils.Parameterized\">CmpNatProof</a> m n o</li></ul>","name":"CmpNatProof CmpNatProof","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#t:CmpNatProof"},{"display_html":"<a href=\"#v:unsafeCmpNatProof\">unsafeCmpNatProof</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (o :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>). <a href=\"Grisette-Internal-Utils-Parameterized.html#t:CmpNatProof\" title=\"Grisette.Internal.Utils.Parameterized\">CmpNatProof</a> m n o","name":"unsafeCmpNatProof","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:unsafeCmpNatProof"},{"display_html":"<a href=\"#v:withCmpNatProof\">withCmpNatProof</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (o :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) r. <a href=\"Grisette-Internal-Utils-Parameterized.html#t:CmpNatProof\" title=\"Grisette.Internal.Utils.Parameterized\">CmpNatProof</a> m n o -&gt; ((<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:CmpNat\" title=\"GHC.TypeLits\">CmpNat</a> m n <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-61--61-\" title=\"Data.Type.Equality\">==</a> o) <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#v:True\" title=\"Data.Bool\">True</a> =&gt; r) -&gt; r","name":"withCmpNatProof","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:withCmpNatProof"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:LeqProof\">LeqProof</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:LeqProof\">LeqProof</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). m <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n =&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:LeqProof\" title=\"Grisette.Internal.Utils.Parameterized\">LeqProof</a> m n</li></ul>","name":"LeqProof LeqProof","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#t:LeqProof"},{"display_html":"<a href=\"#v:withLeqProof\">withLeqProof</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) r. <a href=\"Grisette-Internal-Utils-Parameterized.html#t:LeqProof\" title=\"Grisette.Internal.Utils.Parameterized\">LeqProof</a> m n -&gt; (m <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n =&gt; r) -&gt; r","name":"withLeqProof","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:withLeqProof"},{"display_html":"<a href=\"#v:unsafeLeqProof\">unsafeLeqProof</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-Utils-Parameterized.html#t:LeqProof\" title=\"Grisette.Internal.Utils.Parameterized\">LeqProof</a> m n","name":"unsafeLeqProof","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:unsafeLeqProof"},{"display_html":"<a href=\"#v:testLeq\">testLeq</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> m -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> n -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-Utils-Parameterized.html#t:LeqProof\" title=\"Grisette.Internal.Utils.Parameterized\">LeqProof</a> m n)","name":"testLeq","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:testLeq"},{"display_html":"<a href=\"#v:leqRefl\">leqRefl</a> :: <span class=\"keyword\">forall</span> f (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). f n -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:LeqProof\" title=\"Grisette.Internal.Utils.Parameterized\">LeqProof</a> n n","name":"leqRefl","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:leqRefl"},{"display_html":"<a href=\"#v:leqSucc\">leqSucc</a> :: <span class=\"keyword\">forall</span> f (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). f n -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:LeqProof\" title=\"Grisette.Internal.Utils.Parameterized\">LeqProof</a> n (n <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> 1)","name":"leqSucc","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:leqSucc"},{"display_html":"<a href=\"#v:leqTrans\">leqTrans</a> :: <span class=\"keyword\">forall</span> (a :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (b :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (c :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-Utils-Parameterized.html#t:LeqProof\" title=\"Grisette.Internal.Utils.Parameterized\">LeqProof</a> a b -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:LeqProof\" title=\"Grisette.Internal.Utils.Parameterized\">LeqProof</a> b c -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:LeqProof\" title=\"Grisette.Internal.Utils.Parameterized\">LeqProof</a> a c","name":"leqTrans","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:leqTrans"},{"display_html":"<a href=\"#v:leqZero\">leqZero</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-Utils-Parameterized.html#t:LeqProof\" title=\"Grisette.Internal.Utils.Parameterized\">LeqProof</a> 0 n","name":"leqZero","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:leqZero"},{"display_html":"<a href=\"#v:leqAdd2\">leqAdd2</a> :: <span class=\"keyword\">forall</span> (xl :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (xh :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (yl :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (yh :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-Utils-Parameterized.html#t:LeqProof\" title=\"Grisette.Internal.Utils.Parameterized\">LeqProof</a> xl xh -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:LeqProof\" title=\"Grisette.Internal.Utils.Parameterized\">LeqProof</a> yl yh -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:LeqProof\" title=\"Grisette.Internal.Utils.Parameterized\">LeqProof</a> (xl <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> yl) (xh <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> yh)","name":"leqAdd2","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:leqAdd2"},{"display_html":"<a href=\"#v:leqAdd\">leqAdd</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) f (o :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a>). <a href=\"Grisette-Internal-Utils-Parameterized.html#t:LeqProof\" title=\"Grisette.Internal.Utils.Parameterized\">LeqProof</a> m n -&gt; f o -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:LeqProof\" title=\"Grisette.Internal.Utils.Parameterized\">LeqProof</a> m (n <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> o)","name":"leqAdd","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:leqAdd"},{"display_html":"<a href=\"#v:leqAddPos\">leqAddPos</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a>) p q. (1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> m, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; p m -&gt; q n -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:LeqProof\" title=\"Grisette.Internal.Utils.Parameterized\">LeqProof</a> 1 (m <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> n)","name":"leqAddPos","module":"Grisette.Internal.Utils.Parameterized","link":"Grisette-Internal-Utils-Parameterized.html#v:leqAddPos"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:DecideEvalMode\">DecideEvalMode</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:decideEvalMode\">decideEvalMode</a> :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a></li></ul>","name":"DecideEvalMode decideEvalMode","module":"Grisette.Internal.Unified.Util","link":"Grisette-Internal-Unified-Util.html#t:DecideEvalMode"},{"display_html":"<a href=\"#v:withMode\">withMode</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) r. <a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode =&gt; (mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-Internal-Unified-EvalModeTag.html#v:C\" title=\"Grisette.Internal.Unified.EvalModeTag\">C</a> =&gt; r) -&gt; (mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-Internal-Unified-EvalModeTag.html#v:S\" title=\"Grisette.Internal.Unified.EvalModeTag\">S</a> =&gt; r) -&gt; r","name":"withMode","module":"Grisette.Internal.Unified.Util","link":"Grisette-Internal-Unified-Util.html#v:withMode"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> c, <a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> s) =&gt; <a href=\"#t:EvalModeConvertible\">EvalModeConvertible</a> (c :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) (s :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withModeConvertible\">withModeConvertible</a> :: (c <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-Internal-Unified-EvalModeTag.html#v:C\" title=\"Grisette.Internal.Unified.EvalModeTag\">C</a> =&gt; r) -&gt; (s <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-Internal-Unified-EvalModeTag.html#v:S\" title=\"Grisette.Internal.Unified.EvalModeTag\">S</a> =&gt; r) -&gt; r</li><li><a href=\"#v:withModeConvertible-39-\">withModeConvertible'</a> :: ((c <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-Internal-Unified-EvalModeTag.html#v:C\" title=\"Grisette.Internal.Unified.EvalModeTag\">C</a>, s <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-Internal-Unified-EvalModeTag.html#v:C\" title=\"Grisette.Internal.Unified.EvalModeTag\">C</a>) =&gt; r) -&gt; ((c <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-Internal-Unified-EvalModeTag.html#v:C\" title=\"Grisette.Internal.Unified.EvalModeTag\">C</a>, s <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-Internal-Unified-EvalModeTag.html#v:S\" title=\"Grisette.Internal.Unified.EvalModeTag\">S</a>) =&gt; r) -&gt; ((c <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-Internal-Unified-EvalModeTag.html#v:S\" title=\"Grisette.Internal.Unified.EvalModeTag\">S</a>, s <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-Internal-Unified-EvalModeTag.html#v:S\" title=\"Grisette.Internal.Unified.EvalModeTag\">S</a>) =&gt; r) -&gt; r</li></ul>","name":"EvalModeConvertible withModeConvertible' withModeConvertible","module":"Grisette.Internal.Unified.Util","link":"Grisette-Internal-Unified-Util.html#t:EvalModeConvertible"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:BV\">BV</a> bv <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:bvConcat\">bvConcat</a> :: bv -&gt; bv -&gt; bv</li><li><a href=\"#v:bvZext\">bvZext</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; bv -&gt; bv</li><li><a href=\"#v:bvSext\">bvSext</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; bv -&gt; bv</li><li><a href=\"#v:bvExt\">bvExt</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; bv -&gt; bv</li><li><a href=\"#v:bvSelect\">bvSelect</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; bv -&gt; bv</li><li><a href=\"#v:bv\">bv</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; bv</li></ul>","name":"BV bv bvConcat bvSelect bvExt bvSext bvZext","module":"Grisette.Internal.Core.Data.Class.BitVector","link":"Grisette-Internal-Core-Data-Class-BitVector.html#t:BV"},{"display_html":"<a href=\"#v:bvExtract\">bvExtract</a> :: <a href=\"Grisette-Internal-Core-Data-Class-BitVector.html#t:BV\" title=\"Grisette.Internal.Core.Data.Class.BitVector\">BV</a> bv =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; bv -&gt; bv","name":"bvExtract","module":"Grisette.Internal.Core.Data.Class.BitVector","link":"Grisette-Internal-Core-Data-Class-BitVector.html#v:bvExtract"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:SizedBV\">SizedBV</a> (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:sizedBVConcat\">sizedBVConcat</a> :: <span class=\"keyword\">forall</span> (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r) =&gt; bv l -&gt; bv r -&gt; bv (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r)</li><li><a href=\"#v:sizedBVZext\">sizedBVZext</a> :: <span class=\"keyword\">forall</span> (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) proxy. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r) =&gt; proxy r -&gt; bv l -&gt; bv r</li><li><a href=\"#v:sizedBVSext\">sizedBVSext</a> :: <span class=\"keyword\">forall</span> (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) proxy. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r) =&gt; proxy r -&gt; bv l -&gt; bv r</li><li><a href=\"#v:sizedBVExt\">sizedBVExt</a> :: <span class=\"keyword\">forall</span> (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) proxy. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r) =&gt; proxy r -&gt; bv l -&gt; bv r</li><li><a href=\"#v:sizedBVSelect\">sizedBVSelect</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (ix :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (w :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) p q. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> ix, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> w, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> w, (ix <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> w) <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; p ix -&gt; q w -&gt; bv n -&gt; bv w</li><li><a href=\"#v:sizedBVFromIntegral\">sizedBVFromIntegral</a> :: <span class=\"keyword\">forall</span> a (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; a -&gt; bv n</li></ul>","name":"SizedBV sizedBVConcat sizedBVExt sizedBVSelect sizedBVSext sizedBVZext sizedBVFromIntegral $dmsizedBVFromIntegral","module":"Grisette.Internal.Core.Data.Class.BitVector","link":"Grisette-Internal-Core-Data-Class-BitVector.html#t:SizedBV"},{"display_html":"<a href=\"#v:sizedBVExtract\">sizedBVExtract</a> :: <span class=\"keyword\">forall</span> p (i :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) q (j :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) bv. (<a href=\"Grisette-Internal-Core-Data-Class-BitVector.html#t:SizedBV\" title=\"Grisette.Internal.Core.Data.Class.BitVector\">SizedBV</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> i, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> j, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n, (i <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> 1) <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n, j <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> i) =&gt; p i -&gt; q j -&gt; bv n -&gt; bv ((i <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-45-\" title=\"GHC.TypeLits\">-</a> j) <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> 1)","name":"sizedBVExtract","module":"Grisette.Internal.Core.Data.Class.BitVector","link":"Grisette-Internal-Core-Data-Class-BitVector.html#v:sizedBVExtract"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:IntN\">IntN</a> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) = <a href=\"#v:IntN\">IntN</a> {<ul class=\"subs\"><li><a href=\"#v:unIntN\">unIntN</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integer\" title=\"Prelude\">Integer</a></li></ul>}","name":"IntN IntN unIntN","module":"Grisette.Internal.SymPrim.BV","link":"Grisette-Internal-SymPrim-BV.html#t:IntN"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:IntN8\">IntN8</a> = <a href=\"Grisette-Internal-SymPrim-BV.html#t:IntN\" title=\"Grisette.Internal.SymPrim.BV\">IntN</a> 8","name":"IntN8","module":"Grisette.Internal.SymPrim.BV","link":"Grisette-Internal-SymPrim-BV.html#t:IntN8"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:IntN16\">IntN16</a> = <a href=\"Grisette-Internal-SymPrim-BV.html#t:IntN\" title=\"Grisette.Internal.SymPrim.BV\">IntN</a> 16","name":"IntN16","module":"Grisette.Internal.SymPrim.BV","link":"Grisette-Internal-SymPrim-BV.html#t:IntN16"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:IntN32\">IntN32</a> = <a href=\"Grisette-Internal-SymPrim-BV.html#t:IntN\" title=\"Grisette.Internal.SymPrim.BV\">IntN</a> 32","name":"IntN32","module":"Grisette.Internal.SymPrim.BV","link":"Grisette-Internal-SymPrim-BV.html#t:IntN32"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:IntN64\">IntN64</a> = <a href=\"Grisette-Internal-SymPrim-BV.html#t:IntN\" title=\"Grisette.Internal.SymPrim.BV\">IntN</a> 64","name":"IntN64","module":"Grisette.Internal.SymPrim.BV","link":"Grisette-Internal-SymPrim-BV.html#t:IntN64"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:WordN\">WordN</a> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) = <a href=\"#v:WordN\">WordN</a> {<ul class=\"subs\"><li><a href=\"#v:unWordN\">unWordN</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integer\" title=\"Prelude\">Integer</a></li></ul>}","name":"WordN WordN unWordN","module":"Grisette.Internal.SymPrim.BV","link":"Grisette-Internal-SymPrim-BV.html#t:WordN"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:WordN8\">WordN8</a> = <a href=\"Grisette-Internal-SymPrim-BV.html#t:WordN\" title=\"Grisette.Internal.SymPrim.BV\">WordN</a> 8","name":"WordN8","module":"Grisette.Internal.SymPrim.BV","link":"Grisette-Internal-SymPrim-BV.html#t:WordN8"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:WordN16\">WordN16</a> = <a href=\"Grisette-Internal-SymPrim-BV.html#t:WordN\" title=\"Grisette.Internal.SymPrim.BV\">WordN</a> 16","name":"WordN16","module":"Grisette.Internal.SymPrim.BV","link":"Grisette-Internal-SymPrim-BV.html#t:WordN16"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:WordN32\">WordN32</a> = <a href=\"Grisette-Internal-SymPrim-BV.html#t:WordN\" title=\"Grisette.Internal.SymPrim.BV\">WordN</a> 32","name":"WordN32","module":"Grisette.Internal.SymPrim.BV","link":"Grisette-Internal-SymPrim-BV.html#t:WordN32"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:WordN64\">WordN64</a> = <a href=\"Grisette-Internal-SymPrim-BV.html#t:WordN\" title=\"Grisette.Internal.SymPrim.BV\">WordN</a> 64","name":"WordN64","module":"Grisette.Internal.SymPrim.BV","link":"Grisette-Internal-SymPrim-BV.html#t:WordN64"},{"display_html":"<a href=\"#v:readBinary\">readBinary</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Text-ParserCombinators-ReadPrec.html#t:ReadPrec\" title=\"Text.ParserCombinators.ReadPrec\">ReadPrec</a> a","name":"readBinary","module":"Grisette.Internal.SymPrim.BV","link":"Grisette-Internal-SymPrim-BV.html#v:readBinary"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ValidFP\">ValidFP</a> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) = <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV.html#t:ValidFloat\" title=\"Data.SBV\">ValidFloat</a> eb sb","name":"ValidFP","module":"Grisette.Internal.SymPrim.FP","link":"Grisette-Internal-SymPrim-FP.html#t:ValidFP"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:FP\">FP</a> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) = <a href=\"#v:FP\">FP</a> {<ul class=\"subs\"><li><a href=\"#v:unFP\">unFP</a> :: <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV.html#t:FloatingPoint\" title=\"Data.SBV\">FloatingPoint</a> eb sb</li></ul>}","name":"FP FP unFP","module":"Grisette.Internal.SymPrim.FP","link":"Grisette-Internal-SymPrim-FP.html#t:FP"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FP16\">FP16</a> = <a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> 5 11","name":"FP16","module":"Grisette.Internal.SymPrim.FP","link":"Grisette-Internal-SymPrim-FP.html#t:FP16"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FP32\">FP32</a> = <a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> 8 24","name":"FP32","module":"Grisette.Internal.SymPrim.FP","link":"Grisette-Internal-SymPrim-FP.html#t:FP32"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FP64\">FP64</a> = <a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> 11 53","name":"FP64","module":"Grisette.Internal.SymPrim.FP","link":"Grisette-Internal-SymPrim-FP.html#t:FP64"},{"display_html":"<a href=\"#v:withValidFPProofs\">withValidFPProofs</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) r. <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb =&gt; ((<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> (eb <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> sb), <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Trans.html#t:BVIsNonZero\" title=\"Data.SBV.Trans\">BVIsNonZero</a> (eb <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> sb), 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> (eb <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> sb), 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> eb, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> sb) =&gt; r) -&gt; r","name":"withValidFPProofs","module":"Grisette.Internal.SymPrim.FP","link":"Grisette-Internal-SymPrim-FP.html#v:withValidFPProofs"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FPRoundingMode\">FPRoundingMode</a><ul class=\"subs\"><li>= <a href=\"#v:RNE\">RNE</a></li><li>| <a href=\"#v:RNA\">RNA</a></li><li>| <a href=\"#v:RTP\">RTP</a></li><li>| <a href=\"#v:RTN\">RTN</a></li><li>| <a href=\"#v:RTZ\">RTZ</a></li></ul>","name":"FPRoundingMode RNA RNE RTN RTP RTZ","module":"Grisette.Internal.SymPrim.FP","link":"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode"},{"display_html":"<a href=\"#v:allFPRoundingMode\">allFPRoundingMode</a> :: [<a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a>]","name":"allFPRoundingMode","module":"Grisette.Internal.SymPrim.FP","link":"Grisette-Internal-SymPrim-FP.html#v:allFPRoundingMode"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:NotRepresentableFPError\">NotRepresentableFPError</a><ul class=\"subs\"><li>= <a href=\"#v:NaNError\">NaNError</a></li><li>| <a href=\"#v:FPUnderflowError\">FPUnderflowError</a></li><li>| <a href=\"#v:FPOverflowError\">FPOverflowError</a></li></ul>","name":"NotRepresentableFPError NaNError FPOverflowError FPUnderflowError","module":"Grisette.Internal.SymPrim.FP","link":"Grisette-Internal-SymPrim-FP.html#t:NotRepresentableFPError"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ConvertibleBound\">ConvertibleBound</a> (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:convertibleLowerBound\">convertibleLowerBound</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; bv n -&gt; <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb</li><li><a href=\"#v:convertibleUpperBound\">convertibleUpperBound</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; bv n -&gt; <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb</li></ul>","name":"ConvertibleBound convertibleLowerBound convertibleUpperBound","module":"Grisette.Internal.SymPrim.FP","link":"Grisette-Internal-SymPrim-FP.html#t:ConvertibleBound"},{"display_html":"<a href=\"#v:nextFP\">nextFP</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb =&gt; <a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb -&gt; <a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb","name":"nextFP","module":"Grisette.Internal.SymPrim.FP","link":"Grisette-Internal-SymPrim-FP.html#v:nextFP"},{"display_html":"<a href=\"#v:prevFP\">prevFP</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb =&gt; <a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb -&gt; <a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb","name":"prevFP","module":"Grisette.Internal.SymPrim.FP","link":"Grisette-Internal-SymPrim-FP.html#v:prevFP"},{"display_html":"<a href=\"#v:withUnsafeValidFP\">withUnsafeValidFP</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) r. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> eb, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> sb) =&gt; (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb =&gt; r) -&gt; r","name":"withUnsafeValidFP","module":"Grisette.Internal.SymPrim.FP","link":"Grisette-Internal-SymPrim-FP.html#v:withUnsafeValidFP"},{"display_html":"<a href=\"#v:checkDynamicValidFP\">checkDynamicValidFP</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"checkDynamicValidFP","module":"Grisette.Internal.SymPrim.FP","link":"Grisette-Internal-SymPrim-FP.html#v:checkDynamicValidFP"},{"display_html":"<a href=\"#v:invalidFPMessage\">invalidFPMessage</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"invalidFPMessage","module":"Grisette.Internal.SymPrim.FP","link":"Grisette-Internal-SymPrim-FP.html#v:invalidFPMessage"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:SupportedPrimConstraint\">SupportedPrimConstraint</a> t <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:PrimConstraint\">PrimConstraint</a> t</li></ul>","name":"SupportedPrimConstraint PrimConstraint","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrimConstraint"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Lift\" title=\"Language.Haskell.TH.Syntax\">Lift</a> t, <a href=\"https://hackage.haskell.org/package/deepseq-1.5.0.0/docs/Control-DeepSeq.html#t:NFData\" title=\"Control.DeepSeq\">NFData</a> t, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrimConstraint\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrimConstraint</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVRep</a> t) =&gt; <a href=\"#t:SupportedPrim\">SupportedPrim</a> t <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:primTypeRep\">primTypeRep</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Type-Reflection.html#t:TypeRep\" title=\"Type.Reflection\">TypeRep</a> t</li><li><a href=\"#v:sameCon\">sameCon</a> :: t -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:hashConWithSalt\">hashConWithSalt</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li><a href=\"#v:pformatCon\">pformatCon</a> :: t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li><li><a href=\"#v:defaultValue\">defaultValue</a> :: t</li><li><a href=\"#v:pevalITETerm\">pevalITETerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:pevalEqTerm\">pevalEqTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:pevalDistinctTerm\">pevalDistinctTerm</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-List-NonEmpty.html#t:NonEmpty\" title=\"Data.List.NonEmpty\">NonEmpty</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:conSBVTerm\">conSBVTerm</a> :: t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li><li><a href=\"#v:symSBVName\">symSBVName</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:AnyKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">AnyKind</a> t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li><li><a href=\"#v:symSBVTerm\">symSBVTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVFreshMonad\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVFreshMonad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; m (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t)</li><li><a href=\"#v:withPrim\">withPrim</a> :: ((<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PrimConstraint\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PrimConstraint</a> t, <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Trans.html#t:SMTDefinable\" title=\"Data.SBV.Trans\">SMTDefinable</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t), <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Trans.html#t:Mergeable\" title=\"Data.SBV.Trans\">Mergeable</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t)) =&gt; a) -&gt; a</li><li><a href=\"#v:sbvIte\">sbvIte</a> :: <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:SBV\" title=\"Data.SBV.Internals\">SBV</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li><li><a href=\"#v:sbvEq\">sbvEq</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:SBV\" title=\"Data.SBV.Internals\">SBV</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:sbvDistinct\">sbvDistinct</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-List-NonEmpty.html#t:NonEmpty\" title=\"Data.List.NonEmpty\">NonEmpty</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t) -&gt; <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:SBV\" title=\"Data.SBV.Internals\">SBV</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:parseSMTModelResult\">parseSMTModelResult</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; ([([<a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:CV\" title=\"Data.SBV.Internals\">CV</a>], <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:CV\" title=\"Data.SBV.Internals\">CV</a>)], <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:CV\" title=\"Data.SBV.Internals\">CV</a>) -&gt; t</li><li><a href=\"#v:castTypedSymbol\">castTypedSymbol</a> :: <span class=\"keyword\">forall</span> (knd' :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd' =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd' t)</li><li><a href=\"#v:funcDummyConstraint\">funcDummyConstraint</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:SBV\" title=\"Data.SBV.Internals\">SBV</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li></ul>","name":"SupportedPrim castTypedSymbol conSBVTerm funcDummyConstraint parseSMTModelResult sbvDistinct sbvEq sbvIte symSBVName symSBVTerm withPrim pevalITETerm defaultValue pevalDistinctTerm pevalEqTerm sameCon primTypeRep hashConWithSalt pformatCon $dmsbvDistinct $dmsbvEq $dmsbvIte $dmwithPrim $dmsameCon $dmprimTypeRep $dmhashConWithSalt $dmpformatCon","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> con =&gt; <a href=\"#t:SymRep\">SymRep</a> con <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:SymType\">SymType</a> con</li></ul>","name":"SymRep SymType","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymRep"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ConRep\">ConRep</a> sym <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:ConType\">ConType</a> sym</li></ul>","name":"ConRep ConType","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:ConRep"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:ConRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConRep</a> sym, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymRep</a> con, sym <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymType</a> con, con <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:ConType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConType</a> sym) =&gt; <a href=\"#t:LinkedRep\">LinkedRep</a> con sym | con -&gt; sym, sym -&gt; con <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:underlyingTerm\">underlyingTerm</a> :: sym -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> con</li><li><a href=\"#v:wrapTerm\">wrapTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> con -&gt; sym</li></ul>","name":"LinkedRep underlyingTerm wrapTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PEvalApplyTerm\">PEvalApplyTerm</a> f a b | f -&gt; a b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pevalApplyTerm\">pevalApplyTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> f -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b</li><li><a href=\"#v:sbvApplyTerm\">sbvApplyTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> f -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> b</li></ul>","name":"PEvalApplyTerm sbvApplyTerm pevalApplyTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalApplyTerm"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PEvalBitwiseTerm\">PEvalBitwiseTerm</a> t <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pevalAndBitsTerm\">pevalAndBitsTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:pevalOrBitsTerm\">pevalOrBitsTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:pevalXorBitsTerm\">pevalXorBitsTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:pevalComplementBitsTerm\">pevalComplementBitsTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:withSbvBitwiseTermConstraint\">withSbvBitwiseTermConstraint</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:Bits\" title=\"Data.Bits\">Bits</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t) =&gt; r) -&gt; r</li><li><a href=\"#v:sbvAndBitsTerm\">sbvAndBitsTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li><li><a href=\"#v:sbvOrBitsTerm\">sbvOrBitsTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li><li><a href=\"#v:sbvXorBitsTerm\">sbvXorBitsTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li><li><a href=\"#v:sbvComplementBitsTerm\">sbvComplementBitsTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li></ul>","name":"PEvalBitwiseTerm sbvAndBitsTerm sbvComplementBitsTerm sbvOrBitsTerm sbvXorBitsTerm pevalAndBitsTerm pevalComplementBitsTerm pevalOrBitsTerm pevalXorBitsTerm withSbvBitwiseTermConstraint $dmsbvAndBitsTerm $dmsbvComplementBitsTerm $dmsbvOrBitsTerm $dmsbvXorBitsTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PEvalShiftTerm\">PEvalShiftTerm</a> t <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pevalShiftLeftTerm\">pevalShiftLeftTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:pevalShiftRightTerm\">pevalShiftRightTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:withSbvShiftTermConstraint\">withSbvShiftTermConstraint</a> :: (<a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Trans.html#t:SIntegral\" title=\"Data.SBV.Trans\">SIntegral</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:NonFuncSBVBaseType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">NonFuncSBVBaseType</a> t) =&gt; r) -&gt; r</li><li><a href=\"#v:sbvShiftLeftTerm\">sbvShiftLeftTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li><li><a href=\"#v:sbvShiftRightTerm\">sbvShiftRightTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li></ul>","name":"PEvalShiftTerm sbvShiftLeftTerm sbvShiftRightTerm pevalShiftLeftTerm pevalShiftRightTerm withSbvShiftTermConstraint $dmsbvShiftLeftTerm $dmsbvShiftRightTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalShiftTerm"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PEvalRotateTerm\">PEvalRotateTerm</a> t <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pevalRotateLeftTerm\">pevalRotateLeftTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:pevalRotateRightTerm\">pevalRotateRightTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:withSbvRotateTermConstraint\">withSbvRotateTermConstraint</a> :: (<a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Trans.html#t:SIntegral\" title=\"Data.SBV.Trans\">SIntegral</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:NonFuncSBVBaseType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">NonFuncSBVBaseType</a> t) =&gt; r) -&gt; r</li><li><a href=\"#v:sbvRotateLeftTerm\">sbvRotateLeftTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li><li><a href=\"#v:sbvRotateRightTerm\">sbvRotateRightTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li></ul>","name":"PEvalRotateTerm sbvRotateLeftTerm sbvRotateRightTerm pevalRotateLeftTerm pevalRotateRightTerm withSbvRotateTermConstraint $dmsbvRotateLeftTerm $dmsbvRotateRightTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalRotateTerm"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> t =&gt; <a href=\"#t:PEvalNumTerm\">PEvalNumTerm</a> t <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pevalAddNumTerm\">pevalAddNumTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:pevalNegNumTerm\">pevalNegNumTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:pevalMulNumTerm\">pevalMulNumTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:pevalAbsNumTerm\">pevalAbsNumTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:pevalSignumNumTerm\">pevalSignumNumTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:withSbvNumTermConstraint\">withSbvNumTermConstraint</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t) =&gt; r) -&gt; r</li><li><a href=\"#v:sbvAddNumTerm\">sbvAddNumTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li><li><a href=\"#v:sbvNegNumTerm\">sbvNegNumTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li><li><a href=\"#v:sbvMulNumTerm\">sbvMulNumTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li><li><a href=\"#v:sbvAbsNumTerm\">sbvAbsNumTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li><li><a href=\"#v:sbvSignumNumTerm\">sbvSignumNumTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li></ul>","name":"PEvalNumTerm sbvAbsNumTerm sbvAddNumTerm sbvMulNumTerm sbvNegNumTerm sbvSignumNumTerm pevalAbsNumTerm pevalAddNumTerm pevalMulNumTerm pevalNegNumTerm pevalSignumNumTerm withSbvNumTermConstraint $dmsbvAbsNumTerm $dmsbvAddNumTerm $dmsbvMulNumTerm $dmsbvNegNumTerm $dmsbvSignumNumTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm"},{"display_html":"<a href=\"#v:pevalSubNumTerm\">pevalSubNumTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"pevalSubNumTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:pevalSubNumTerm"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PEvalOrdTerm\">PEvalOrdTerm</a> t <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pevalLtOrdTerm\">pevalLtOrdTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:pevalLeOrdTerm\">pevalLeOrdTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:withSbvOrdTermConstraint\">withSbvOrdTermConstraint</a> :: (<a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Trans.html#t:OrdSymbolic\" title=\"Data.SBV.Trans\">OrdSymbolic</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t) =&gt; r) -&gt; r</li><li><a href=\"#v:sbvLtOrdTerm\">sbvLtOrdTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:SBV\" title=\"Data.SBV.Internals\">SBV</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:sbvLeOrdTerm\">sbvLeOrdTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:SBV\" title=\"Data.SBV.Internals\">SBV</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li></ul>","name":"PEvalOrdTerm sbvLeOrdTerm sbvLtOrdTerm pevalLeOrdTerm pevalLtOrdTerm withSbvOrdTermConstraint $dmsbvLeOrdTerm $dmsbvLtOrdTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalOrdTerm"},{"display_html":"<a href=\"#v:pevalGtOrdTerm\">pevalGtOrdTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalOrdTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalOrdTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"pevalGtOrdTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:pevalGtOrdTerm"},{"display_html":"<a href=\"#v:pevalGeOrdTerm\">pevalGeOrdTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalOrdTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalOrdTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"pevalGeOrdTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:pevalGeOrdTerm"},{"display_html":"<a href=\"#v:pevalNEqTerm\">pevalNEqTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"pevalNEqTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:pevalNEqTerm"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PEvalDivModIntegralTerm\">PEvalDivModIntegralTerm</a> t <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pevalDivIntegralTerm\">pevalDivIntegralTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:pevalModIntegralTerm\">pevalModIntegralTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:pevalQuotIntegralTerm\">pevalQuotIntegralTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:pevalRemIntegralTerm\">pevalRemIntegralTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:withSbvDivModIntegralTermConstraint\">withSbvDivModIntegralTermConstraint</a> :: (<a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Trans.html#t:SDivisible\" title=\"Data.SBV.Trans\">SDivisible</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t) =&gt; r) -&gt; r</li><li><a href=\"#v:sbvDivIntegralTerm\">sbvDivIntegralTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li><li><a href=\"#v:sbvModIntegralTerm\">sbvModIntegralTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li><li><a href=\"#v:sbvQuotIntegralTerm\">sbvQuotIntegralTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li><li><a href=\"#v:sbvRemIntegralTerm\">sbvRemIntegralTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li></ul>","name":"PEvalDivModIntegralTerm sbvDivIntegralTerm sbvModIntegralTerm sbvQuotIntegralTerm sbvRemIntegralTerm pevalDivIntegralTerm pevalModIntegralTerm pevalQuotIntegralTerm pevalRemIntegralTerm withSbvDivModIntegralTermConstraint $dmsbvDivIntegralTerm $dmsbvModIntegralTerm $dmsbvQuotIntegralTerm $dmsbvRemIntegralTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Internal-Core-Data-Class-BitCast.html#t:BitCast\" title=\"Grisette.Internal.Core.Data.Class.BitCast\">BitCast</a> a b =&gt; <a href=\"#t:PEvalBitCastTerm\">PEvalBitCastTerm</a> a b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pevalBitCastTerm\">pevalBitCastTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b</li><li><a href=\"#v:sbvBitCast\">sbvBitCast</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> b</li></ul>","name":"PEvalBitCastTerm sbvBitCast pevalBitCastTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitCastTerm"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Internal-Core-Data-Class-BitCast.html#t:BitCastOr\" title=\"Grisette.Internal.Core.Data.Class.BitCast\">BitCastOr</a> a b =&gt; <a href=\"#t:PEvalBitCastOrTerm\">PEvalBitCastOrTerm</a> a b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pevalBitCastOrTerm\">pevalBitCastOrTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b</li><li><a href=\"#v:sbvBitCastOr\">sbvBitCastOr</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> b -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> b</li></ul>","name":"PEvalBitCastOrTerm sbvBitCastOr pevalBitCastOrTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitCastOrTerm"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Data-Class-BitVector.html#t:SizedBV\" title=\"Grisette.Internal.Core.Data.Class.BitVector\">SizedBV</a> bv, <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> (bv n), <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitwiseTerm</a> (bv n), <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:FiniteBits\" title=\"Data.Bits\">FiniteBits</a> (bv n), <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> (bv n)) =&gt; <a href=\"#t:PEvalBVTerm\">PEvalBVTerm</a> (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pevalBVConcatTerm\">pevalBVConcatTerm</a> :: <span class=\"keyword\">forall</span> (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv l) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv r) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r))</li><li><a href=\"#v:pevalBVExtendTerm\">pevalBVExtendTerm</a> :: <span class=\"keyword\">forall</span> (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) proxy. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r, l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; proxy r -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv l) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv r)</li><li><a href=\"#v:pevalBVSelectTerm\">pevalBVSelectTerm</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (ix :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (w :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) p q. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> ix, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> w, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> w, (ix <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> w) <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; p ix -&gt; q w -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv n) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv w)</li><li><a href=\"#v:sbvBVConcatTerm\">sbvBVConcatTerm</a> :: <span class=\"keyword\">forall</span> (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) p1 p2. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r) =&gt; p1 l -&gt; p2 r -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (bv l) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (bv r) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (bv (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r))</li><li><a href=\"#v:sbvBVExtendTerm\">sbvBVExtendTerm</a> :: <span class=\"keyword\">forall</span> (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) p1 p2. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r, l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r) =&gt; p1 l -&gt; p2 r -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (bv l) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (bv r)</li><li><a href=\"#v:sbvBVSelectTerm\">sbvBVSelectTerm</a> :: <span class=\"keyword\">forall</span> (ix :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (w :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) p1 p2 p3. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> ix, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> w, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> w, (ix <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> w) <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; p1 ix -&gt; p2 w -&gt; p3 n -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (bv n) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (bv w)</li></ul>","name":"PEvalBVTerm sbvBVConcatTerm sbvBVExtendTerm sbvBVSelectTerm pevalBVConcatTerm pevalBVExtendTerm pevalBVSelectTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Fractional\" title=\"Prelude\">Fractional</a> t =&gt; <a href=\"#t:PEvalFractionalTerm\">PEvalFractionalTerm</a> t <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pevalFdivTerm\">pevalFdivTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:pevalRecipTerm\">pevalRecipTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:withSbvFractionalTermConstraint\">withSbvFractionalTermConstraint</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Fractional\" title=\"Prelude\">Fractional</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t) =&gt; r) -&gt; r</li><li><a href=\"#v:sbvFdivTerm\">sbvFdivTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li><li><a href=\"#v:sbvRecipTerm\">sbvRecipTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li></ul>","name":"PEvalFractionalTerm sbvFdivTerm sbvRecipTerm pevalFdivTerm pevalRecipTerm withSbvFractionalTermConstraint $dmsbvFdivTerm $dmsbvRecipTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFractionalTerm"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PEvalFPTerm\">PEvalFPTerm</a> (fp :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pevalFPTraitTerm\">pevalFPTraitTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPTrait\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPTrait</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:pevalFPUnaryTerm\">pevalFPUnaryTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPUnaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPUnaryOp</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)</li><li><a href=\"#v:pevalFPBinaryTerm\">pevalFPBinaryTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPBinaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPBinaryOp</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)</li><li><a href=\"#v:pevalFPRoundingUnaryTerm\">pevalFPRoundingUnaryTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPRoundingUnaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPRoundingUnaryOp</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)</li><li><a href=\"#v:pevalFPRoundingBinaryTerm\">pevalFPRoundingBinaryTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPRoundingBinaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPRoundingBinaryOp</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)</li><li><a href=\"#v:pevalFPFMATerm\">pevalFPFMATerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)</li><li><a href=\"#v:sbvFPTraitTerm\">sbvFPTraitTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPTrait\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPTrait</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:sbvFPUnaryTerm\">sbvFPUnaryTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPUnaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPUnaryOp</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (fp eb sb)</li><li><a href=\"#v:sbvFPBinaryTerm\">sbvFPBinaryTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPBinaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPBinaryOp</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (fp eb sb)</li><li><a href=\"#v:sbvFPRoundingUnaryTerm\">sbvFPRoundingUnaryTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPRoundingUnaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPRoundingUnaryOp</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (fp eb sb)</li><li><a href=\"#v:sbvFPRoundingBinaryTerm\">sbvFPRoundingBinaryTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPRoundingBinaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPRoundingBinaryOp</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (fp eb sb)</li><li><a href=\"#v:sbvFPFMATerm\">sbvFPFMATerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (fp eb sb)</li></ul>","name":"PEvalFPTerm sbvFPBinaryTerm sbvFPFMATerm sbvFPRoundingBinaryTerm sbvFPRoundingUnaryTerm sbvFPTraitTerm sbvFPUnaryTerm pevalFPBinaryTerm pevalFPFMATerm pevalFPRoundingBinaryTerm pevalFPRoundingUnaryTerm pevalFPTraitTerm pevalFPUnaryTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PEvalFloatingTerm\">PEvalFloatingTerm</a> t <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pevalFloatingUnaryTerm\">pevalFloatingUnaryTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FloatingUnaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FloatingUnaryOp</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:pevalPowerTerm\">pevalPowerTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:withSbvFloatingTermConstraint\">withSbvFloatingTermConstraint</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Numeric.html#t:Floating\" title=\"Numeric\">Floating</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t) =&gt; r) -&gt; r</li><li><a href=\"#v:sbvPowerTerm\">sbvPowerTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li><li><a href=\"#v:sbvFloatingUnaryTerm\">sbvFloatingUnaryTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FloatingUnaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FloatingUnaryOp</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t</li></ul>","name":"PEvalFloatingTerm sbvFloatingUnaryTerm sbvPowerTerm pevalFloatingUnaryTerm pevalPowerTerm withSbvFloatingTermConstraint $dmsbvFloatingUnaryTerm $dmsbvPowerTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFloatingTerm"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> b) =&gt; <a href=\"#t:PEvalFromIntegralTerm\">PEvalFromIntegralTerm</a> a b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pevalFromIntegralTerm\">pevalFromIntegralTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b</li><li><a href=\"#v:sbvFromIntegralTerm\">sbvFromIntegralTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> b</li></ul>","name":"PEvalFromIntegralTerm sbvFromIntegralTerm pevalFromIntegralTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFromIntegralTerm"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PEvalIEEEFPConvertibleTerm\">PEvalIEEEFPConvertibleTerm</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pevalFromFPOrTerm\">pevalFromFPOrTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (<a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a</li><li><a href=\"#v:pevalToFPTerm\">pevalToFPTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (<a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb)</li><li><a href=\"#v:sbvFromFPOrTerm\">sbvFromFPOrTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (<a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> a</li><li><a href=\"#v:sbvToFPTerm\">sbvToFPTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> (<a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb)</li></ul>","name":"PEvalIEEEFPConvertibleTerm sbvFromFPOrTerm sbvToFPTerm pevalFromFPOrTerm pevalToFPTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalIEEEFPConvertibleTerm"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SymbolKind\">SymbolKind</a><ul class=\"subs\"><li>= <a href=\"#v:ConstantKind\">ConstantKind</a></li><li>| <a href=\"#v:AnyKind\">AnyKind</a></li></ul>","name":"SymbolKind AnyKind ConstantKind","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TypedSymbol\">TypedSymbol</a> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) t <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TypedSymbol\">TypedSymbol</a> :: <span class=\"keyword\">forall</span> t (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKindConstraint\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKindConstraint</a> knd t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; {..} -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd t</li></ul>","name":"TypedSymbol TypedSymbol unTypedSymbol","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol"},{"display_html":"<a href=\"#v:typedConstantSymbol\">typedConstantSymbol</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedNonFuncPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedNonFuncPrim</a> t =&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Symbol\" title=\"Grisette.Internal.Core.Data.Symbol\">Symbol</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ConstantKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConstantKind</a> t","name":"typedConstantSymbol","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:typedConstantSymbol"},{"display_html":"<a href=\"#v:typedAnySymbol\">typedAnySymbol</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t =&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Symbol\" title=\"Grisette.Internal.Core.Data.Symbol\">Symbol</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:AnyKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">AnyKind</a> t","name":"typedAnySymbol","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:typedAnySymbol"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TypedConstantSymbol\">TypedConstantSymbol</a> = <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ConstantKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConstantKind</a>","name":"TypedConstantSymbol","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedConstantSymbol"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TypedAnySymbol\">TypedAnySymbol</a> = <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:AnyKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">AnyKind</a>","name":"TypedAnySymbol","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedAnySymbol"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeTypedSymbol\">SomeTypedSymbol</a> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:SomeTypedSymbol\">SomeTypedSymbol</a> :: <span class=\"keyword\">forall</span> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) t. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SomeTypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SomeTypedSymbol</a> knd</li></ul>","name":"SomeTypedSymbol SomeTypedSymbol","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SomeTypedSymbol"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SomeTypedConstantSymbol\">SomeTypedConstantSymbol</a> = <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SomeTypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SomeTypedSymbol</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ConstantKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConstantKind</a>","name":"SomeTypedConstantSymbol","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SomeTypedConstantSymbol"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SomeTypedAnySymbol\">SomeTypedAnySymbol</a> = <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SomeTypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SomeTypedSymbol</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:AnyKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">AnyKind</a>","name":"SomeTypedAnySymbol","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SomeTypedAnySymbol"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IsSymbolKind\">IsSymbolKind</a> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:SymbolKindConstraint\">SymbolKindConstraint</a> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a></li><li><a href=\"#v:decideSymbolKind\">decideSymbolKind</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> (knd <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t::-126--126-:\" title=\"Data.Type.Equality\">:~~:</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ConstantKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConstantKind</a>) (knd <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t::-126--126-:\" title=\"Data.Type.Equality\">:~~:</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:AnyKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">AnyKind</a>)</li><li><a href=\"#v:withSymbolKindConstraint\">withSymbolKindConstraint</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd t -&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKindConstraint\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKindConstraint</a> knd t =&gt; a) -&gt; a</li></ul>","name":"IsSymbolKind decideSymbolKind SymbolKindConstraint withSymbolKindConstraint","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind"},{"display_html":"<a href=\"#v:showUntyped\">showUntyped</a> :: <span class=\"keyword\">forall</span> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) t. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"showUntyped","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:showUntyped"},{"display_html":"<a href=\"#v:someTypedSymbol\">someTypedSymbol</a> :: <span class=\"keyword\">forall</span> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) t. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SomeTypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SomeTypedSymbol</a> knd","name":"someTypedSymbol","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:someTypedSymbol"},{"display_html":"<a href=\"#v:eqHeteroSymbol\">eqHeteroSymbol</a> :: <span class=\"keyword\">forall</span> (ta :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a (tb :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) b. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> ta a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> tb b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"eqHeteroSymbol","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:eqHeteroSymbol"},{"display_html":"<a href=\"#v:castSomeTypedSymbol\">castSomeTypedSymbol</a> :: <span class=\"keyword\">forall</span> (knd' :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd' =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SomeTypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SomeTypedSymbol</a> knd -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SomeTypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SomeTypedSymbol</a> knd')","name":"castSomeTypedSymbol","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:castSomeTypedSymbol"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FPTrait\">FPTrait</a><ul class=\"subs\"><li>= <a href=\"#v:FPIsNaN\">FPIsNaN</a></li><li>| <a href=\"#v:FPIsPositive\">FPIsPositive</a></li><li>| <a href=\"#v:FPIsNegative\">FPIsNegative</a></li><li>| <a href=\"#v:FPIsPositiveInfinite\">FPIsPositiveInfinite</a></li><li>| <a href=\"#v:FPIsNegativeInfinite\">FPIsNegativeInfinite</a></li><li>| <a href=\"#v:FPIsInfinite\">FPIsInfinite</a></li><li>| <a href=\"#v:FPIsPositiveZero\">FPIsPositiveZero</a></li><li>| <a href=\"#v:FPIsNegativeZero\">FPIsNegativeZero</a></li><li>| <a href=\"#v:FPIsZero\">FPIsZero</a></li><li>| <a href=\"#v:FPIsNormal\">FPIsNormal</a></li><li>| <a href=\"#v:FPIsSubnormal\">FPIsSubnormal</a></li><li>| <a href=\"#v:FPIsPoint\">FPIsPoint</a></li></ul>","name":"FPTrait FPIsInfinite FPIsNaN FPIsNegative FPIsNegativeInfinite FPIsNegativeZero FPIsNormal FPIsPoint FPIsPositive FPIsPositiveInfinite FPIsPositiveZero FPIsSubnormal FPIsZero","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPTrait"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FPUnaryOp\">FPUnaryOp</a><ul class=\"subs\"><li>= <a href=\"#v:FPAbs\">FPAbs</a></li><li>| <a href=\"#v:FPNeg\">FPNeg</a></li></ul>","name":"FPUnaryOp FPAbs FPNeg","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPUnaryOp"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FPBinaryOp\">FPBinaryOp</a><ul class=\"subs\"><li>= <a href=\"#v:FPRem\">FPRem</a></li><li>| <a href=\"#v:FPMinimum\">FPMinimum</a></li><li>| <a href=\"#v:FPMinimumNumber\">FPMinimumNumber</a></li><li>| <a href=\"#v:FPMaximum\">FPMaximum</a></li><li>| <a href=\"#v:FPMaximumNumber\">FPMaximumNumber</a></li></ul>","name":"FPBinaryOp FPMaximum FPMaximumNumber FPMinimum FPMinimumNumber FPRem","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPBinaryOp"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FPRoundingUnaryOp\">FPRoundingUnaryOp</a><ul class=\"subs\"><li>= <a href=\"#v:FPSqrt\">FPSqrt</a></li><li>| <a href=\"#v:FPRoundToIntegral\">FPRoundToIntegral</a></li></ul>","name":"FPRoundingUnaryOp FPRoundToIntegral FPSqrt","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPRoundingUnaryOp"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FPRoundingBinaryOp\">FPRoundingBinaryOp</a><ul class=\"subs\"><li>= <a href=\"#v:FPAdd\">FPAdd</a></li><li>| <a href=\"#v:FPSub\">FPSub</a></li><li>| <a href=\"#v:FPMul\">FPMul</a></li><li>| <a href=\"#v:FPDiv\">FPDiv</a></li></ul>","name":"FPRoundingBinaryOp FPAdd FPDiv FPMul FPSub","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPRoundingBinaryOp"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FloatingUnaryOp\">FloatingUnaryOp</a><ul class=\"subs\"><li>= <a href=\"#v:FloatingExp\">FloatingExp</a></li><li>| <a href=\"#v:FloatingLog\">FloatingLog</a></li><li>| <a href=\"#v:FloatingSqrt\">FloatingSqrt</a></li><li>| <a href=\"#v:FloatingSin\">FloatingSin</a></li><li>| <a href=\"#v:FloatingCos\">FloatingCos</a></li><li>| <a href=\"#v:FloatingTan\">FloatingTan</a></li><li>| <a href=\"#v:FloatingAsin\">FloatingAsin</a></li><li>| <a href=\"#v:FloatingAcos\">FloatingAcos</a></li><li>| <a href=\"#v:FloatingAtan\">FloatingAtan</a></li><li>| <a href=\"#v:FloatingSinh\">FloatingSinh</a></li><li>| <a href=\"#v:FloatingCosh\">FloatingCosh</a></li><li>| <a href=\"#v:FloatingTanh\">FloatingTanh</a></li><li>| <a href=\"#v:FloatingAsinh\">FloatingAsinh</a></li><li>| <a href=\"#v:FloatingAcosh\">FloatingAcosh</a></li><li>| <a href=\"#v:FloatingAtanh\">FloatingAtanh</a></li></ul>","name":"FloatingUnaryOp FloatingAcosh FloatingAsinh FloatingAtanh FloatingSqrt FloatingAcos FloatingAsin FloatingAtan FloatingCos FloatingCosh FloatingExp FloatingLog FloatingSin FloatingSinh FloatingTan FloatingTanh","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FloatingUnaryOp"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Term\">Term</a> t <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:ConTerm-39-\">ConTerm'</a> :: <span class=\"keyword\">forall</span> t. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:SymTerm-39-\">SymTerm'</a> :: <span class=\"keyword\">forall</span> t. !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:AnyKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">AnyKind</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:ForallTerm-39-\">ForallTerm'</a> :: <span class=\"keyword\">forall</span> t1. !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ConstantKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConstantKind</a> t1) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:ExistsTerm-39-\">ExistsTerm'</a> :: <span class=\"keyword\">forall</span> t1. !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ConstantKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConstantKind</a> t1) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:NotTerm-39-\">NotTerm'</a> :: !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:OrTerm-39-\">OrTerm'</a> :: !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; !(<a href=\"https://hackage.haskell.org/package/unordered-containers-0.2.20/docs/Data-HashSet.html#t:HashSet\" title=\"Data.HashSet\">HashSet</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:AndTerm-39-\">AndTerm'</a> :: !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; !(<a href=\"https://hackage.haskell.org/package/unordered-containers-0.2.20/docs/Data-HashSet.html#t:HashSet\" title=\"Data.HashSet\">HashSet</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:EqTerm-39-\">EqTerm'</a> :: <span class=\"keyword\">forall</span> t1. !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t1) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t1) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:DistinctTerm-39-\">DistinctTerm'</a> :: <span class=\"keyword\">forall</span> t1. !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-List-NonEmpty.html#t:NonEmpty\" title=\"Data.List.NonEmpty\">NonEmpty</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t1)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:ITETerm-39-\">ITETerm'</a> :: <span class=\"keyword\">forall</span> t. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:AddNumTerm-39-\">AddNumTerm'</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:NegNumTerm-39-\">NegNumTerm'</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:MulNumTerm-39-\">MulNumTerm'</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:AbsNumTerm-39-\">AbsNumTerm'</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:SignumNumTerm-39-\">SignumNumTerm'</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:LtOrdTerm-39-\">LtOrdTerm'</a> :: <span class=\"keyword\">forall</span> t1. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t1, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalOrdTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalOrdTerm</a> t1) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t1) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t1) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:LeOrdTerm-39-\">LeOrdTerm'</a> :: <span class=\"keyword\">forall</span> t1. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t1, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalOrdTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalOrdTerm</a> t1) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t1) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t1) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:AndBitsTerm-39-\">AndBitsTerm'</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitwiseTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:OrBitsTerm-39-\">OrBitsTerm'</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitwiseTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:XorBitsTerm-39-\">XorBitsTerm'</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitwiseTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:ComplementBitsTerm-39-\">ComplementBitsTerm'</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitwiseTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:ShiftLeftTerm-39-\">ShiftLeftTerm'</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalShiftTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalShiftTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:ShiftRightTerm-39-\">ShiftRightTerm'</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalShiftTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalShiftTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:RotateLeftTerm-39-\">RotateLeftTerm'</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalRotateTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalRotateTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:RotateRightTerm-39-\">RotateRightTerm'</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalRotateTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalRotateTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:BitCastTerm-39-\">BitCastTerm'</a> :: <span class=\"keyword\">forall</span> t a. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitCastTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitCastTerm</a> a t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:BitCastOrTerm-39-\">BitCastOrTerm'</a> :: <span class=\"keyword\">forall</span> t a. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitCastOrTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitCastOrTerm</a> a t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:BVConcatTerm-39-\">BVConcatTerm'</a> :: <span class=\"keyword\">forall</span> (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r), 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (bv (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r))) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv l)) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv r)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r))</li><li><a href=\"#v:BVSelectTerm-39-\">BVSelectTerm'</a> :: <span class=\"keyword\">forall</span> (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (ix :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (w :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> ix, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> w, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> w, (ix <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> w) <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (bv w)) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> ix) -&gt; !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> w) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv n)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv w)</li><li><a href=\"#v:BVExtendTerm-39-\">BVExtendTerm'</a> :: <span class=\"keyword\">forall</span> (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r, l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (bv r)) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> r) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv l)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv r)</li><li><a href=\"#v:ApplyTerm-39-\">ApplyTerm'</a> :: <span class=\"keyword\">forall</span> f a t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalApplyTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalApplyTerm</a> f a t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> f) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:DivIntegralTerm-39-\">DivIntegralTerm'</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:ModIntegralTerm-39-\">ModIntegralTerm'</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:QuotIntegralTerm-39-\">QuotIntegralTerm'</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:RemIntegralTerm-39-\">RemIntegralTerm'</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:FPTraitTerm-39-\">FPTraitTerm'</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (fp :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPTrait\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPTrait</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:FdivTerm-39-\">FdivTerm'</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFractionalTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFractionalTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:RecipTerm-39-\">RecipTerm'</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFractionalTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFractionalTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:FloatingUnaryTerm-39-\">FloatingUnaryTerm'</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFloatingTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFloatingTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FloatingUnaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FloatingUnaryOp</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:PowerTerm-39-\">PowerTerm'</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFloatingTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFloatingTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:FPUnaryTerm-39-\">FPUnaryTerm'</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (fp :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPUnaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPUnaryOp</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)</li><li><a href=\"#v:FPBinaryTerm-39-\">FPBinaryTerm'</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (fp :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPBinaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPBinaryOp</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)</li><li><a href=\"#v:FPRoundingUnaryTerm-39-\">FPRoundingUnaryTerm'</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (fp :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPRoundingUnaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPRoundingUnaryOp</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a>) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)</li><li><a href=\"#v:FPRoundingBinaryTerm-39-\">FPRoundingBinaryTerm'</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (fp :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPRoundingBinaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPRoundingBinaryOp</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a>) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)</li><li><a href=\"#v:FPFMATerm-39-\">FPFMATerm'</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (fp :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a>) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)</li><li><a href=\"#v:FromIntegralTerm-39-\">FromIntegralTerm'</a> :: <span class=\"keyword\">forall</span> a t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFromIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFromIntegralTerm</a> a t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:FromFPOrTerm-39-\">FromFPOrTerm'</a> :: <span class=\"keyword\">forall</span> t (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalIEEEFPConvertibleTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalIEEEFPConvertibleTerm</a> t, <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a>) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (<a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t</li><li><a href=\"#v:ToFPTerm-39-\">ToFPTerm'</a> :: <span class=\"keyword\">forall</span> a (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalIEEEFPConvertibleTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalIEEEFPConvertibleTerm</a> a, <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (<a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb)) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a>) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> eb -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> sb -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (<a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb)</li></ul>","name":"Term ConTerm' SymTerm' ForallTerm' ExistsTerm' NotTerm' OrTerm' AndTerm' EqTerm' DistinctTerm' ITETerm' AddNumTerm' NegNumTerm' MulNumTerm' AbsNumTerm' SignumNumTerm' LtOrdTerm' LeOrdTerm' AndBitsTerm' OrBitsTerm' XorBitsTerm' ComplementBitsTerm' ShiftLeftTerm' ShiftRightTerm' RotateLeftTerm' RotateRightTerm' BitCastTerm' BitCastOrTerm' BVConcatTerm' BVSelectTerm' BVExtendTerm' ApplyTerm' DivIntegralTerm' ModIntegralTerm' QuotIntegralTerm' RemIntegralTerm' FPTraitTerm' FdivTerm' RecipTerm' FloatingUnaryTerm' PowerTerm' FPUnaryTerm' FPBinaryTerm' FPRoundingUnaryTerm' FPRoundingBinaryTerm' FPFMATerm' FromIntegralTerm' FromFPOrTerm' ToFPTerm'","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term"},{"display_html":"<a href=\"#v:defaultValueDynamic\">defaultValueDynamic</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t =&gt; proxy t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:ModelValue\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ModelValue</a>","name":"defaultValueDynamic","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:defaultValueDynamic"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:DynTerm\">DynTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b","name":"DynTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:DynTerm"},{"display_html":"<a href=\"#v:toCurThread\">toCurThread</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t)","name":"toCurThread","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:toCurThread"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CachedInfo\">CachedInfo</a> = <a href=\"#v:CachedInfo\">CachedInfo</a> {<ul class=\"subs\"><li><a href=\"#v:cachedThreadId\">cachedThreadId</a> :: !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#t:WeakThreadId\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Utils\">WeakThreadId</a></li><li><a href=\"#v:cachedDigest\">cachedDigest</a> :: !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:Digest\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Caches\">Digest</a></li><li><a href=\"#v:cachedId\">cachedId</a> :: !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:Id\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Caches\">Id</a></li><li><a href=\"#v:cachedStableIdent\">cachedStableIdent</a> :: !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:StableIdent\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Caches\">StableIdent</a></li></ul>}","name":"CachedInfo CachedInfo cachedDigest cachedId cachedStableIdent cachedThreadId","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo"},{"display_html":"<a href=\"#v:termInfo\">termInfo</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:CachedInfo\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">CachedInfo</a>","name":"termInfo","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:termInfo"},{"display_html":"<a href=\"#v:termThreadId\">termThreadId</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Utils.html#t:WeakThreadId\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Utils\">WeakThreadId</a>","name":"termThreadId","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:termThreadId"},{"display_html":"<a href=\"#v:termDigest\">termDigest</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:Digest\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Caches\">Digest</a>","name":"termDigest","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:termDigest"},{"display_html":"<a href=\"#v:termId\">termId</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:Id\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Caches\">Id</a>","name":"termId","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:termId"},{"display_html":"<a href=\"#v:termStableIdent\">termStableIdent</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:StableIdent\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Caches\">StableIdent</a>","name":"termStableIdent","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:termStableIdent"},{"display_html":"<a href=\"#v:pformatTerm\">pformatTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"pformatTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:pformatTerm"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ModelValue\">ModelValue</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:ModelValue\">ModelValue</a> :: <span class=\"keyword\">forall</span> v. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> v =&gt; v -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:ModelValue\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ModelValue</a></li></ul>","name":"ModelValue ModelValue","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:ModelValue"},{"display_html":"<a href=\"#v:toModelValue\">toModelValue</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> a =&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:ModelValue\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ModelValue</a>","name":"toModelValue","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:toModelValue"},{"display_html":"<a href=\"#v:unsafeFromModelValue\">unsafeFromModelValue</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:ModelValue\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ModelValue</a> -&gt; a","name":"unsafeFromModelValue","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:unsafeFromModelValue"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UTerm\">UTerm</a> t <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:UConTerm\">UConTerm</a> :: <span class=\"keyword\">forall</span> t. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t =&gt; !t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:USymTerm\">USymTerm</a> :: <span class=\"keyword\">forall</span> t. !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:AnyKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">AnyKind</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UForallTerm\">UForallTerm</a> :: <span class=\"keyword\">forall</span> t1. !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ConstantKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConstantKind</a> t1) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:UExistsTerm\">UExistsTerm</a> :: <span class=\"keyword\">forall</span> t1. !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ConstantKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConstantKind</a> t1) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:UNotTerm\">UNotTerm</a> :: !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:UOrTerm\">UOrTerm</a> :: !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; !(<a href=\"https://hackage.haskell.org/package/unordered-containers-0.2.20/docs/Data-HashSet.html#t:HashSet\" title=\"Data.HashSet\">HashSet</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:UAndTerm\">UAndTerm</a> :: !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; !(<a href=\"https://hackage.haskell.org/package/unordered-containers-0.2.20/docs/Data-HashSet.html#t:HashSet\" title=\"Data.HashSet\">HashSet</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:UEqTerm\">UEqTerm</a> :: <span class=\"keyword\">forall</span> t1. !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t1) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t1) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:UDistinctTerm\">UDistinctTerm</a> :: <span class=\"keyword\">forall</span> t1. !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-List-NonEmpty.html#t:NonEmpty\" title=\"Data.List.NonEmpty\">NonEmpty</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t1)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:UITETerm\">UITETerm</a> :: <span class=\"keyword\">forall</span> t. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UAddNumTerm\">UAddNumTerm</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UNegNumTerm\">UNegNumTerm</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UMulNumTerm\">UMulNumTerm</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UAbsNumTerm\">UAbsNumTerm</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:USignumNumTerm\">USignumNumTerm</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:ULtOrdTerm\">ULtOrdTerm</a> :: <span class=\"keyword\">forall</span> t1. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t1, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalOrdTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalOrdTerm</a> t1) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t1) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t1) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:ULeOrdTerm\">ULeOrdTerm</a> :: <span class=\"keyword\">forall</span> t1. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t1, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalOrdTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalOrdTerm</a> t1) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t1) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t1) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:UAndBitsTerm\">UAndBitsTerm</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitwiseTerm</a> t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UOrBitsTerm\">UOrBitsTerm</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitwiseTerm</a> t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UXorBitsTerm\">UXorBitsTerm</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitwiseTerm</a> t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UComplementBitsTerm\">UComplementBitsTerm</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitwiseTerm</a> t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UShiftLeftTerm\">UShiftLeftTerm</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalShiftTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalShiftTerm</a> t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UShiftRightTerm\">UShiftRightTerm</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalShiftTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalShiftTerm</a> t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:URotateLeftTerm\">URotateLeftTerm</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalRotateTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalRotateTerm</a> t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:URotateRightTerm\">URotateRightTerm</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalRotateTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalRotateTerm</a> t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UBitCastTerm\">UBitCastTerm</a> :: <span class=\"keyword\">forall</span> t a. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitCastTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitCastTerm</a> a t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UBitCastOrTerm\">UBitCastOrTerm</a> :: <span class=\"keyword\">forall</span> t a. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitCastOrTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitCastOrTerm</a> a t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UBVConcatTerm\">UBVConcatTerm</a> :: <span class=\"keyword\">forall</span> (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r), 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (bv (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r))) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv l)) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv r)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> (bv (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r))</li><li><a href=\"#v:UBVSelectTerm\">UBVSelectTerm</a> :: <span class=\"keyword\">forall</span> (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (ix :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (w :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> ix, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> w, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> w, (ix <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> w) <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (bv w)) =&gt; !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> ix) -&gt; !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> w) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv n)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> (bv w)</li><li><a href=\"#v:UBVExtendTerm\">UBVExtendTerm</a> :: <span class=\"keyword\">forall</span> (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r, l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (bv r)) =&gt; !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> r) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv l)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> (bv r)</li><li><a href=\"#v:UApplyTerm\">UApplyTerm</a> :: <span class=\"keyword\">forall</span> f a t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalApplyTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalApplyTerm</a> f a t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> f -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UDivIntegralTerm\">UDivIntegralTerm</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UModIntegralTerm\">UModIntegralTerm</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UQuotIntegralTerm\">UQuotIntegralTerm</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:URemIntegralTerm\">URemIntegralTerm</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UFPTraitTerm\">UFPTraitTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (fp :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPTrait\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPTrait</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:UFdivTerm\">UFdivTerm</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFractionalTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFractionalTerm</a> t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:URecipTerm\">URecipTerm</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFractionalTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFractionalTerm</a> t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UFloatingUnaryTerm\">UFloatingUnaryTerm</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFloatingTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFloatingTerm</a> t) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FloatingUnaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FloatingUnaryOp</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UPowerTerm\">UPowerTerm</a> :: <span class=\"keyword\">forall</span> t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFloatingTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFloatingTerm</a> t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UFPUnaryTerm\">UFPUnaryTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (fp :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPUnaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPUnaryOp</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> (fp eb sb)</li><li><a href=\"#v:UFPBinaryTerm\">UFPBinaryTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (fp :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPBinaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPBinaryOp</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> (fp eb sb)</li><li><a href=\"#v:UFPRoundingUnaryTerm\">UFPRoundingUnaryTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (fp :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPRoundingUnaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPRoundingUnaryOp</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a>) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> (fp eb sb)</li><li><a href=\"#v:UFPRoundingBinaryTerm\">UFPRoundingBinaryTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (fp :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; !<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPRoundingBinaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPRoundingBinaryOp</a> -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a>) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> (fp eb sb)</li><li><a href=\"#v:UFPFMATerm\">UFPFMATerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (fp :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a>) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> (fp eb sb)</li><li><a href=\"#v:UFromIntegralTerm\">UFromIntegralTerm</a> :: <span class=\"keyword\">forall</span> a t. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFromIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFromIntegralTerm</a> a t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UFromFPOrTerm\">UFromFPOrTerm</a> :: <span class=\"keyword\">forall</span> t (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalIEEEFPConvertibleTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalIEEEFPConvertibleTerm</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a>) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (<a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb)) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> t</li><li><a href=\"#v:UToFPTerm\">UToFPTerm</a> :: <span class=\"keyword\">forall</span> a (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalIEEEFPConvertibleTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalIEEEFPConvertibleTerm</a> a, <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (<a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb)) =&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a>) -&gt; !(<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> eb -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> sb -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UTerm</a> (<a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb)</li></ul>","name":"UTerm UConTerm USymTerm UForallTerm UExistsTerm UNotTerm UOrTerm UAndTerm UEqTerm UDistinctTerm UITETerm UAddNumTerm UNegNumTerm UMulNumTerm UAbsNumTerm USignumNumTerm ULtOrdTerm ULeOrdTerm UAndBitsTerm UOrBitsTerm UXorBitsTerm UComplementBitsTerm UShiftLeftTerm UShiftRightTerm URotateLeftTerm URotateRightTerm UBitCastTerm UBitCastOrTerm UBVConcatTerm UBVSelectTerm UBVExtendTerm UApplyTerm UDivIntegralTerm UModIntegralTerm UQuotIntegralTerm URemIntegralTerm UFPTraitTerm UFdivTerm URecipTerm UFloatingUnaryTerm UPowerTerm UFPUnaryTerm UFPBinaryTerm UFPRoundingUnaryTerm UFPRoundingBinaryTerm UFPFMATerm UFromIntegralTerm UFromFPOrTerm UToFPTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UTerm"},{"display_html":"<a href=\"#v:prettyPrintTerm\">prettyPrintTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"prettyPrintTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:prettyPrintTerm"},{"display_html":"<a href=\"#v:conTerm\">conTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t =&gt; t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"conTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:conTerm"},{"display_html":"<a href=\"#v:symTerm\">symTerm</a> :: <span class=\"keyword\">forall</span> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) t. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"symTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:symTerm"},{"display_html":"<a href=\"#v:ssymTerm\">ssymTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t =&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"ssymTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ssymTerm"},{"display_html":"<a href=\"#v:isymTerm\">isymTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t =&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"isymTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:isymTerm"},{"display_html":"<a href=\"#v:forallTerm\">forallTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ConstantKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConstantKind</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"forallTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:forallTerm"},{"display_html":"<a href=\"#v:existsTerm\">existsTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ConstantKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConstantKind</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"existsTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:existsTerm"},{"display_html":"<a href=\"#v:notTerm\">notTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"notTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:notTerm"},{"display_html":"<a href=\"#v:orTerm\">orTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"orTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:orTerm"},{"display_html":"<a href=\"#v:andTerm\">andTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"andTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:andTerm"},{"display_html":"<a href=\"#v:eqTerm\">eqTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"eqTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:eqTerm"},{"display_html":"<a href=\"#v:distinctTerm\">distinctTerm</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-List-NonEmpty.html#t:NonEmpty\" title=\"Data.List.NonEmpty\">NonEmpty</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"distinctTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:distinctTerm"},{"display_html":"<a href=\"#v:iteTerm\">iteTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"iteTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:iteTerm"},{"display_html":"<a href=\"#v:addNumTerm\">addNumTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"addNumTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:addNumTerm"},{"display_html":"<a href=\"#v:negNumTerm\">negNumTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"negNumTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:negNumTerm"},{"display_html":"<a href=\"#v:mulNumTerm\">mulNumTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"mulNumTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:mulNumTerm"},{"display_html":"<a href=\"#v:absNumTerm\">absNumTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"absNumTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:absNumTerm"},{"display_html":"<a href=\"#v:signumNumTerm\">signumNumTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"signumNumTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:signumNumTerm"},{"display_html":"<a href=\"#v:ltOrdTerm\">ltOrdTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalOrdTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalOrdTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"ltOrdTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ltOrdTerm"},{"display_html":"<a href=\"#v:leOrdTerm\">leOrdTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalOrdTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalOrdTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"leOrdTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:leOrdTerm"},{"display_html":"<a href=\"#v:andBitsTerm\">andBitsTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitwiseTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"andBitsTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:andBitsTerm"},{"display_html":"<a href=\"#v:orBitsTerm\">orBitsTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitwiseTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"orBitsTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:orBitsTerm"},{"display_html":"<a href=\"#v:xorBitsTerm\">xorBitsTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitwiseTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"xorBitsTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:xorBitsTerm"},{"display_html":"<a href=\"#v:complementBitsTerm\">complementBitsTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitwiseTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"complementBitsTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:complementBitsTerm"},{"display_html":"<a href=\"#v:shiftLeftTerm\">shiftLeftTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalShiftTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalShiftTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"shiftLeftTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:shiftLeftTerm"},{"display_html":"<a href=\"#v:rotateLeftTerm\">rotateLeftTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalRotateTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalRotateTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"rotateLeftTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:rotateLeftTerm"},{"display_html":"<a href=\"#v:shiftRightTerm\">shiftRightTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalShiftTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalShiftTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"shiftRightTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:shiftRightTerm"},{"display_html":"<a href=\"#v:rotateRightTerm\">rotateRightTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalRotateTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalRotateTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"rotateRightTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:rotateRightTerm"},{"display_html":"<a href=\"#v:bitCastTerm\">bitCastTerm</a> :: (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitCastTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitCastTerm</a> a b, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> b) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b","name":"bitCastTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:bitCastTerm"},{"display_html":"<a href=\"#v:bitCastOrTerm\">bitCastOrTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitCastOrTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitCastOrTerm</a> a b =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b","name":"bitCastOrTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:bitCastOrTerm"},{"display_html":"<a href=\"#v:bvConcatTerm\">bvConcatTerm</a> :: <span class=\"keyword\">forall</span> bv (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r), 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (bv (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r))) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv l) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv r) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r))","name":"bvConcatTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:bvConcatTerm"},{"display_html":"<a href=\"#v:bvSelectTerm\">bvSelectTerm</a> :: <span class=\"keyword\">forall</span> bv (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (ix :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (w :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) p q. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> ix, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> w, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> w, (ix <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> w) <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (bv w)) =&gt; p ix -&gt; q w -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv n) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv w)","name":"bvSelectTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:bvSelectTerm"},{"display_html":"<a href=\"#v:bvExtendTerm\">bvExtendTerm</a> :: <span class=\"keyword\">forall</span> bv (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) proxy. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r, l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (bv r)) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; proxy r -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv l) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv r)","name":"bvExtendTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:bvExtendTerm"},{"display_html":"<a href=\"#v:bvsignExtendTerm\">bvsignExtendTerm</a> :: <span class=\"keyword\">forall</span> bv (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) proxy. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r, l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (bv r)) =&gt; proxy r -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv l) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv r)","name":"bvsignExtendTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:bvsignExtendTerm"},{"display_html":"<a href=\"#v:bvzeroExtendTerm\">bvzeroExtendTerm</a> :: <span class=\"keyword\">forall</span> bv (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) proxy. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r, l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (bv r)) =&gt; proxy r -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv l) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv r)","name":"bvzeroExtendTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:bvzeroExtendTerm"},{"display_html":"<a href=\"#v:applyTerm\">applyTerm</a> :: (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalApplyTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalApplyTerm</a> f a b, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> b) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> f -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b","name":"applyTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:applyTerm"},{"display_html":"<a href=\"#v:divIntegralTerm\">divIntegralTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"divIntegralTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:divIntegralTerm"},{"display_html":"<a href=\"#v:modIntegralTerm\">modIntegralTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"modIntegralTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:modIntegralTerm"},{"display_html":"<a href=\"#v:quotIntegralTerm\">quotIntegralTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"quotIntegralTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:quotIntegralTerm"},{"display_html":"<a href=\"#v:remIntegralTerm\">remIntegralTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"remIntegralTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:remIntegralTerm"},{"display_html":"<a href=\"#v:fpTraitTerm\">fpTraitTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) fp. (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPTrait\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPTrait</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpTraitTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:fpTraitTerm"},{"display_html":"<a href=\"#v:fdivTerm\">fdivTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFractionalTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFractionalTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"fdivTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:fdivTerm"},{"display_html":"<a href=\"#v:recipTerm\">recipTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFractionalTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFractionalTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"recipTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:recipTerm"},{"display_html":"<a href=\"#v:floatingUnaryTerm\">floatingUnaryTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFloatingTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFloatingTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FloatingUnaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FloatingUnaryOp</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"floatingUnaryTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:floatingUnaryTerm"},{"display_html":"<a href=\"#v:powerTerm\">powerTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFloatingTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFloatingTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"powerTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:powerTerm"},{"display_html":"<a href=\"#v:fpUnaryTerm\">fpUnaryTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) fp. (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPUnaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPUnaryOp</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)","name":"fpUnaryTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:fpUnaryTerm"},{"display_html":"<a href=\"#v:fpBinaryTerm\">fpBinaryTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) fp. (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPBinaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPBinaryOp</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)","name":"fpBinaryTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:fpBinaryTerm"},{"display_html":"<a href=\"#v:fpRoundingUnaryTerm\">fpRoundingUnaryTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) fp. (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPRoundingUnaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPRoundingUnaryOp</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)","name":"fpRoundingUnaryTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:fpRoundingUnaryTerm"},{"display_html":"<a href=\"#v:fpRoundingBinaryTerm\">fpRoundingBinaryTerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) fp. (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPRoundingBinaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPRoundingBinaryOp</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)","name":"fpRoundingBinaryTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:fpRoundingBinaryTerm"},{"display_html":"<a href=\"#v:fpFMATerm\">fpFMATerm</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) fp. (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb)","name":"fpFMATerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:fpFMATerm"},{"display_html":"<a href=\"#v:fromIntegralTerm\">fromIntegralTerm</a> :: (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFromIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFromIntegralTerm</a> a b, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> b) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b","name":"fromIntegralTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:fromIntegralTerm"},{"display_html":"<a href=\"#v:fromFPOrTerm\">fromFPOrTerm</a> :: <span class=\"keyword\">forall</span> a (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalIEEEFPConvertibleTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalIEEEFPConvertibleTerm</a> a, <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (<a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"fromFPOrTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:fromFPOrTerm"},{"display_html":"<a href=\"#v:toFPTerm\">toFPTerm</a> :: <span class=\"keyword\">forall</span> a (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalIEEEFPConvertibleTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalIEEEFPConvertibleTerm</a> a, <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (<a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb)) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (<a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb)","name":"toFPTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:toFPTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:SupportedTerm\">SupportedTerm</a> :: () =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"SupportedTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:SupportedTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:SupportedTypedSymbol\">SupportedTypedSymbol</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKindConstraint\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKindConstraint</a> k t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> k) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> k t","name":"SupportedTypedSymbol","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:SupportedTypedSymbol"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:SupportedConstantTypedSymbol\">SupportedConstantTypedSymbol</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKindConstraint\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKindConstraint</a> k t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> k, k <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ConstantKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConstantKind</a>) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> k t","name":"SupportedConstantTypedSymbol","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:SupportedConstantTypedSymbol"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ConTerm\">ConTerm</a> :: () =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t =&gt; t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"ConTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ConTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:SymTerm\">SymTerm</a> :: () =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:AnyKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">AnyKind</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"SymTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:SymTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ForallTerm\">ForallTerm</a> :: <span class=\"keyword\">forall</span> r t. () =&gt; (r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedNonFuncPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedNonFuncPrim</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ConstantKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConstantKind</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> r","name":"ForallTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ForallTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ExistsTerm\">ExistsTerm</a> :: <span class=\"keyword\">forall</span> r t. () =&gt; (r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedNonFuncPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedNonFuncPrim</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ConstantKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConstantKind</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> r","name":"ExistsTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ExistsTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:NotTerm\">NotTerm</a> :: () =&gt; r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> r","name":"NotTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:NotTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:OrTerm\">OrTerm</a> :: () =&gt; r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> r","name":"OrTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:OrTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:AndTerm\">AndTerm</a> :: () =&gt; r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> r","name":"AndTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:AndTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:OrTermAll\">OrTermAll</a> :: () =&gt; r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"https://hackage.haskell.org/package/unordered-containers-0.2.20/docs/Data-HashSet.html#t:HashSet\" title=\"Data.HashSet\">HashSet</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> r","name":"OrTermAll","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:OrTermAll"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:AndTermAll\">AndTermAll</a> :: () =&gt; r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"https://hackage.haskell.org/package/unordered-containers-0.2.20/docs/Data-HashSet.html#t:HashSet\" title=\"Data.HashSet\">HashSet</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> r","name":"AndTermAll","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:AndTermAll"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:EqTerm\">EqTerm</a> :: <span class=\"keyword\">forall</span> r t. () =&gt; (r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> r","name":"EqTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:EqTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:DistinctTerm\">DistinctTerm</a> :: <span class=\"keyword\">forall</span> r t. () =&gt; (r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-List-NonEmpty.html#t:NonEmpty\" title=\"Data.List.NonEmpty\">NonEmpty</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> r","name":"DistinctTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:DistinctTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ITETerm\">ITETerm</a> :: () =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"ITETerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ITETerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:AddNumTerm\">AddNumTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"AddNumTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:AddNumTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:NegNumTerm\">NegNumTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"NegNumTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:NegNumTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:MulNumTerm\">MulNumTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"MulNumTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:MulNumTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:AbsNumTerm\">AbsNumTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"AbsNumTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:AbsNumTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:SignumNumTerm\">SignumNumTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"SignumNumTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:SignumNumTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:LtOrdTerm\">LtOrdTerm</a> :: <span class=\"keyword\">forall</span> r t. () =&gt; (r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalOrdTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalOrdTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> r","name":"LtOrdTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:LtOrdTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:LeOrdTerm\">LeOrdTerm</a> :: <span class=\"keyword\">forall</span> r t. () =&gt; (r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalOrdTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalOrdTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> r","name":"LeOrdTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:LeOrdTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:AndBitsTerm\">AndBitsTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitwiseTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"AndBitsTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:AndBitsTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:OrBitsTerm\">OrBitsTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitwiseTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"OrBitsTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:OrBitsTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:XorBitsTerm\">XorBitsTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitwiseTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"XorBitsTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:XorBitsTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ComplementBitsTerm\">ComplementBitsTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitwiseTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"ComplementBitsTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ComplementBitsTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ShiftLeftTerm\">ShiftLeftTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalShiftTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalShiftTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"ShiftLeftTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ShiftLeftTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:RotateLeftTerm\">RotateLeftTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalRotateTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalRotateTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"RotateLeftTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:RotateLeftTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ShiftRightTerm\">ShiftRightTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalShiftTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalShiftTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"ShiftRightTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ShiftRightTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:RotateRightTerm\">RotateRightTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalRotateTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalRotateTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"RotateRightTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:RotateRightTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:BitCastTerm\">BitCastTerm</a> :: <span class=\"keyword\">forall</span> b a. () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> b, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitCastTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitCastTerm</a> a b) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b","name":"BitCastTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:BitCastTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:BitCastOrTerm\">BitCastOrTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> b, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitCastOrTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitCastOrTerm</a> a b) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b","name":"BitCastOrTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:BitCastOrTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:BVConcatTerm\">BVConcatTerm</a> :: <span class=\"keyword\">forall</span> ret bv (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r), 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (bv l), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (bv r), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (bv (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r)), ret <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> bv (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r)) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv l) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv r) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> ret","name":"BVConcatTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:BVConcatTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:BVSelectTerm\">BVSelectTerm</a> :: <span class=\"keyword\">forall</span> ret bv (w :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (ix :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> ix, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> w, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> w, (ix <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> w) <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (bv n), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (bv w), ret <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> bv w) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> ix -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> w -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv n) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> ret","name":"BVSelectTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:BVSelectTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:BVExtendTerm\">BVExtendTerm</a> :: <span class=\"keyword\">forall</span> ret bv (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r, l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (bv l), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (bv r), ret <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> bv r) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> r -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv l) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> ret","name":"BVExtendTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:BVExtendTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ApplyTerm\">ApplyTerm</a> :: <span class=\"keyword\">forall</span> b f a. () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalApplyTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalApplyTerm</a> f a b, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> f, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> b) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> f -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b","name":"ApplyTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ApplyTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:DivIntegralTerm\">DivIntegralTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"DivIntegralTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:DivIntegralTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ModIntegralTerm\">ModIntegralTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"ModIntegralTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ModIntegralTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:QuotIntegralTerm\">QuotIntegralTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"QuotIntegralTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:QuotIntegralTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:RemIntegralTerm\">RemIntegralTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"RemIntegralTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:RemIntegralTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FPTraitTerm\">FPTraitTerm</a> :: <span class=\"keyword\">forall</span> r (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) fp. () =&gt; (r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>, <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPTrait\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPTrait</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> r","name":"FPTraitTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:FPTraitTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FdivTerm\">FdivTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFractionalTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFractionalTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"FdivTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:FdivTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:RecipTerm\">RecipTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFractionalTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFractionalTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"RecipTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:RecipTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FloatingUnaryTerm\">FloatingUnaryTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFloatingTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFloatingTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FloatingUnaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FloatingUnaryOp</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"FloatingUnaryTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:FloatingUnaryTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:PowerTerm\">PowerTerm</a> :: () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFloatingTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFloatingTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t","name":"PowerTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:PowerTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FPUnaryTerm\">FPUnaryTerm</a> :: <span class=\"keyword\">forall</span> ret fp (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (ret <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> fp eb sb, <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPUnaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPUnaryOp</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> ret","name":"FPUnaryTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:FPUnaryTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FPBinaryTerm\">FPBinaryTerm</a> :: <span class=\"keyword\">forall</span> ret fp (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (ret <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> fp eb sb, <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPBinaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPBinaryOp</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> ret","name":"FPBinaryTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:FPBinaryTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FPRoundingUnaryTerm\">FPRoundingUnaryTerm</a> :: <span class=\"keyword\">forall</span> ret fp (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (ret <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> fp eb sb, <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPRoundingUnaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPRoundingUnaryOp</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> ret","name":"FPRoundingUnaryTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:FPRoundingUnaryTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FPRoundingBinaryTerm\">FPRoundingBinaryTerm</a> :: <span class=\"keyword\">forall</span> ret fp (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (ret <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> fp eb sb, <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPRoundingBinaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPRoundingBinaryOp</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> ret","name":"FPRoundingBinaryTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:FPRoundingBinaryTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FPFMATerm\">FPFMATerm</a> :: <span class=\"keyword\">forall</span> ret fp (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (ret <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> fp eb sb, <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> ret","name":"FPFMATerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:FPFMATerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FromIntegralTerm\">FromIntegralTerm</a> :: <span class=\"keyword\">forall</span> b a. () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFromIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFromIntegralTerm</a> a b, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> b) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b","name":"FromIntegralTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:FromIntegralTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FromFPOrTerm\">FromFPOrTerm</a> :: <span class=\"keyword\">forall</span> a (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalIEEEFPConvertibleTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalIEEEFPConvertibleTerm</a> a, <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (<a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"FromFPOrTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:FromFPOrTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ToFPTerm\">ToFPTerm</a> :: <span class=\"keyword\">forall</span> ret (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) a. () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalIEEEFPConvertibleTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalIEEEFPConvertibleTerm</a> a, <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (<a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> a, ret <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> eb -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> sb -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> ret","name":"ToFPTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ToFPTerm"},{"display_html":"<a href=\"#v:trueTerm\">trueTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"trueTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:trueTerm"},{"display_html":"<a href=\"#v:falseTerm\">falseTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"falseTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:falseTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:BoolConTerm\">BoolConTerm</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"BoolConTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:BoolConTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:TrueTerm\">TrueTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"TrueTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:TrueTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FalseTerm\">FalseTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"FalseTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:FalseTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:BoolTerm\">BoolTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"BoolTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:BoolTerm"},{"display_html":"<a href=\"#v:pevalNotTerm\">pevalNotTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"pevalNotTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:pevalNotTerm"},{"display_html":"<a href=\"#v:pevalOrTerm\">pevalOrTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"pevalOrTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:pevalOrTerm"},{"display_html":"<a href=\"#v:pevalAndTerm\">pevalAndTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"pevalAndTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:pevalAndTerm"},{"display_html":"<a href=\"#v:pevalImplyTerm\">pevalImplyTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"pevalImplyTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:pevalImplyTerm"},{"display_html":"<a href=\"#v:pevalXorTerm\">pevalXorTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"pevalXorTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:pevalXorTerm"},{"display_html":"<a href=\"#v:pevalITEBasic\">pevalITEBasic</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a)","name":"pevalITEBasic","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:pevalITEBasic"},{"display_html":"<a href=\"#v:pevalITEBasicTerm\">pevalITEBasicTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"pevalITEBasicTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:pevalITEBasicTerm"},{"display_html":"<a href=\"#v:pevalDefaultEqTerm\">pevalDefaultEqTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedNonFuncPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedNonFuncPrim</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"pevalDefaultEqTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:pevalDefaultEqTerm"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:NonFuncPrimConstraint\">NonFuncPrimConstraint</a> a = (<a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:SymVal\" title=\"Data.SBV.Internals\">SymVal</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:NonFuncSBVBaseType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">NonFuncSBVBaseType</a> a), <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:EqSymbolic\" title=\"Data.SBV.Internals\">EqSymbolic</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> a), <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Trans.html#t:Mergeable\" title=\"Data.SBV.Trans\">Mergeable</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> a), <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Trans.html#t:SMTDefinable\" title=\"Data.SBV.Trans\">SMTDefinable</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> a), <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Trans.html#t:Mergeable\" title=\"Data.SBV.Trans\">Mergeable</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> a), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> a <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:SBV\" title=\"Data.SBV.Internals\">SBV</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:NonFuncSBVBaseType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">NonFuncSBVBaseType</a> a), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PrimConstraint\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PrimConstraint</a> a)","name":"NonFuncPrimConstraint","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:NonFuncPrimConstraint"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Show\" title=\"Prelude\">Show</a> a, <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> a) =&gt; <a href=\"#t:NonFuncSBVRep\">NonFuncSBVRep</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:NonFuncSBVBaseType\">NonFuncSBVBaseType</a> a</li></ul>","name":"NonFuncSBVRep NonFuncSBVBaseType","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:NonFuncSBVRep"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:NonFuncSBVRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">NonFuncSBVRep</a> a =&gt; <a href=\"#t:SupportedNonFuncPrim\">SupportedNonFuncPrim</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:conNonFuncSBVTerm\">conNonFuncSBVTerm</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:SBV\" title=\"Data.SBV.Internals\">SBV</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:NonFuncSBVBaseType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">NonFuncSBVBaseType</a> a)</li><li><a href=\"#v:symNonFuncSBVTerm\">symNonFuncSBVTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVFreshMonad\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVFreshMonad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:SBV\" title=\"Data.SBV.Internals\">SBV</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:NonFuncSBVBaseType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">NonFuncSBVBaseType</a> a))</li><li><a href=\"#v:withNonFuncPrim\">withNonFuncPrim</a> :: (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:NonFuncPrimConstraint\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">NonFuncPrimConstraint</a> a =&gt; r) -&gt; r</li></ul>","name":"SupportedNonFuncPrim withNonFuncPrim conNonFuncSBVTerm symNonFuncSBVTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedNonFuncPrim"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:SBVRep\">SBVRep</a> t <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:SBVType\">SBVType</a> t</li></ul>","name":"SBVRep SBVType","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVRep"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" title=\"Control.Monad.IO.Class\">MonadIO</a> m =&gt; <a href=\"#t:SBVFreshMonad\">SBVFreshMonad</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:sbvFresh\">sbvFresh</a> :: <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:SymVal\" title=\"Data.SBV.Internals\">SymVal</a> a =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:SBV\" title=\"Data.SBV.Internals\">SBV</a> a)</li></ul>","name":"SBVFreshMonad sbvFresh","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVFreshMonad"},{"display_html":"<a href=\"#v:translateTypeError\">translateTypeError</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Type-Reflection.html#t:TypeRep\" title=\"Type.Reflection\">TypeRep</a> a -&gt; b","name":"translateTypeError","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:translateTypeError"},{"display_html":"<a href=\"#v:parseSMTModelResultError\">parseSMTModelResultError</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Type-Reflection.html#t:TypeRep\" title=\"Type.Reflection\">TypeRep</a> a -&gt; ([([<a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:CV\" title=\"Data.SBV.Internals\">CV</a>], <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:CV\" title=\"Data.SBV.Internals\">CV</a>)], <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:CV\" title=\"Data.SBV.Internals\">CV</a>) -&gt; a","name":"parseSMTModelResultError","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:parseSMTModelResultError"},{"display_html":"<a href=\"#v:partitionCVArg\">partitionCVArg</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedNonFuncPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedNonFuncPrim</a> a =&gt; [([<a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:CV\" title=\"Data.SBV.Internals\">CV</a>], <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:CV\" title=\"Data.SBV.Internals\">CV</a>)] -&gt; [(a, [([<a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:CV\" title=\"Data.SBV.Internals\">CV</a>], <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:CV\" title=\"Data.SBV.Internals\">CV</a>)])]","name":"partitionCVArg","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:partitionCVArg"},{"display_html":"<a href=\"#v:parseScalarSMTModelResult\">parseScalarSMTModelResult</a> :: <span class=\"keyword\">forall</span> v r. (<a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Trans.html#t:SatModel\" title=\"Data.SBV.Trans\">SatModel</a> r, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> v) =&gt; (r -&gt; v) -&gt; ([([<a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:CV\" title=\"Data.SBV.Internals\">CV</a>], <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:CV\" title=\"Data.SBV.Internals\">CV</a>)], <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:CV\" title=\"Data.SBV.Internals\">CV</a>) -&gt; v","name":"parseScalarSMTModelResult","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:parseScalarSMTModelResult"},{"display_html":"<a href=\"#v:bvIsNonZeroFromGEq1\">bvIsNonZeroFromGEq1</a> :: <span class=\"keyword\">forall</span> (w :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a>) r proxy. 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> w =&gt; proxy w -&gt; (<a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Trans.html#t:BVIsNonZero\" title=\"Data.SBV.Trans\">BVIsNonZero</a> w =&gt; r) -&gt; r","name":"bvIsNonZeroFromGEq1","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:bvIsNonZeroFromGEq1"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:PartialFun\">PartialFun</a> a b = a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> b","name":"PartialFun","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PartialFun"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:PartialRuleUnary\">PartialRuleUnary</a> a b = <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PartialFun\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PartialFun</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a) (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b)","name":"PartialRuleUnary","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PartialRuleUnary"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TotalRuleUnary\">TotalRuleUnary</a> a b = <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b","name":"TotalRuleUnary","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TotalRuleUnary"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:PartialRuleBinary\">PartialRuleBinary</a> a b c = <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PartialFun\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PartialFun</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b) (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> c)","name":"PartialRuleBinary","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PartialRuleBinary"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TotalRuleBinary\">TotalRuleBinary</a> a b c = <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> c","name":"TotalRuleBinary","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TotalRuleBinary"},{"display_html":"<a href=\"#v:totalize\">totalize</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PartialFun\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PartialFun</a> a b -&gt; (a -&gt; b) -&gt; a -&gt; b","name":"totalize","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:totalize"},{"display_html":"<a href=\"#v:totalize2\">totalize2</a> :: (a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PartialFun\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PartialFun</a> b c) -&gt; (a -&gt; b -&gt; c) -&gt; a -&gt; b -&gt; c","name":"totalize2","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:totalize2"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnaryPartialStrategy\">UnaryPartialStrategy</a> tag a b | tag a -&gt; b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:extractor\">extractor</a> :: tag -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> a</li><li><a href=\"#v:constantHandler\">constantHandler</a> :: tag -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b)</li><li><a href=\"#v:nonConstantHandler\">nonConstantHandler</a> :: tag -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b)</li></ul>","name":"UnaryPartialStrategy extractor constantHandler nonConstantHandler","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UnaryPartialStrategy"},{"display_html":"<a href=\"#v:unaryPartial\">unaryPartial</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:UnaryPartialStrategy\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">UnaryPartialStrategy</a> tag a b =&gt; tag -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PartialRuleUnary\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PartialRuleUnary</a> a b","name":"unaryPartial","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:unaryPartial"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:BinaryCommPartialStrategy\">BinaryCommPartialStrategy</a> tag a c | tag a -&gt; c <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:singleConstantHandler\">singleConstantHandler</a> :: tag -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> c)</li></ul>","name":"BinaryCommPartialStrategy singleConstantHandler","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:BinaryCommPartialStrategy"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:BinaryPartialStrategy\">BinaryPartialStrategy</a> tag a b c | tag a b -&gt; c <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:extractora\">extractora</a> :: tag -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> a</li><li><a href=\"#v:extractorb\">extractorb</a> :: tag -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> b</li><li><a href=\"#v:allConstantHandler\">allConstantHandler</a> :: tag -&gt; a -&gt; b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> c)</li><li><a href=\"#v:leftConstantHandler\">leftConstantHandler</a> :: tag -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> c)</li><li><a href=\"#v:rightConstantHandler\">rightConstantHandler</a> :: tag -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> c)</li><li><a href=\"#v:nonBinaryConstantHandler\">nonBinaryConstantHandler</a> :: tag -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> c)</li></ul>","name":"BinaryPartialStrategy extractora extractorb allConstantHandler leftConstantHandler rightConstantHandler nonBinaryConstantHandler $dmleftConstantHandler $dmrightConstantHandler","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:BinaryPartialStrategy"},{"display_html":"<a href=\"#v:binaryPartial\">binaryPartial</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:BinaryPartialStrategy\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">BinaryPartialStrategy</a> tag a b c =&gt; tag -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PartialRuleBinary\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PartialRuleBinary</a> a b c","name":"binaryPartial","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:binaryPartial"},{"display_html":"<a href=\"#v:unaryUnfoldOnce\">unaryUnfoldOnce</a> :: <span class=\"keyword\">forall</span> a b. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> b =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PartialRuleUnary\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PartialRuleUnary</a> a b -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TotalRuleUnary\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TotalRuleUnary</a> a b -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TotalRuleUnary\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TotalRuleUnary</a> a b","name":"unaryUnfoldOnce","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:unaryUnfoldOnce"},{"display_html":"<a href=\"#v:binaryUnfoldOnce\">binaryUnfoldOnce</a> :: <span class=\"keyword\">forall</span> a b c. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> c =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PartialRuleBinary\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PartialRuleBinary</a> a b c -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TotalRuleBinary\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TotalRuleBinary</a> a b c -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TotalRuleBinary\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TotalRuleBinary</a> a b c","name":"binaryUnfoldOnce","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:binaryUnfoldOnce"},{"display_html":"<a href=\"#v:generalUnaryUnfolded\">generalUnaryUnfolded</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> b) =&gt; (a -&gt; b) -&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b","name":"generalUnaryUnfolded","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:generalUnaryUnfolded"},{"display_html":"<a href=\"#v:generalBinaryUnfolded\">generalBinaryUnfolded</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> b, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> c) =&gt; (a -&gt; b -&gt; c) -&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> c) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> c","name":"generalBinaryUnfolded","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:generalBinaryUnfolded"},{"display_html":"<a href=\"#v:unsafePevalBVConcatTerm\">unsafePevalBVConcatTerm</a> :: <span class=\"keyword\">forall</span> bv (n1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n2 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv =&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> n1 -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> n2 -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> r -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv n1) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv n2) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv r)","name":"unsafePevalBVConcatTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:unsafePevalBVConcatTerm"},{"display_html":"<a href=\"#v:unsafePevalBVExtendTerm\">unsafePevalBVExtendTerm</a> :: <span class=\"keyword\">forall</span> bv (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv =&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> l -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> r -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv l) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv r)","name":"unsafePevalBVExtendTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:unsafePevalBVExtendTerm"},{"display_html":"<a href=\"#v:unsafePevalBVSelectTerm\">unsafePevalBVSelectTerm</a> :: <span class=\"keyword\">forall</span> bv (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (ix :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (w :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv =&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> n -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> ix -&gt; <a href=\"Grisette-Internal-Utils-Parameterized.html#t:NatRepr\" title=\"Grisette.Internal.Utils.Parameterized\">NatRepr</a> w -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv n) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv w)","name":"unsafePevalBVSelectTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:unsafePevalBVSelectTerm"},{"display_html":"<a href=\"#v:boolToBVTerm\">boolToBVTerm</a> :: <span class=\"keyword\">forall</span> bv (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n, <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> m, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> m) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (bv m)) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv n)","name":"boolToBVTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:boolToBVTerm"},{"display_html":"<a href=\"#v:pevalDefaultAddNumTerm\">pevalDefaultAddNumTerm</a> :: (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"pevalDefaultAddNumTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:pevalDefaultAddNumTerm"},{"display_html":"<a href=\"#v:pevalDefaultNegNumTerm\">pevalDefaultNegNumTerm</a> :: (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"pevalDefaultNegNumTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:pevalDefaultNegNumTerm"},{"display_html":"<a href=\"#v:pevalDefaultMulNumTerm\">pevalDefaultMulNumTerm</a> :: (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"pevalDefaultMulNumTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:pevalDefaultMulNumTerm"},{"display_html":"<a href=\"#v:pevalBitsAbsNumTerm\">pevalBitsAbsNumTerm</a> :: (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:Bits\" title=\"Data.Bits\">Bits</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"pevalBitsAbsNumTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:pevalBitsAbsNumTerm"},{"display_html":"<a href=\"#v:doPevalNoOverflowAbsNumTerm\">doPevalNoOverflowAbsNumTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a)","name":"doPevalNoOverflowAbsNumTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:doPevalNoOverflowAbsNumTerm"},{"display_html":"<a href=\"#v:pevalGeneralSignumNumTerm\">pevalGeneralSignumNumTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"pevalGeneralSignumNumTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:pevalGeneralSignumNumTerm"},{"display_html":"<a href=\"#v:doPevalNoOverflowSignumNumTerm\">doPevalNoOverflowSignumNumTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a)","name":"doPevalNoOverflowSignumNumTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Term","link":"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:doPevalNoOverflowSignumNumTerm"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeTerm\">SomeTerm</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:SomeTerm\">SomeTerm</a> :: <span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-SomeTerm.html#t:SomeTerm\" title=\"Grisette.Internal.SymPrim.Prim.SomeTerm\">SomeTerm</a></li></ul>","name":"SomeTerm SomeTerm","module":"Grisette.Internal.SymPrim.Prim.SomeTerm","link":"Grisette-Internal-SymPrim-Prim-SomeTerm.html#t:SomeTerm"},{"display_html":"<a href=\"#v:someTerm\">someTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-SomeTerm.html#t:SomeTerm\" title=\"Grisette.Internal.SymPrim.Prim.SomeTerm\">SomeTerm</a>","name":"someTerm","module":"Grisette.Internal.SymPrim.Prim.SomeTerm","link":"Grisette-Internal-SymPrim-Prim-SomeTerm.html#v:someTerm"},{"display_html":"<a href=\"#v:someTermId\">someTermId</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-SomeTerm.html#t:SomeTerm\" title=\"Grisette.Internal.SymPrim.Prim.SomeTerm\">SomeTerm</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Caches.html#t:Id\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Caches\">Id</a>","name":"someTermId","module":"Grisette.Internal.SymPrim.Prim.SomeTerm","link":"Grisette-Internal-SymPrim-Prim-SomeTerm.html#v:someTermId"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:SubTerms\">SubTerms</a> :: [<a href=\"Grisette-Internal-SymPrim-Prim-SomeTerm.html#t:SomeTerm\" title=\"Grisette.Internal.SymPrim.Prim.SomeTerm\">SomeTerm</a>] -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"SubTerms","module":"Grisette.Internal.SymPrim.Prim.Pattern","link":"Grisette-Internal-SymPrim-Prim-Pattern.html#v:SubTerms"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:PartialFun\">PartialFun</a> a b = a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> b","name":"PartialFun","module":"Grisette.Internal.SymPrim.Prim.Internal.PartialEval","link":"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:PartialFun"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:PartialRuleUnary\">PartialRuleUnary</a> a b = <a href=\"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:PartialFun\" title=\"Grisette.Internal.SymPrim.Prim.Internal.PartialEval\">PartialFun</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a) (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b)","name":"PartialRuleUnary","module":"Grisette.Internal.SymPrim.Prim.Internal.PartialEval","link":"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:PartialRuleUnary"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TotalRuleUnary\">TotalRuleUnary</a> a b = <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b","name":"TotalRuleUnary","module":"Grisette.Internal.SymPrim.Prim.Internal.PartialEval","link":"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:TotalRuleUnary"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:PartialRuleBinary\">PartialRuleBinary</a> a b c = <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:PartialFun\" title=\"Grisette.Internal.SymPrim.Prim.Internal.PartialEval\">PartialFun</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b) (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> c)","name":"PartialRuleBinary","module":"Grisette.Internal.SymPrim.Prim.Internal.PartialEval","link":"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:PartialRuleBinary"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TotalRuleBinary\">TotalRuleBinary</a> a b c = <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> c","name":"TotalRuleBinary","module":"Grisette.Internal.SymPrim.Prim.Internal.PartialEval","link":"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:TotalRuleBinary"},{"display_html":"<a href=\"#v:totalize\">totalize</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:PartialFun\" title=\"Grisette.Internal.SymPrim.Prim.Internal.PartialEval\">PartialFun</a> a b -&gt; (a -&gt; b) -&gt; a -&gt; b","name":"totalize","module":"Grisette.Internal.SymPrim.Prim.Internal.PartialEval","link":"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#v:totalize"},{"display_html":"<a href=\"#v:totalize2\">totalize2</a> :: (a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:PartialFun\" title=\"Grisette.Internal.SymPrim.Prim.Internal.PartialEval\">PartialFun</a> b c) -&gt; (a -&gt; b -&gt; c) -&gt; a -&gt; b -&gt; c","name":"totalize2","module":"Grisette.Internal.SymPrim.Prim.Internal.PartialEval","link":"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#v:totalize2"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnaryPartialStrategy\">UnaryPartialStrategy</a> tag a b | tag a -&gt; b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:extractor\">extractor</a> :: tag -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> a</li><li><a href=\"#v:constantHandler\">constantHandler</a> :: tag -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b)</li><li><a href=\"#v:nonConstantHandler\">nonConstantHandler</a> :: tag -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b)</li></ul>","name":"UnaryPartialStrategy extractor constantHandler nonConstantHandler","module":"Grisette.Internal.SymPrim.Prim.Internal.PartialEval","link":"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:UnaryPartialStrategy"},{"display_html":"<a href=\"#v:unaryPartial\">unaryPartial</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:UnaryPartialStrategy\" title=\"Grisette.Internal.SymPrim.Prim.Internal.PartialEval\">UnaryPartialStrategy</a> tag a b =&gt; tag -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:PartialRuleUnary\" title=\"Grisette.Internal.SymPrim.Prim.Internal.PartialEval\">PartialRuleUnary</a> a b","name":"unaryPartial","module":"Grisette.Internal.SymPrim.Prim.Internal.PartialEval","link":"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#v:unaryPartial"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:BinaryCommPartialStrategy\">BinaryCommPartialStrategy</a> tag a c | tag a -&gt; c <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:singleConstantHandler\">singleConstantHandler</a> :: tag -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> c)</li></ul>","name":"BinaryCommPartialStrategy singleConstantHandler","module":"Grisette.Internal.SymPrim.Prim.Internal.PartialEval","link":"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:BinaryCommPartialStrategy"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:BinaryPartialStrategy\">BinaryPartialStrategy</a> tag a b c | tag a b -&gt; c <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:extractora\">extractora</a> :: tag -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> a</li><li><a href=\"#v:extractorb\">extractorb</a> :: tag -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> b</li><li><a href=\"#v:allConstantHandler\">allConstantHandler</a> :: tag -&gt; a -&gt; b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> c)</li><li><a href=\"#v:leftConstantHandler\">leftConstantHandler</a> :: tag -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> c)</li><li><a href=\"#v:rightConstantHandler\">rightConstantHandler</a> :: tag -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> c)</li><li><a href=\"#v:nonBinaryConstantHandler\">nonBinaryConstantHandler</a> :: tag -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> c)</li></ul>","name":"BinaryPartialStrategy extractora extractorb allConstantHandler leftConstantHandler rightConstantHandler nonBinaryConstantHandler $dmleftConstantHandler $dmrightConstantHandler","module":"Grisette.Internal.SymPrim.Prim.Internal.PartialEval","link":"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:BinaryPartialStrategy"},{"display_html":"<a href=\"#v:binaryPartial\">binaryPartial</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:BinaryPartialStrategy\" title=\"Grisette.Internal.SymPrim.Prim.Internal.PartialEval\">BinaryPartialStrategy</a> tag a b c =&gt; tag -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:PartialRuleBinary\" title=\"Grisette.Internal.SymPrim.Prim.Internal.PartialEval\">PartialRuleBinary</a> a b c","name":"binaryPartial","module":"Grisette.Internal.SymPrim.Prim.Internal.PartialEval","link":"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#v:binaryPartial"},{"display_html":"<a href=\"#v:unaryUnfoldOnce\">unaryUnfoldOnce</a> :: <span class=\"keyword\">forall</span> a b. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> b =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:PartialRuleUnary\" title=\"Grisette.Internal.SymPrim.Prim.Internal.PartialEval\">PartialRuleUnary</a> a b -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:TotalRuleUnary\" title=\"Grisette.Internal.SymPrim.Prim.Internal.PartialEval\">TotalRuleUnary</a> a b -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:TotalRuleUnary\" title=\"Grisette.Internal.SymPrim.Prim.Internal.PartialEval\">TotalRuleUnary</a> a b","name":"unaryUnfoldOnce","module":"Grisette.Internal.SymPrim.Prim.Internal.Unfold","link":"Grisette-Internal-SymPrim-Prim-Internal-Unfold.html#v:unaryUnfoldOnce"},{"display_html":"<a href=\"#v:binaryUnfoldOnce\">binaryUnfoldOnce</a> :: <span class=\"keyword\">forall</span> a b c. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> c =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:PartialRuleBinary\" title=\"Grisette.Internal.SymPrim.Prim.Internal.PartialEval\">PartialRuleBinary</a> a b c -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:TotalRuleBinary\" title=\"Grisette.Internal.SymPrim.Prim.Internal.PartialEval\">TotalRuleBinary</a> a b c -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-PartialEval.html#t:TotalRuleBinary\" title=\"Grisette.Internal.SymPrim.Prim.Internal.PartialEval\">TotalRuleBinary</a> a b c","name":"binaryUnfoldOnce","module":"Grisette.Internal.SymPrim.Prim.Internal.Unfold","link":"Grisette-Internal-SymPrim-Prim-Internal-Unfold.html#v:binaryUnfoldOnce"},{"display_html":"<a href=\"#v:generalUnaryUnfolded\">generalUnaryUnfolded</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> b) =&gt; (a -&gt; b) -&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b","name":"generalUnaryUnfolded","module":"Grisette.Internal.SymPrim.Prim.Internal.Unfold","link":"Grisette-Internal-SymPrim-Prim-Internal-Unfold.html#v:generalUnaryUnfolded"},{"display_html":"<a href=\"#v:generalBinaryUnfolded\">generalBinaryUnfolded</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> b, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> c) =&gt; (a -&gt; b -&gt; c) -&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> c) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> c","name":"generalBinaryUnfolded","module":"Grisette.Internal.SymPrim.Prim.Internal.Unfold","link":"Grisette-Internal-SymPrim-Prim-Internal-Unfold.html#v:generalBinaryUnfolded"},{"display_html":"<a href=\"#v:pevalFiniteBitsSymShiftShiftLeftTerm\">pevalFiniteBitsSymShiftShiftLeftTerm</a> :: <span class=\"keyword\">forall</span> bv (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> m, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> (bv m), <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> m, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> m) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-SymShift.html#t:SymShift\" title=\"Grisette.Internal.Core.Data.Class.SymShift\">SymShift</a> (bv m), <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> m, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> m) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (bv m), <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> m, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> m) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalShiftTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalShiftTerm</a> (bv m), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv n) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv n) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv n)","name":"pevalFiniteBitsSymShiftShiftLeftTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Instances.PEvalShiftTerm","link":"Grisette-Internal-SymPrim-Prim-Internal-Instances-PEvalShiftTerm.html#v:pevalFiniteBitsSymShiftShiftLeftTerm"},{"display_html":"<a href=\"#v:pevalFiniteBitsSymShiftShiftRightTerm\">pevalFiniteBitsSymShiftShiftRightTerm</a> :: <span class=\"keyword\">forall</span> bv (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> m, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> (bv m), <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> m, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> m) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-SymShift.html#t:SymShift\" title=\"Grisette.Internal.Core.Data.Class.SymShift\">SymShift</a> (bv m), <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> m, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> m) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (bv m), <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> m, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> m) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalShiftTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalShiftTerm</a> (bv m), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv n) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv n) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (bv n)","name":"pevalFiniteBitsSymShiftShiftRightTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Instances.PEvalShiftTerm","link":"Grisette-Internal-SymPrim-Prim-Internal-Instances-PEvalShiftTerm.html#v:pevalFiniteBitsSymShiftShiftRightTerm"},{"display_html":"<a href=\"#v:pevalFiniteBitsSymRotateRotateLeftTerm\">pevalFiniteBitsSymRotateRotateLeftTerm</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymRotate.html#t:SymRotate\" title=\"Grisette.Internal.Core.Data.Class.SymRotate\">SymRotate</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:FiniteBits\" title=\"Data.Bits\">FiniteBits</a> a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalRotateTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalRotateTerm</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"pevalFiniteBitsSymRotateRotateLeftTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Instances.PEvalRotateTerm","link":"Grisette-Internal-SymPrim-Prim-Internal-Instances-PEvalRotateTerm.html#v:pevalFiniteBitsSymRotateRotateLeftTerm"},{"display_html":"<a href=\"#v:pevalFiniteBitsSymRotateRotateRightTerm\">pevalFiniteBitsSymRotateRotateRightTerm</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymRotate.html#t:SymRotate\" title=\"Grisette.Internal.Core.Data.Class.SymRotate\">SymRotate</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:FiniteBits\" title=\"Data.Bits\">FiniteBits</a> a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalRotateTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalRotateTerm</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"pevalFiniteBitsSymRotateRotateRightTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Instances.PEvalRotateTerm","link":"Grisette-Internal-SymPrim-Prim-Internal-Instances-PEvalRotateTerm.html#v:pevalFiniteBitsSymRotateRotateRightTerm"},{"display_html":"<a href=\"#v:pevalDefaultDivIntegralTerm\">pevalDefaultDivIntegralTerm</a> :: (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"pevalDefaultDivIntegralTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Instances.PEvalDivModIntegralTerm","link":"Grisette-Internal-SymPrim-Prim-Internal-Instances-PEvalDivModIntegralTerm.html#v:pevalDefaultDivIntegralTerm"},{"display_html":"<a href=\"#v:pevalDefaultDivBoundedIntegralTerm\">pevalDefaultDivBoundedIntegralTerm</a> :: (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Enum.html#t:Bounded\" title=\"Data.Enum\">Bounded</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"pevalDefaultDivBoundedIntegralTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Instances.PEvalDivModIntegralTerm","link":"Grisette-Internal-SymPrim-Prim-Internal-Instances-PEvalDivModIntegralTerm.html#v:pevalDefaultDivBoundedIntegralTerm"},{"display_html":"<a href=\"#v:pevalDefaultModIntegralTerm\">pevalDefaultModIntegralTerm</a> :: (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"pevalDefaultModIntegralTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Instances.PEvalDivModIntegralTerm","link":"Grisette-Internal-SymPrim-Prim-Internal-Instances-PEvalDivModIntegralTerm.html#v:pevalDefaultModIntegralTerm"},{"display_html":"<a href=\"#v:pevalDefaultQuotIntegralTerm\">pevalDefaultQuotIntegralTerm</a> :: (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"pevalDefaultQuotIntegralTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Instances.PEvalDivModIntegralTerm","link":"Grisette-Internal-SymPrim-Prim-Internal-Instances-PEvalDivModIntegralTerm.html#v:pevalDefaultQuotIntegralTerm"},{"display_html":"<a href=\"#v:pevalDefaultQuotBoundedIntegralTerm\">pevalDefaultQuotBoundedIntegralTerm</a> :: (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Enum.html#t:Bounded\" title=\"Data.Enum\">Bounded</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"pevalDefaultQuotBoundedIntegralTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Instances.PEvalDivModIntegralTerm","link":"Grisette-Internal-SymPrim-Prim-Internal-Instances-PEvalDivModIntegralTerm.html#v:pevalDefaultQuotBoundedIntegralTerm"},{"display_html":"<a href=\"#v:pevalDefaultRemIntegralTerm\">pevalDefaultRemIntegralTerm</a> :: (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"pevalDefaultRemIntegralTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Instances.PEvalDivModIntegralTerm","link":"Grisette-Internal-SymPrim-Prim-Internal-Instances-PEvalDivModIntegralTerm.html#v:pevalDefaultRemIntegralTerm"},{"display_html":"<a href=\"#v:supportedPrimFun\">supportedPrimFun</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:ExpQ\" title=\"Language.Haskell.TH.Lib\">ExpQ</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:ExpQ\" title=\"Language.Haskell.TH.Lib\">ExpQ</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:ExpQ\" title=\"Language.Haskell.TH.Lib\">ExpQ</a> -&gt; ([<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:TypeQ\" title=\"Language.Haskell.TH.Lib\">TypeQ</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:ExpQ\" title=\"Language.Haskell.TH.Lib\">ExpQ</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:DecsQ\" title=\"Language.Haskell.TH.Lib\">DecsQ</a>","name":"supportedPrimFun","module":"Grisette.Internal.SymPrim.FunInstanceGen","link":"Grisette-Internal-SymPrim-FunInstanceGen.html#v:supportedPrimFun"},{"display_html":"<a href=\"#v:supportedPrimFunUpTo\">supportedPrimFunUpTo</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:ExpQ\" title=\"Language.Haskell.TH.Lib\">ExpQ</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:ExpQ\" title=\"Language.Haskell.TH.Lib\">ExpQ</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:ExpQ\" title=\"Language.Haskell.TH.Lib\">ExpQ</a> -&gt; ([<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:TypeQ\" title=\"Language.Haskell.TH.Lib\">TypeQ</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:ExpQ\" title=\"Language.Haskell.TH.Lib\">ExpQ</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:DecsQ\" title=\"Language.Haskell.TH.Lib\">DecsQ</a>","name":"supportedPrimFunUpTo","module":"Grisette.Internal.SymPrim.FunInstanceGen","link":"Grisette-Internal-SymPrim-FunInstanceGen.html#v:supportedPrimFunUpTo"},{"display_html":"<span class=\"keyword\">data</span> a <a href=\"#t:-61--45--62-\">=-&gt;</a> b = <a href=\"#v:TabularFun\">TabularFun</a> {<ul class=\"subs\"><li><a href=\"#v:funcTable\">funcTable</a> :: [(a, b)]</li><li><a href=\"#v:defaultFuncValue\">defaultFuncValue</a> :: b</li></ul>}","name":"=-> TabularFun funcTable defaultFuncValue","module":"Grisette.Internal.SymPrim.TabularFun","link":"Grisette-Internal-SymPrim-TabularFun.html#t:-61--45--62-"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:QuantifiedSymbols\">QuantifiedSymbols</a> = <a href=\"#v:QuantifiedSymbols\">QuantifiedSymbols</a> {<ul class=\"subs\"><li><a href=\"#v:_symbols\">_symbols</a> :: <a href=\"https://hackage.haskell.org/package/unordered-containers-0.2.20/docs/Data-HashSet.html#t:HashSet\" title=\"Data.HashSet\">HashSet</a> <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SomeTypedConstantSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SomeTypedConstantSymbol</a></li></ul>}","name":"QuantifiedSymbols QuantifiedSymbols _symbols","module":"Grisette.Internal.Backend.QuantifiedStack","link":"Grisette-Internal-Backend-QuantifiedStack.html#t:QuantifiedSymbols"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:QuantifiedStack\">QuantifiedStack</a>","name":"QuantifiedStack","module":"Grisette.Internal.Backend.QuantifiedStack","link":"Grisette-Internal-Backend-QuantifiedStack.html#t:QuantifiedStack"},{"display_html":"<a href=\"#v:addQuantified\">addQuantified</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedConstantSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedConstantSymbol</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Dynamic\" title=\"Data.Dynamic\">Dynamic</a> -&gt; <a href=\"Grisette-Internal-Backend-QuantifiedStack.html#t:QuantifiedStack\" title=\"Grisette.Internal.Backend.QuantifiedStack\">QuantifiedStack</a> -&gt; <a href=\"Grisette-Internal-Backend-QuantifiedStack.html#t:QuantifiedStack\" title=\"Grisette.Internal.Backend.QuantifiedStack\">QuantifiedStack</a>","name":"addQuantified","module":"Grisette.Internal.Backend.QuantifiedStack","link":"Grisette-Internal-Backend-QuantifiedStack.html#v:addQuantified"},{"display_html":"<a href=\"#v:lookupQuantified\">lookupQuantified</a> :: <span class=\"keyword\">forall</span> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SomeTypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SomeTypedSymbol</a> knd -&gt; <a href=\"Grisette-Internal-Backend-QuantifiedStack.html#t:QuantifiedStack\" title=\"Grisette.Internal.Backend.QuantifiedStack\">QuantifiedStack</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Dynamic\" title=\"Data.Dynamic\">Dynamic</a>","name":"lookupQuantified","module":"Grisette.Internal.Backend.QuantifiedStack","link":"Grisette-Internal-Backend-QuantifiedStack.html#v:lookupQuantified"},{"display_html":"<a href=\"#v:emptyQuantifiedSymbols\">emptyQuantifiedSymbols</a> :: <a href=\"Grisette-Internal-Backend-QuantifiedStack.html#t:QuantifiedSymbols\" title=\"Grisette.Internal.Backend.QuantifiedStack\">QuantifiedSymbols</a>","name":"emptyQuantifiedSymbols","module":"Grisette.Internal.Backend.QuantifiedStack","link":"Grisette-Internal-Backend-QuantifiedStack.html#v:emptyQuantifiedSymbols"},{"display_html":"<a href=\"#v:addQuantifiedSymbol\">addQuantifiedSymbol</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedConstantSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedConstantSymbol</a> a -&gt; <a href=\"Grisette-Internal-Backend-QuantifiedStack.html#t:QuantifiedSymbols\" title=\"Grisette.Internal.Backend.QuantifiedStack\">QuantifiedSymbols</a> -&gt; <a href=\"Grisette-Internal-Backend-QuantifiedStack.html#t:QuantifiedSymbols\" title=\"Grisette.Internal.Backend.QuantifiedStack\">QuantifiedSymbols</a>","name":"addQuantifiedSymbol","module":"Grisette.Internal.Backend.QuantifiedStack","link":"Grisette-Internal-Backend-QuantifiedStack.html#v:addQuantifiedSymbol"},{"display_html":"<a href=\"#v:isQuantifiedSymbol\">isQuantifiedSymbol</a> :: <span class=\"keyword\">forall</span> a (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd a -&gt; <a href=\"Grisette-Internal-Backend-QuantifiedStack.html#t:QuantifiedSymbols\" title=\"Grisette.Internal.Backend.QuantifiedStack\">QuantifiedSymbols</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"isQuantifiedSymbol","module":"Grisette.Internal.Backend.QuantifiedStack","link":"Grisette-Internal-Backend-QuantifiedStack.html#v:isQuantifiedSymbol"},{"display_html":"<a href=\"#v:emptyQuantifiedStack\">emptyQuantifiedStack</a> :: <a href=\"Grisette-Internal-Backend-QuantifiedStack.html#t:QuantifiedStack\" title=\"Grisette.Internal.Backend.QuantifiedStack\">QuantifiedStack</a>","name":"emptyQuantifiedStack","module":"Grisette.Internal.Backend.QuantifiedStack","link":"Grisette-Internal-Backend-QuantifiedStack.html#v:emptyQuantifiedStack"},{"display_html":"<a href=\"#v:pevalGeneralLtOrdTerm\">pevalGeneralLtOrdTerm</a> :: (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalOrdTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalOrdTerm</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"pevalGeneralLtOrdTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Instances.PEvalOrdTerm","link":"Grisette-Internal-SymPrim-Prim-Internal-Instances-PEvalOrdTerm.html#v:pevalGeneralLtOrdTerm"},{"display_html":"<a href=\"#v:pevalGeneralLeOrdTerm\">pevalGeneralLeOrdTerm</a> :: (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalOrdTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalOrdTerm</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"pevalGeneralLeOrdTerm","module":"Grisette.Internal.SymPrim.Prim.Internal.Instances.PEvalOrdTerm","link":"Grisette-Internal-SymPrim-Prim-Internal-Instances-PEvalOrdTerm.html#v:pevalGeneralLeOrdTerm"},{"display_html":"<a href=\"#v:genericFPCast\">genericFPCast</a> :: (<a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:HasKind\" title=\"Data.SBV.Internals\">HasKind</a> a, <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:HasKind\" title=\"Data.SBV.Internals\">HasKind</a> r) =&gt; <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:SRoundingMode\" title=\"Data.SBV.Internals\">SRoundingMode</a> -&gt; <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:SBV\" title=\"Data.SBV.Internals\">SBV</a> a -&gt; <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:SBV\" title=\"Data.SBV.Internals\">SBV</a> r","name":"genericFPCast","module":"Grisette.Internal.SymPrim.Prim.Internal.Instances.PEvalIEEEFPConvertibleTerm","link":"Grisette-Internal-SymPrim-Prim-Internal-Instances-PEvalIEEEFPConvertibleTerm.html#v:genericFPCast"},{"display_html":"<span class=\"keyword\">data</span> a <a href=\"#t:-45--45--62-\">--&gt;</a> b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:GeneralFun\">GeneralFun</a> :: <span class=\"keyword\">forall</span> a b. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedNonFuncPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedNonFuncPrim</a> a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> b) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedConstantSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedConstantSymbol</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b -&gt; a <a href=\"Grisette-Internal-SymPrim-GeneralFun.html#t:-45--45--62-\" title=\"Grisette.Internal.SymPrim.GeneralFun\">--&gt;</a> b</li></ul>","name":"--> GeneralFun","module":"Grisette.Internal.SymPrim.GeneralFun","link":"Grisette-Internal-SymPrim-GeneralFun.html#t:-45--45--62-"},{"display_html":"<a href=\"#v:buildGeneralFun\">buildGeneralFun</a> :: (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedNonFuncPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedNonFuncPrim</a> a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> b) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedConstantSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedConstantSymbol</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b -&gt; a <a href=\"Grisette-Internal-SymPrim-GeneralFun.html#t:-45--45--62-\" title=\"Grisette.Internal.SymPrim.GeneralFun\">--&gt;</a> b","name":"buildGeneralFun","module":"Grisette.Internal.SymPrim.GeneralFun","link":"Grisette-Internal-SymPrim-GeneralFun.html#v:buildGeneralFun"},{"display_html":"<a href=\"#v:generalSubstSomeTerm\">generalSubstSomeTerm</a> :: (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:AnyKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">AnyKind</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a) -&gt; <a href=\"https://hackage.haskell.org/package/unordered-containers-0.2.20/docs/Data-HashSet.html#t:HashSet\" title=\"Data.HashSet\">HashSet</a> <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SomeTypedConstantSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SomeTypedConstantSymbol</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> v -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> v","name":"generalSubstSomeTerm","module":"Grisette.Internal.SymPrim.GeneralFun","link":"Grisette-Internal-SymPrim-GeneralFun.html#v:generalSubstSomeTerm"},{"display_html":"<a href=\"#v:substTerm\">substTerm</a> :: <span class=\"keyword\">forall</span> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a b. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> b, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"https://hackage.haskell.org/package/unordered-containers-0.2.20/docs/Data-HashSet.html#t:HashSet\" title=\"Data.HashSet\">HashSet</a> <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SomeTypedConstantSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SomeTypedConstantSymbol</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b","name":"substTerm","module":"Grisette.Internal.SymPrim.GeneralFun","link":"Grisette-Internal-SymPrim-GeneralFun.html#v:substTerm"},{"display_html":"<a href=\"#v:freshArgSymbol\">freshArgSymbol</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedNonFuncPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedNonFuncPrim</a> a =&gt; [<a href=\"Grisette-Internal-SymPrim-Prim-SomeTerm.html#t:SomeTerm\" title=\"Grisette.Internal.SymPrim.Prim.SomeTerm\">SomeTerm</a>] -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedConstantSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedConstantSymbol</a> a","name":"freshArgSymbol","module":"Grisette.Internal.SymPrim.GeneralFun","link":"Grisette-Internal-SymPrim-GeneralFun.html#v:freshArgSymbol"},{"display_html":"<a href=\"#v:extractTerm\">extractTerm</a> :: <span class=\"keyword\">forall</span> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKindConstraint\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKindConstraint</a> knd a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/unordered-containers-0.2.20/docs/Data-HashSet.html#t:HashSet\" title=\"Data.HashSet\">HashSet</a> <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SomeTypedConstantSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SomeTypedConstantSymbol</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/unordered-containers-0.2.20/docs/Data-HashSet.html#t:HashSet\" title=\"Data.HashSet\">HashSet</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SomeTypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SomeTypedSymbol</a> knd))","name":"extractTerm","module":"Grisette.Internal.SymPrim.Prim.TermUtils","link":"Grisette-Internal-SymPrim-Prim-TermUtils.html#v:extractTerm"},{"display_html":"<a href=\"#v:castTerm\">castTerm</a> :: <span class=\"keyword\">forall</span> a b. <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> b =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b)","name":"castTerm","module":"Grisette.Internal.SymPrim.Prim.TermUtils","link":"Grisette-Internal-SymPrim-Prim-TermUtils.html#v:castTerm"},{"display_html":"<a href=\"#v:someTermsSize\">someTermsSize</a> :: [<a href=\"Grisette-Internal-SymPrim-Prim-SomeTerm.html#t:SomeTerm\" title=\"Grisette.Internal.SymPrim.Prim.SomeTerm\">SomeTerm</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"someTermsSize","module":"Grisette.Internal.SymPrim.Prim.TermUtils","link":"Grisette-Internal-SymPrim-Prim-TermUtils.html#v:someTermsSize"},{"display_html":"<a href=\"#v:someTermSize\">someTermSize</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-SomeTerm.html#t:SomeTerm\" title=\"Grisette.Internal.SymPrim.Prim.SomeTerm\">SomeTerm</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"someTermSize","module":"Grisette.Internal.SymPrim.Prim.TermUtils","link":"Grisette-Internal-SymPrim-Prim-TermUtils.html#v:someTermSize"},{"display_html":"<a href=\"#v:termSize\">termSize</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"termSize","module":"Grisette.Internal.SymPrim.Prim.TermUtils","link":"Grisette-Internal-SymPrim-Prim-TermUtils.html#v:termSize"},{"display_html":"<a href=\"#v:termsSize\">termsSize</a> :: [<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"termsSize","module":"Grisette.Internal.SymPrim.Prim.TermUtils","link":"Grisette-Internal-SymPrim-Prim-TermUtils.html#v:termsSize"},{"display_html":"<a href=\"#v:doPevalBitCast\">doPevalBitCast</a> :: (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitCastTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitCastTerm</a> a b, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> b) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> b)","name":"doPevalBitCast","module":"Grisette.Internal.SymPrim.Prim.Internal.Instances.PEvalBitCastTerm","link":"Grisette-Internal-SymPrim-Prim-Internal-Instances-PEvalBitCastTerm.html#v:doPevalBitCast"},{"display_html":"module <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html\">Grisette.Internal.SymPrim.Prim.Internal.Term</a>","name":"","module":"Grisette.Internal.SymPrim.Prim.Term","link":""},{"display_html":"module <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Instances-PEvalShiftTerm.html\">Grisette.Internal.SymPrim.Prim.Internal.Instances.PEvalShiftTerm</a>","name":"","module":"Grisette.Internal.SymPrim.Prim.Term","link":""},{"display_html":"module <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Instances-PEvalRotateTerm.html\">Grisette.Internal.SymPrim.Prim.Internal.Instances.PEvalRotateTerm</a>","name":"","module":"Grisette.Internal.SymPrim.Prim.Term","link":""},{"display_html":"module <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Instances-PEvalOrdTerm.html\">Grisette.Internal.SymPrim.Prim.Internal.Instances.PEvalOrdTerm</a>","name":"","module":"Grisette.Internal.SymPrim.Prim.Term","link":""},{"display_html":"module <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Instances-PEvalDivModIntegralTerm.html\">Grisette.Internal.SymPrim.Prim.Internal.Instances.PEvalDivModIntegralTerm</a>","name":"","module":"Grisette.Internal.SymPrim.Prim.Term","link":""},{"display_html":"module <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Instances-PEvalIEEEFPConvertibleTerm.html\">Grisette.Internal.SymPrim.Prim.Internal.Instances.PEvalIEEEFPConvertibleTerm</a>","name":"","module":"Grisette.Internal.SymPrim.Prim.Term","link":""},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:SymbolSet\">SymbolSet</a> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) = <a href=\"#v:SymbolSet\">SymbolSet</a> {<ul class=\"subs\"><li><a href=\"#v:unSymbolSet\">unSymbolSet</a> :: <a href=\"https://hackage.haskell.org/package/unordered-containers-0.2.20/docs/Data-HashSet.html#t:HashSet\" title=\"Data.HashSet\">HashSet</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SomeTypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SomeTypedSymbol</a> knd)</li></ul>}","name":"SymbolSet SymbolSet unSymbolSet","module":"Grisette.Internal.SymPrim.Prim.Model","link":"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ConstantSymbolSet\">ConstantSymbolSet</a> = <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:ConstantKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConstantKind</a>","name":"ConstantSymbolSet","module":"Grisette.Internal.SymPrim.Prim.Model","link":"Grisette-Internal-SymPrim-Prim-Model.html#t:ConstantSymbolSet"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:AnySymbolSet\">AnySymbolSet</a> = <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> '<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#v:AnyKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">AnyKind</a>","name":"AnySymbolSet","module":"Grisette.Internal.SymPrim.Prim.Model","link":"Grisette-Internal-SymPrim-Prim-Model.html#t:AnySymbolSet"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Model\">Model</a> = <a href=\"#v:Model\">Model</a> {<ul class=\"subs\"><li><a href=\"#v:unModel\">unModel</a> :: <a href=\"https://hackage.haskell.org/package/unordered-containers-0.2.20/docs/Data-HashMap-Strict.html#t:HashMap\" title=\"Data.HashMap.Strict\">HashMap</a> <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SomeTypedAnySymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SomeTypedAnySymbol</a> <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:ModelValue\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ModelValue</a></li></ul>}","name":"Model Model unModel","module":"Grisette.Internal.SymPrim.Prim.Model","link":"Grisette-Internal-SymPrim-Prim-Model.html#t:Model"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ModelValuePair\">ModelValuePair</a> t = (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedAnySymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedAnySymbol</a> t) <a href=\"#v:::-61-\">::=</a> t","name":"ModelValuePair ::=","module":"Grisette.Internal.SymPrim.Prim.Model","link":"Grisette-Internal-SymPrim-Prim-Model.html#t:ModelValuePair"},{"display_html":"<a href=\"#v:equation\">equation</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedAnySymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedAnySymbol</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>)","name":"equation","module":"Grisette.Internal.SymPrim.Prim.Model","link":"Grisette-Internal-SymPrim-Prim-Model.html#v:equation"},{"display_html":"<a href=\"#v:evalTerm\">evalTerm</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> a =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; <a href=\"https://hackage.haskell.org/package/unordered-containers-0.2.20/docs/Data-HashSet.html#t:HashSet\" title=\"Data.HashSet\">HashSet</a> <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SomeTypedConstantSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SomeTypedConstantSymbol</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a","name":"evalTerm","module":"Grisette.Internal.SymPrim.Prim.Model","link":"Grisette-Internal-SymPrim-Prim-Model.html#v:evalTerm"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ModelSymPair\">ModelSymPair</a> ct st <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v::-61-\">(:=)</a> :: <span class=\"keyword\">forall</span> ct st. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> ct st =&gt; st -&gt; ct -&gt; <a href=\"Grisette-Internal-SymPrim-ModelRep.html#t:ModelSymPair\" title=\"Grisette.Internal.SymPrim.ModelRep\">ModelSymPair</a> ct st</li></ul>","name":"ModelSymPair :=","module":"Grisette.Internal.SymPrim.ModelRep","link":"Grisette-Internal-SymPrim-ModelRep.html#t:ModelSymPair"},{"display_html":"<span class=\"keyword\">data</span> sa <a href=\"#t:-61--126--62-\">=~&gt;</a> sb <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:SymTabularFun\">SymTabularFun</a> :: <span class=\"keyword\">forall</span> ca sa cb sb. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> ca sa, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> cb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (ca <a href=\"Grisette-Internal-SymPrim-TabularFun.html#t:-61--45--62-\" title=\"Grisette.Internal.SymPrim.TabularFun\">=-&gt;</a> cb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedNonFuncPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedNonFuncPrim</a> ca) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (ca <a href=\"Grisette-Internal-SymPrim-TabularFun.html#t:-61--45--62-\" title=\"Grisette.Internal.SymPrim.TabularFun\">=-&gt;</a> cb) -&gt; sa <a href=\"Grisette-Internal-SymPrim-SymTabularFun.html#t:-61--126--62-\" title=\"Grisette.Internal.SymPrim.SymTabularFun\">=~&gt;</a> sb</li></ul>","name":"=~> SymTabularFun","module":"Grisette.Internal.SymPrim.SymTabularFun","link":"Grisette-Internal-SymPrim-SymTabularFun.html#t:-61--126--62-"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:SymInteger\">SymInteger</a> = <a href=\"#v:SymInteger\">SymInteger</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integer\" title=\"Prelude\">Integer</a>)","name":"SymInteger SymInteger","module":"Grisette.Internal.SymPrim.SymInteger","link":"Grisette-Internal-SymPrim-SymInteger.html#t:SymInteger"},{"display_html":"<span class=\"keyword\">data</span> sa <a href=\"#t:-45--126--62-\">-~&gt;</a> sb <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:SymGeneralFun\">SymGeneralFun</a> :: <span class=\"keyword\">forall</span> ca sa cb sb. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> ca sa, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> cb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> (ca <a href=\"Grisette-Internal-SymPrim-GeneralFun.html#t:-45--45--62-\" title=\"Grisette.Internal.SymPrim.GeneralFun\">--&gt;</a> cb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedNonFuncPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedNonFuncPrim</a> ca) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (ca <a href=\"Grisette-Internal-SymPrim-GeneralFun.html#t:-45--45--62-\" title=\"Grisette.Internal.SymPrim.GeneralFun\">--&gt;</a> cb) -&gt; sa <a href=\"Grisette-Internal-SymPrim-SymGeneralFun.html#t:-45--126--62-\" title=\"Grisette.Internal.SymPrim.SymGeneralFun\">-~&gt;</a> sb</li></ul>","name":"-~> SymGeneralFun","module":"Grisette.Internal.SymPrim.SymGeneralFun","link":"Grisette-Internal-SymPrim-SymGeneralFun.html#t:-45--126--62-"},{"display_html":"<a href=\"#v:-45--45--62-\">(--&gt;)</a> :: (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedNonFuncPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedNonFuncPrim</a> ca, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrim</a> cb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> cb sb) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedConstantSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedConstantSymbol</a> ca -&gt; sb -&gt; ca <a href=\"Grisette-Internal-SymPrim-GeneralFun.html#t:-45--45--62-\" title=\"Grisette.Internal.SymPrim.GeneralFun\">--&gt;</a> cb","name":"-->","module":"Grisette.Internal.SymPrim.SymGeneralFun","link":"Grisette-Internal-SymPrim-SymGeneralFun.html#v:-45--45--62-"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:SymBool\">SymBool</a> = <a href=\"#v:SymBool\">SymBool</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>)","name":"SymBool SymBool","module":"Grisette.Internal.SymPrim.SymBool","link":"Grisette-Internal-SymPrim-SymBool.html#t:SymBool"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:SymWordN\">SymWordN</a> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) = <a href=\"#v:SymWordN\">SymWordN</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (<a href=\"Grisette-Internal-SymPrim-BV.html#t:WordN\" title=\"Grisette.Internal.SymPrim.BV\">WordN</a> n))","name":"SymWordN SymWordN","module":"Grisette.Internal.SymPrim.SymBV","link":"Grisette-Internal-SymPrim-SymBV.html#t:SymWordN"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymWordN8\">SymWordN8</a> = <a href=\"Grisette-Internal-SymPrim-SymBV.html#t:SymWordN\" title=\"Grisette.Internal.SymPrim.SymBV\">SymWordN</a> 8","name":"SymWordN8","module":"Grisette.Internal.SymPrim.SymBV","link":"Grisette-Internal-SymPrim-SymBV.html#t:SymWordN8"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymWordN16\">SymWordN16</a> = <a href=\"Grisette-Internal-SymPrim-SymBV.html#t:SymWordN\" title=\"Grisette.Internal.SymPrim.SymBV\">SymWordN</a> 16","name":"SymWordN16","module":"Grisette.Internal.SymPrim.SymBV","link":"Grisette-Internal-SymPrim-SymBV.html#t:SymWordN16"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymWordN32\">SymWordN32</a> = <a href=\"Grisette-Internal-SymPrim-SymBV.html#t:SymWordN\" title=\"Grisette.Internal.SymPrim.SymBV\">SymWordN</a> 32","name":"SymWordN32","module":"Grisette.Internal.SymPrim.SymBV","link":"Grisette-Internal-SymPrim-SymBV.html#t:SymWordN32"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymWordN64\">SymWordN64</a> = <a href=\"Grisette-Internal-SymPrim-SymBV.html#t:SymWordN\" title=\"Grisette.Internal.SymPrim.SymBV\">SymWordN</a> 64","name":"SymWordN64","module":"Grisette.Internal.SymPrim.SymBV","link":"Grisette-Internal-SymPrim-SymBV.html#t:SymWordN64"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:SymIntN\">SymIntN</a> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) = <a href=\"#v:SymIntN\">SymIntN</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (<a href=\"Grisette-Internal-SymPrim-BV.html#t:IntN\" title=\"Grisette.Internal.SymPrim.BV\">IntN</a> n))","name":"SymIntN SymIntN","module":"Grisette.Internal.SymPrim.SymBV","link":"Grisette-Internal-SymPrim-SymBV.html#t:SymIntN"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymIntN8\">SymIntN8</a> = <a href=\"Grisette-Internal-SymPrim-SymBV.html#t:SymIntN\" title=\"Grisette.Internal.SymPrim.SymBV\">SymIntN</a> 8","name":"SymIntN8","module":"Grisette.Internal.SymPrim.SymBV","link":"Grisette-Internal-SymPrim-SymBV.html#t:SymIntN8"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymIntN16\">SymIntN16</a> = <a href=\"Grisette-Internal-SymPrim-SymBV.html#t:SymIntN\" title=\"Grisette.Internal.SymPrim.SymBV\">SymIntN</a> 16","name":"SymIntN16","module":"Grisette.Internal.SymPrim.SymBV","link":"Grisette-Internal-SymPrim-SymBV.html#t:SymIntN16"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymIntN32\">SymIntN32</a> = <a href=\"Grisette-Internal-SymPrim-SymBV.html#t:SymIntN\" title=\"Grisette.Internal.SymPrim.SymBV\">SymIntN</a> 32","name":"SymIntN32","module":"Grisette.Internal.SymPrim.SymBV","link":"Grisette-Internal-SymPrim-SymBV.html#t:SymIntN32"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymIntN64\">SymIntN64</a> = <a href=\"Grisette-Internal-SymPrim-SymBV.html#t:SymIntN\" title=\"Grisette.Internal.SymPrim.SymBV\">SymIntN</a> 64","name":"SymIntN64","module":"Grisette.Internal.SymPrim.SymBV","link":"Grisette-Internal-SymPrim-SymBV.html#t:SymIntN64"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:SymAlgReal\">SymAlgReal</a> = <a href=\"#v:SymAlgReal\">SymAlgReal</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-AlgReal.html#t:AlgReal\" title=\"Grisette.Internal.SymPrim.AlgReal\">AlgReal</a>)","name":"SymAlgReal SymAlgReal","module":"Grisette.Internal.SymPrim.SymAlgReal","link":"Grisette-Internal-SymPrim-SymAlgReal.html#t:SymAlgReal"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:LogicalOp\">LogicalOp</a> b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:true\">true</a> :: b</li><li><a href=\"#v:false\">false</a> :: b</li><li><a href=\"#v:.-124--124-\">(.||)</a> :: b -&gt; b -&gt; b</li><li><a href=\"#v:.-38--38-\">(.&amp;&amp;)</a> :: b -&gt; b -&gt; b</li><li><a href=\"#v:symNot\">symNot</a> :: b -&gt; b</li><li><a href=\"#v:symXor\">symXor</a> :: b -&gt; b -&gt; b</li><li><a href=\"#v:symImplies\">symImplies</a> :: b -&gt; b -&gt; b</li></ul>","name":"LogicalOp .|| .&& symNot false true symImplies symXor $dm.|| $dm.&& $dmfalse $dmtrue $dmsymImplies $dmsymXor","module":"Grisette.Internal.Core.Data.Class.LogicalOp","link":"Grisette-Internal-Core-Data-Class-LogicalOp.html#t:LogicalOp"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SymBiMap\">SymBiMap</a> = <a href=\"#v:SymBiMap\">SymBiMap</a> {<ul class=\"subs\"><li><a href=\"#v:biMapToSBV\">biMapToSBV</a> :: <a href=\"https://hackage.haskell.org/package/unordered-containers-0.2.20/docs/Data-HashMap-Strict.html#t:HashMap\" title=\"Data.HashMap.Strict\">HashMap</a> <a href=\"Grisette-Internal-SymPrim-Prim-SomeTerm.html#t:SomeTerm\" title=\"Grisette.Internal.SymPrim.Prim.SomeTerm\">SomeTerm</a> (<a href=\"Grisette-Internal-Backend-QuantifiedStack.html#t:QuantifiedStack\" title=\"Grisette.Internal.Backend.QuantifiedStack\">QuantifiedStack</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Dynamic\" title=\"Data.Dynamic\">Dynamic</a>)</li><li><a href=\"#v:biMapSize\">biMapSize</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li><a href=\"#v:biMapFromSBV\">biMapFromSBV</a> :: <a href=\"https://hackage.haskell.org/package/unordered-containers-0.2.20/docs/Data-HashMap-Strict.html#t:HashMap\" title=\"Data.HashMap.Strict\">HashMap</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SomeTypedAnySymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SomeTypedAnySymbol</a></li><li><a href=\"#v:quantifiedSymbolNum\">quantifiedSymbolNum</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li></ul>}","name":"SymBiMap SymBiMap biMapToSBV biMapSize biMapFromSBV quantifiedSymbolNum","module":"Grisette.Internal.Backend.SymBiMap","link":"Grisette-Internal-Backend-SymBiMap.html#t:SymBiMap"},{"display_html":"<a href=\"#v:emptySymBiMap\">emptySymBiMap</a> :: <a href=\"Grisette-Internal-Backend-SymBiMap.html#t:SymBiMap\" title=\"Grisette.Internal.Backend.SymBiMap\">SymBiMap</a>","name":"emptySymBiMap","module":"Grisette.Internal.Backend.SymBiMap","link":"Grisette-Internal-Backend-SymBiMap.html#v:emptySymBiMap"},{"display_html":"<a href=\"#v:sizeBiMap\">sizeBiMap</a> :: <a href=\"Grisette-Internal-Backend-SymBiMap.html#t:SymBiMap\" title=\"Grisette.Internal.Backend.SymBiMap\">SymBiMap</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"sizeBiMap","module":"Grisette.Internal.Backend.SymBiMap","link":"Grisette-Internal-Backend-SymBiMap.html#v:sizeBiMap"},{"display_html":"<a href=\"#v:addBiMap\">addBiMap</a> :: <span class=\"keyword\">forall</span> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-SomeTerm.html#t:SomeTerm\" title=\"Grisette.Internal.SymPrim.Prim.SomeTerm\">SomeTerm</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Dynamic\" title=\"Data.Dynamic\">Dynamic</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SomeTypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SomeTypedSymbol</a> knd -&gt; <a href=\"Grisette-Internal-Backend-SymBiMap.html#t:SymBiMap\" title=\"Grisette.Internal.Backend.SymBiMap\">SymBiMap</a> -&gt; <a href=\"Grisette-Internal-Backend-SymBiMap.html#t:SymBiMap\" title=\"Grisette.Internal.Backend.SymBiMap\">SymBiMap</a>","name":"addBiMap","module":"Grisette.Internal.Backend.SymBiMap","link":"Grisette-Internal-Backend-SymBiMap.html#v:addBiMap"},{"display_html":"<a href=\"#v:addBiMapIntermediate\">addBiMapIntermediate</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-SomeTerm.html#t:SomeTerm\" title=\"Grisette.Internal.SymPrim.Prim.SomeTerm\">SomeTerm</a> -&gt; (<a href=\"Grisette-Internal-Backend-QuantifiedStack.html#t:QuantifiedStack\" title=\"Grisette.Internal.Backend.QuantifiedStack\">QuantifiedStack</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Dynamic\" title=\"Data.Dynamic\">Dynamic</a>) -&gt; <a href=\"Grisette-Internal-Backend-SymBiMap.html#t:SymBiMap\" title=\"Grisette.Internal.Backend.SymBiMap\">SymBiMap</a> -&gt; <a href=\"Grisette-Internal-Backend-SymBiMap.html#t:SymBiMap\" title=\"Grisette.Internal.Backend.SymBiMap\">SymBiMap</a>","name":"addBiMapIntermediate","module":"Grisette.Internal.Backend.SymBiMap","link":"Grisette-Internal-Backend-SymBiMap.html#v:addBiMapIntermediate"},{"display_html":"<a href=\"#v:findStringToSymbol\">findStringToSymbol</a> :: <span class=\"keyword\">forall</span> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"Grisette-Internal-Backend-SymBiMap.html#t:SymBiMap\" title=\"Grisette.Internal.Backend.SymBiMap\">SymBiMap</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SomeTypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SomeTypedSymbol</a> knd)","name":"findStringToSymbol","module":"Grisette.Internal.Backend.SymBiMap","link":"Grisette-Internal-Backend-SymBiMap.html#v:findStringToSymbol"},{"display_html":"<a href=\"#v:lookupTerm\">lookupTerm</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-SomeTerm.html#t:SomeTerm\" title=\"Grisette.Internal.SymPrim.Prim.SomeTerm\">SomeTerm</a> -&gt; <a href=\"Grisette-Internal-Backend-SymBiMap.html#t:SymBiMap\" title=\"Grisette.Internal.Backend.SymBiMap\">SymBiMap</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-Backend-QuantifiedStack.html#t:QuantifiedStack\" title=\"Grisette.Internal.Backend.QuantifiedStack\">QuantifiedStack</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Dynamic\" title=\"Data.Dynamic\">Dynamic</a>)","name":"lookupTerm","module":"Grisette.Internal.Backend.SymBiMap","link":"Grisette-Internal-Backend-SymBiMap.html#v:lookupTerm"},{"display_html":"<a href=\"#v:attachNextQuantifiedSymbolInfo\">attachNextQuantifiedSymbolInfo</a> :: <a href=\"Grisette-Internal-Backend-SymBiMap.html#t:SymBiMap\" title=\"Grisette.Internal.Backend.SymBiMap\">SymBiMap</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedConstantSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedConstantSymbol</a> a -&gt; (<a href=\"Grisette-Internal-Backend-SymBiMap.html#t:SymBiMap\" title=\"Grisette.Internal.Backend.SymBiMap\">SymBiMap</a>, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedConstantSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedConstantSymbol</a> a)","name":"attachNextQuantifiedSymbolInfo","module":"Grisette.Internal.Backend.SymBiMap","link":"Grisette-Internal-Backend-SymBiMap.html#v:attachNextQuantifiedSymbolInfo"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:SymIEEEFPTraits\">SymIEEEFPTraits</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:symFpIsNaN\">symFpIsNaN</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsPositive\">symFpIsPositive</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsNegative\">symFpIsNegative</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsPositiveInfinite\">symFpIsPositiveInfinite</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsNegativeInfinite\">symFpIsNegativeInfinite</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsInfinite\">symFpIsInfinite</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsPositiveZero\">symFpIsPositiveZero</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsNegativeZero\">symFpIsNegativeZero</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsZero\">symFpIsZero</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsNormal\">symFpIsNormal</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsSubnormal\">symFpIsSubnormal</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsPoint\">symFpIsPoint</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li></ul>","name":"SymIEEEFPTraits symFpIsNaN symFpIsNegativeInfinite symFpIsPositiveInfinite symFpIsInfinite symFpIsNegative symFpIsNegativeZero symFpIsNormal symFpIsPoint symFpIsPositive symFpIsPositiveZero symFpIsSubnormal symFpIsZero","module":"Grisette.Internal.Core.Data.Class.SymIEEEFP","link":"Grisette-Internal-Core-Data-Class-SymIEEEFP.html#t:SymIEEEFPTraits"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:SymFP\">SymFP</a> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) = <a href=\"#v:SymFP\">SymFP</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> (<a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb))","name":"SymFP SymFP","module":"Grisette.Internal.SymPrim.SymFP","link":"Grisette-Internal-SymPrim-SymFP.html#t:SymFP"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymFP16\">SymFP16</a> = <a href=\"Grisette-Internal-SymPrim-SymFP.html#t:SymFP\" title=\"Grisette.Internal.SymPrim.SymFP\">SymFP</a> 5 11","name":"SymFP16","module":"Grisette.Internal.SymPrim.SymFP","link":"Grisette-Internal-SymPrim-SymFP.html#t:SymFP16"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymFP32\">SymFP32</a> = <a href=\"Grisette-Internal-SymPrim-SymFP.html#t:SymFP\" title=\"Grisette.Internal.SymPrim.SymFP\">SymFP</a> 8 24","name":"SymFP32","module":"Grisette.Internal.SymPrim.SymFP","link":"Grisette-Internal-SymPrim-SymFP.html#t:SymFP32"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymFP64\">SymFP64</a> = <a href=\"Grisette-Internal-SymPrim-SymFP.html#t:SymFP\" title=\"Grisette.Internal.SymPrim.SymFP\">SymFP</a> 11 53","name":"SymFP64","module":"Grisette.Internal.SymPrim.SymFP","link":"Grisette-Internal-SymPrim-SymFP.html#t:SymFP64"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:SymFPRoundingMode\">SymFPRoundingMode</a> = <a href=\"#v:SymFPRoundingMode\">SymFPRoundingMode</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FPRoundingMode\" title=\"Grisette.Internal.SymPrim.FP\">FPRoundingMode</a>)","name":"SymFPRoundingMode SymFPRoundingMode","module":"Grisette.Internal.SymPrim.SymFP","link":"Grisette-Internal-SymPrim-SymFP.html#t:SymFPRoundingMode"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSolvable\">UnifiedSolvable</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a con | a -&gt; mode con, con mode -&gt; a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSolvable\">withBaseSolvable</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:IsConMode\" title=\"Grisette.Internal.Unified.EvalModeTag\">IsConMode</a> mode) (a <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> con) (<a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> con a) =&gt; r) -&gt; r</li></ul>","name":"UnifiedSolvable withBaseSolvable","module":"Grisette.Internal.Unified.Class.UnifiedSolvable","link":"Grisette-Internal-Unified-Class-UnifiedSolvable.html#t:UnifiedSolvable"},{"display_html":"<a href=\"#v:con\">con</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a con. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSolvable.html#t:UnifiedSolvable\" title=\"Grisette.Internal.Unified.Class.UnifiedSolvable\">UnifiedSolvable</a> mode a con) =&gt; con -&gt; a","name":"con","module":"Grisette.Internal.Unified.Class.UnifiedSolvable","link":"Grisette-Internal-Unified-Class-UnifiedSolvable.html#v:con"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:Con\">Con</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a con. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSolvable.html#t:UnifiedSolvable\" title=\"Grisette.Internal.Unified.Class.UnifiedSolvable\">UnifiedSolvable</a> mode a con) =&gt; con -&gt; a","name":"Con","module":"Grisette.Internal.Unified.Class.UnifiedSolvable","link":"Grisette-Internal-Unified-Class-UnifiedSolvable.html#v:Con"},{"display_html":"<a href=\"#v:conView\">conView</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a con. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSolvable.html#t:UnifiedSolvable\" title=\"Grisette.Internal.Unified.Class.UnifiedSolvable\">UnifiedSolvable</a> mode a con) =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> con","name":"conView","module":"Grisette.Internal.Unified.Class.UnifiedSolvable","link":"Grisette-Internal-Unified-Class-UnifiedSolvable.html#v:conView"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedConRep\">UnifiedConRep</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:ConType\">ConType</a> a</li></ul>","name":"UnifiedConRep ConType","module":"Grisette.Internal.Unified.Class.UnifiedRep","link":"Grisette-Internal-Unified-Class-UnifiedRep.html#t:UnifiedConRep"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSymRep\">UnifiedSymRep</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:SymType\">SymType</a> a</li></ul>","name":"UnifiedSymRep SymType","module":"Grisette.Internal.Unified.Class.UnifiedRep","link":"Grisette-Internal-Unified-Class-UnifiedRep.html#t:UnifiedSymRep"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:SymFromIntegral\">SymFromIntegral</a> from to <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:symFromIntegral\">symFromIntegral</a> :: from -&gt; to</li></ul>","name":"SymFromIntegral symFromIntegral","module":"Grisette.Internal.Core.Data.Class.SymFromIntegral","link":"Grisette-Internal-Core-Data-Class-SymFromIntegral.html#t:SymFromIntegral"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedFromIntegral\">UnifiedFromIntegral</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseFromIntegral\">withBaseFromIntegral</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:IsConMode\" title=\"Grisette.Internal.Unified.EvalModeTag\">IsConMode</a> mode) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> b) (<a href=\"Grisette-Internal-Core-Data-Class-SymFromIntegral.html#t:SymFromIntegral\" title=\"Grisette.Internal.Core.Data.Class.SymFromIntegral\">SymFromIntegral</a> a b) =&gt; r) -&gt; r</li></ul>","name":"UnifiedFromIntegral withBaseFromIntegral","module":"Grisette.Internal.Unified.Class.UnifiedFromIntegral","link":"Grisette-Internal-Unified-Class-UnifiedFromIntegral.html#t:UnifiedFromIntegral"},{"display_html":"<a href=\"#v:symFromIntegral\">symFromIntegral</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a b. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedFromIntegral.html#t:UnifiedFromIntegral\" title=\"Grisette.Internal.Unified.Class.UnifiedFromIntegral\">UnifiedFromIntegral</a> mode a b) =&gt; a -&gt; b","name":"symFromIntegral","module":"Grisette.Internal.Unified.Class.UnifiedFromIntegral","link":"Grisette-Internal-Unified-Class-UnifiedFromIntegral.html#v:symFromIntegral"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ITEOp\">ITEOp</a> v <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:symIte\">symIte</a> :: <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; v -&gt; v -&gt; v</li></ul>","name":"ITEOp symIte","module":"Grisette.Internal.Core.Data.Class.ITEOp","link":"Grisette-Internal-Core-Data-Class-ITEOp.html#t:ITEOp"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CheckArgsResult\">CheckArgsResult</a> = <a href=\"#v:CheckArgsResult\">CheckArgsResult</a> {<ul class=\"subs\"><li><a href=\"#v:constructors\">constructors</a> :: [<a href=\"https://hackage.haskell.org/package/th-abstraction-0.7.1.0/docs/Language-Haskell-TH-Datatype.html#t:ConstructorInfo\" title=\"Language.Haskell.TH.Datatype\">ConstructorInfo</a>]</li><li><a href=\"#v:keptVars\">keptVars</a> :: [(<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>)]</li><li><a href=\"#v:argVars\">argVars</a> :: [(<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>)]</li></ul>}","name":"CheckArgsResult CheckArgsResult argVars constructors keptVars","module":"Grisette.Internal.TH.Derivation.Common","link":"Grisette-Internal-TH-Derivation-Common.html#t:CheckArgsResult"},{"display_html":"<a href=\"#v:checkArgs\">checkArgs</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:CheckArgsResult\" title=\"Grisette.Internal.TH.Derivation.Common\">CheckArgsResult</a>","name":"checkArgs","module":"Grisette.Internal.TH.Derivation.Common","link":"Grisette-Internal-TH-Derivation-Common.html#v:checkArgs"},{"display_html":"<a href=\"#v:ctxForVar\">ctxForVar</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Pred\" title=\"Language.Haskell.TH.Syntax\">Pred</a>)","name":"ctxForVar","module":"Grisette.Internal.TH.Derivation.Common","link":"Grisette-Internal-TH-Derivation-Common.html#v:ctxForVar"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:EvalModeConfig\">EvalModeConfig</a><ul class=\"subs\"><li>= <a href=\"#v:EvalModeConstraints\">EvalModeConstraints</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]</li><li>| <a href=\"#v:EvalModeSpecified\">EvalModeSpecified</a> <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a></li></ul>","name":"EvalModeConfig EvalModeConstraints EvalModeSpecified","module":"Grisette.Internal.TH.Derivation.Common","link":"Grisette-Internal-TH-Derivation-Common.html#t:EvalModeConfig"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DeriveConfig\">DeriveConfig</a> = <a href=\"#v:DeriveConfig\">DeriveConfig</a> {<ul class=\"subs\"><li><a href=\"#v:evalModeConfig\">evalModeConfig</a> :: [(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:EvalModeConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">EvalModeConfig</a>)]</li><li><a href=\"#v:bitSizePositions\">bitSizePositions</a> :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>]</li><li><a href=\"#v:fpBitSizePositions\">fpBitSizePositions</a> :: [(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>)]</li><li><a href=\"#v:unconstrainedPositions\">unconstrainedPositions</a> :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>]</li><li><a href=\"#v:needExtraMergeableUnderEvalMode\">needExtraMergeableUnderEvalMode</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:needExtraMergeableWithConcretizedEvalMode\">needExtraMergeableWithConcretizedEvalMode</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:useNoStrategy\">useNoStrategy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:useSerialForCerealAndBinary\">useSerialForCerealAndBinary</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li></ul>}","name":"DeriveConfig DeriveConfig unconstrainedPositions bitSizePositions evalModeConfig fpBitSizePositions needExtraMergeableUnderEvalMode needExtraMergeableWithConcretizedEvalMode useSerialForCerealAndBinary useNoStrategy","module":"Grisette.Internal.TH.Derivation.Common","link":"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig"},{"display_html":"<a href=\"#v:extraEvalModeConstraint\">extraEvalModeConstraint</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; [(<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>)] -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:EvalModeConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">EvalModeConfig</a>) -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Pred\" title=\"Language.Haskell.TH.Syntax\">Pred</a>]","name":"extraEvalModeConstraint","module":"Grisette.Internal.TH.Derivation.Common","link":"Grisette-Internal-TH-Derivation-Common.html#v:extraEvalModeConstraint"},{"display_html":"<a href=\"#v:extraBitSizeConstraint\">extraBitSizeConstraint</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; [(<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>)] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Pred\" title=\"Language.Haskell.TH.Syntax\">Pred</a>]","name":"extraBitSizeConstraint","module":"Grisette.Internal.TH.Derivation.Common","link":"Grisette-Internal-TH-Derivation-Common.html#v:extraBitSizeConstraint"},{"display_html":"<a href=\"#v:extraFpBitSizeConstraint\">extraFpBitSizeConstraint</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; [(<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>)] -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>) -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Pred\" title=\"Language.Haskell.TH.Syntax\">Pred</a>]","name":"extraFpBitSizeConstraint","module":"Grisette.Internal.TH.Derivation.Common","link":"Grisette-Internal-TH-Derivation-Common.html#v:extraFpBitSizeConstraint"},{"display_html":"<a href=\"#v:extraExtraMergeableConstraint\">extraExtraMergeableConstraint</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; [<a href=\"https://hackage.haskell.org/package/th-abstraction-0.7.1.0/docs/Language-Haskell-TH-Datatype.html#t:ConstructorInfo\" title=\"Language.Haskell.TH.Datatype\">ConstructorInfo</a>] -&gt; [(<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>)] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Pred\" title=\"Language.Haskell.TH.Syntax\">Pred</a>]","name":"extraExtraMergeableConstraint","module":"Grisette.Internal.TH.Derivation.Common","link":"Grisette-Internal-TH-Derivation-Common.html#v:extraExtraMergeableConstraint"},{"display_html":"<a href=\"#v:extraConstraint\">extraConstraint</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; [(<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>)] -&gt; [(<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>)] -&gt; [<a href=\"https://hackage.haskell.org/package/th-abstraction-0.7.1.0/docs/Language-Haskell-TH-Datatype.html#t:ConstructorInfo\" title=\"Language.Haskell.TH.Datatype\">ConstructorInfo</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Pred\" title=\"Language.Haskell.TH.Syntax\">Pred</a>]","name":"extraConstraint","module":"Grisette.Internal.TH.Derivation.Common","link":"Grisette-Internal-TH-Derivation-Common.html#v:extraConstraint"},{"display_html":"<a href=\"#v:specializeResult\">specializeResult</a> :: [(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>)] -&gt; <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:CheckArgsResult\" title=\"Grisette.Internal.TH.Derivation.Common\">CheckArgsResult</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:CheckArgsResult\" title=\"Grisette.Internal.TH.Derivation.Common\">CheckArgsResult</a>","name":"specializeResult","module":"Grisette.Internal.TH.Derivation.Common","link":"Grisette-Internal-TH-Derivation-Common.html#v:specializeResult"},{"display_html":"<a href=\"#v:evalModeSpecializeList\">evalModeSpecializeList</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; [(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>)]","name":"evalModeSpecializeList","module":"Grisette.Internal.TH.Derivation.Common","link":"Grisette-Internal-TH-Derivation-Common.html#v:evalModeSpecializeList"},{"display_html":"<a href=\"#v:isVarUsedInFields\">isVarUsedInFields</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:CheckArgsResult\" title=\"Grisette.Internal.TH.Derivation.Common\">CheckArgsResult</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"isVarUsedInFields","module":"Grisette.Internal.TH.Derivation.Common","link":"Grisette-Internal-TH-Derivation-Common.html#v:isVarUsedInFields"},{"display_html":"<a href=\"#v:freshenCheckArgsResult\">freshenCheckArgsResult</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:CheckArgsResult\" title=\"Grisette.Internal.TH.Derivation.Common\">CheckArgsResult</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:CheckArgsResult\" title=\"Grisette.Internal.TH.Derivation.Common\">CheckArgsResult</a>","name":"freshenCheckArgsResult","module":"Grisette.Internal.TH.Derivation.Common","link":"Grisette-Internal-TH-Derivation-Common.html#v:freshenCheckArgsResult"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UnaryOpClassConfig\">UnaryOpClassConfig</a> = <a href=\"#v:UnaryOpClassConfig\">UnaryOpClassConfig</a> {<ul class=\"subs\"><li><a href=\"#v:unaryOpConfigs\">unaryOpConfigs</a> :: [<a href=\"Grisette-Internal-TH-Derivation-UnaryOpCommon.html#t:UnaryOpConfig\" title=\"Grisette.Internal.TH.Derivation.UnaryOpCommon\">UnaryOpConfig</a>]</li><li><a href=\"#v:unaryOpInstanceNames\">unaryOpInstanceNames</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]</li><li><a href=\"#v:unaryOpContextNames\">unaryOpContextNames</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]</li><li><a href=\"#v:unaryOpExtraVars\">unaryOpExtraVars</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [(<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>)]</li><li><a href=\"#v:unaryOpInstanceTypeFromConfig\">unaryOpInstanceTypeFromConfig</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; [(<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>)] -&gt; [(<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>)] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a></li><li><a href=\"#v:unaryOpAllowExistential\">unaryOpAllowExistential</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li></ul>}","name":"UnaryOpClassConfig UnaryOpClassConfig unaryOpAllowExistential unaryOpConfigs unaryOpContextNames unaryOpExtraVars unaryOpInstanceNames unaryOpInstanceTypeFromConfig","module":"Grisette.Internal.TH.Derivation.UnaryOpCommon","link":"Grisette-Internal-TH-Derivation-UnaryOpCommon.html#t:UnaryOpClassConfig"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UnaryOpFieldConfig\">UnaryOpFieldConfig</a> = <a href=\"#v:UnaryOpFieldConfig\">UnaryOpFieldConfig</a> {<ul class=\"subs\"><li><a href=\"#v:extraPatNames\">extraPatNames</a> :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>]</li><li><a href=\"#v:extraLiftedPatNames\">extraLiftedPatNames</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>]</li><li><a href=\"#v:fieldResFun\">fieldResFun</a> :: <a href=\"https://hackage.haskell.org/package/th-abstraction-0.7.1.0/docs/Language-Haskell-TH-Datatype.html#t:ConstructorVariant\" title=\"Language.Haskell.TH.Datatype\">ConstructorVariant</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> (<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>, [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>])</li><li><a href=\"#v:fieldCombineFun\">fieldCombineFun</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/th-abstraction-0.7.1.0/docs/Language-Haskell-TH-Datatype.html#t:ConstructorVariant\" title=\"Language.Haskell.TH.Datatype\">ConstructorVariant</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>] -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> (<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>, [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>])</li><li><a href=\"#v:fieldFunExp\">fieldFunExp</a> :: <a href=\"Grisette-Internal-TH-Derivation-UnaryOpCommon.html#t:FieldFunExp\" title=\"Grisette.Internal.TH.Derivation.UnaryOpCommon\">FieldFunExp</a></li></ul>}","name":"UnaryOpFieldConfig UnaryOpFieldConfig extraLiftedPatNames extraPatNames fieldCombineFun fieldFunExp fieldResFun","module":"Grisette.Internal.TH.Derivation.UnaryOpCommon","link":"Grisette-Internal-TH-Derivation-UnaryOpCommon.html#t:UnaryOpFieldConfig"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UnaryOpConfig\">UnaryOpConfig</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:UnaryOpConfig\">UnaryOpConfig</a> :: <span class=\"keyword\">forall</span> config. <a href=\"Grisette-Internal-TH-Derivation-UnaryOpCommon.html#t:UnaryOpFunConfig\" title=\"Grisette.Internal.TH.Derivation.UnaryOpCommon\">UnaryOpFunConfig</a> config =&gt; config -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; <a href=\"Grisette-Internal-TH-Derivation-UnaryOpCommon.html#t:UnaryOpConfig\" title=\"Grisette.Internal.TH.Derivation.UnaryOpCommon\">UnaryOpConfig</a></li></ul>","name":"UnaryOpConfig UnaryOpConfig","module":"Grisette.Internal.TH.Derivation.UnaryOpCommon","link":"Grisette-Internal-TH-Derivation-UnaryOpCommon.html#t:UnaryOpConfig"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnaryOpFunConfig\">UnaryOpFunConfig</a> config <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:genUnaryOpFun\">genUnaryOpFun</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; config -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; [(<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>)] -&gt; [(<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>)] -&gt; [(<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>)] -&gt; (<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; [<a href=\"https://hackage.haskell.org/package/th-abstraction-0.7.1.0/docs/Language-Haskell-TH-Datatype.html#t:ConstructorInfo\" title=\"Language.Haskell.TH.Datatype\">ConstructorInfo</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a></li></ul>","name":"UnaryOpFunConfig genUnaryOpFun","module":"Grisette.Internal.TH.Derivation.UnaryOpCommon","link":"Grisette-Internal-TH-Derivation-UnaryOpCommon.html#t:UnaryOpFunConfig"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FieldFunExp\">FieldFunExp</a> = <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>","name":"FieldFunExp","module":"Grisette.Internal.TH.Derivation.UnaryOpCommon","link":"Grisette-Internal-TH-Derivation-UnaryOpCommon.html#t:FieldFunExp"},{"display_html":"<a href=\"#v:defaultFieldResFun\">defaultFieldResFun</a> :: <a href=\"https://hackage.haskell.org/package/th-abstraction-0.7.1.0/docs/Language-Haskell-TH-Datatype.html#t:ConstructorVariant\" title=\"Language.Haskell.TH.Datatype\">ConstructorVariant</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> (<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>, [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>])","name":"defaultFieldResFun","module":"Grisette.Internal.TH.Derivation.UnaryOpCommon","link":"Grisette-Internal-TH-Derivation-UnaryOpCommon.html#v:defaultFieldResFun"},{"display_html":"<a href=\"#v:defaultFieldFunExp\">defaultFieldFunExp</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; <a href=\"Grisette-Internal-TH-Derivation-UnaryOpCommon.html#t:FieldFunExp\" title=\"Grisette.Internal.TH.Derivation.UnaryOpCommon\">FieldFunExp</a>","name":"defaultFieldFunExp","module":"Grisette.Internal.TH.Derivation.UnaryOpCommon","link":"Grisette-Internal-TH-Derivation-UnaryOpCommon.html#v:defaultFieldFunExp"},{"display_html":"<a href=\"#v:genUnaryOpClass\">genUnaryOpClass</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"Grisette-Internal-TH-Derivation-UnaryOpCommon.html#t:UnaryOpClassConfig\" title=\"Grisette.Internal.TH.Derivation.UnaryOpCommon\">UnaryOpClassConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"genUnaryOpClass","module":"Grisette.Internal.TH.Derivation.UnaryOpCommon","link":"Grisette-Internal-TH-Derivation-UnaryOpCommon.html#v:genUnaryOpClass"},{"display_html":"<a href=\"#v:defaultUnaryOpInstanceTypeFromConfig\">defaultUnaryOpInstanceTypeFromConfig</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; [(<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>)] -&gt; [(<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>)] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>","name":"defaultUnaryOpInstanceTypeFromConfig","module":"Grisette.Internal.TH.Derivation.UnaryOpCommon","link":"Grisette-Internal-TH-Derivation-UnaryOpCommon.html#v:defaultUnaryOpInstanceTypeFromConfig"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:UnaryOpUnifiedConfig\">UnaryOpUnifiedConfig</a> = <a href=\"#v:UnaryOpUnifiedConfig\">UnaryOpUnifiedConfig</a> {<ul class=\"subs\"><li><a href=\"#v:unifiedFun\">unifiedFun</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a> -&gt; (<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>) -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>)</li></ul>}","name":"UnaryOpUnifiedConfig UnaryOpUnifiedConfig unifiedFun","module":"Grisette.Internal.TH.Derivation.UnifiedOpCommon","link":"Grisette-Internal-TH-Derivation-UnifiedOpCommon.html#t:UnaryOpUnifiedConfig"},{"display_html":"<a href=\"#v:defaultUnaryOpUnifiedFun\">defaultUnaryOpUnifiedFun</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a> -&gt; (<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>) -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>)","name":"defaultUnaryOpUnifiedFun","module":"Grisette.Internal.TH.Derivation.UnifiedOpCommon","link":"Grisette-Internal-TH-Derivation-UnifiedOpCommon.html#v:defaultUnaryOpUnifiedFun"},{"display_html":"<a href=\"#v:showPrintFieldFunExp\">showPrintFieldFunExp</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; <a href=\"Grisette-Internal-TH-Derivation-UnaryOpCommon.html#t:FieldFunExp\" title=\"Grisette.Internal.TH.Derivation.UnaryOpCommon\">FieldFunExp</a>","name":"showPrintFieldFunExp","module":"Grisette.Internal.TH.Derivation.ShowPPrintCommon","link":"Grisette-Internal-TH-Derivation-ShowPPrintCommon.html#v:showPrintFieldFunExp"},{"display_html":"<a href=\"#v:serializeConfig\">serializeConfig</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; <a href=\"Grisette-Internal-TH-Derivation-UnaryOpCommon.html#t:UnaryOpClassConfig\" title=\"Grisette.Internal.TH.Derivation.UnaryOpCommon\">UnaryOpClassConfig</a>","name":"serializeConfig","module":"Grisette.Internal.TH.Derivation.SerializeCommon","link":"Grisette-Internal-TH-Derivation-SerializeCommon.html#v:serializeConfig"},{"display_html":"<a href=\"#v:serializeWithSerialConfig\">serializeWithSerialConfig</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; <a href=\"Grisette-Internal-TH-Derivation-UnaryOpCommon.html#t:UnaryOpClassConfig\" title=\"Grisette.Internal.TH.Derivation.UnaryOpCommon\">UnaryOpClassConfig</a>","name":"serializeWithSerialConfig","module":"Grisette.Internal.TH.Derivation.SerializeCommon","link":"Grisette-Internal-TH-Derivation-SerializeCommon.html#v:serializeWithSerialConfig"},{"display_html":"<a href=\"#v:deriveUnifiedSymEq\">deriveUnifiedSymEq</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveUnifiedSymEq","module":"Grisette.Internal.TH.Derivation.DeriveUnifiedSymEq","link":"Grisette-Internal-TH-Derivation-DeriveUnifiedSymEq.html#v:deriveUnifiedSymEq"},{"display_html":"<a href=\"#v:deriveUnifiedSymEq1\">deriveUnifiedSymEq1</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveUnifiedSymEq1","module":"Grisette.Internal.TH.Derivation.DeriveUnifiedSymEq","link":"Grisette-Internal-TH-Derivation-DeriveUnifiedSymEq.html#v:deriveUnifiedSymEq1"},{"display_html":"<a href=\"#v:deriveUnifiedSymEq2\">deriveUnifiedSymEq2</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveUnifiedSymEq2","module":"Grisette.Internal.TH.Derivation.DeriveUnifiedSymEq","link":"Grisette-Internal-TH-Derivation-DeriveUnifiedSymEq.html#v:deriveUnifiedSymEq2"},{"display_html":"<a href=\"#v:deriveSubstSym\">deriveSubstSym</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveSubstSym","module":"Grisette.Internal.TH.Derivation.DeriveSubstSym","link":"Grisette-Internal-TH-Derivation-DeriveSubstSym.html#v:deriveSubstSym"},{"display_html":"<a href=\"#v:deriveSubstSym1\">deriveSubstSym1</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveSubstSym1","module":"Grisette.Internal.TH.Derivation.DeriveSubstSym","link":"Grisette-Internal-TH-Derivation-DeriveSubstSym.html#v:deriveSubstSym1"},{"display_html":"<a href=\"#v:deriveSubstSym2\">deriveSubstSym2</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveSubstSym2","module":"Grisette.Internal.TH.Derivation.DeriveSubstSym","link":"Grisette-Internal-TH-Derivation-DeriveSubstSym.html#v:deriveSubstSym2"},{"display_html":"<a href=\"#v:deriveShow\">deriveShow</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveShow","module":"Grisette.Internal.TH.Derivation.DeriveShow","link":"Grisette-Internal-TH-Derivation-DeriveShow.html#v:deriveShow"},{"display_html":"<a href=\"#v:deriveShow1\">deriveShow1</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveShow1","module":"Grisette.Internal.TH.Derivation.DeriveShow","link":"Grisette-Internal-TH-Derivation-DeriveShow.html#v:deriveShow1"},{"display_html":"<a href=\"#v:deriveShow2\">deriveShow2</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveShow2","module":"Grisette.Internal.TH.Derivation.DeriveShow","link":"Grisette-Internal-TH-Derivation-DeriveShow.html#v:deriveShow2"},{"display_html":"<a href=\"#v:deriveSerial\">deriveSerial</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveSerial","module":"Grisette.Internal.TH.Derivation.DeriveSerial","link":"Grisette-Internal-TH-Derivation-DeriveSerial.html#v:deriveSerial"},{"display_html":"<a href=\"#v:deriveSerial1\">deriveSerial1</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveSerial1","module":"Grisette.Internal.TH.Derivation.DeriveSerial","link":"Grisette-Internal-TH-Derivation-DeriveSerial.html#v:deriveSerial1"},{"display_html":"<a href=\"#v:deriveSerial2\">deriveSerial2</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveSerial2","module":"Grisette.Internal.TH.Derivation.DeriveSerial","link":"Grisette-Internal-TH-Derivation-DeriveSerial.html#v:deriveSerial2"},{"display_html":"<a href=\"#v:derivePPrint\">derivePPrint</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"derivePPrint","module":"Grisette.Internal.TH.Derivation.DerivePPrint","link":"Grisette-Internal-TH-Derivation-DerivePPrint.html#v:derivePPrint"},{"display_html":"<a href=\"#v:derivePPrint1\">derivePPrint1</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"derivePPrint1","module":"Grisette.Internal.TH.Derivation.DerivePPrint","link":"Grisette-Internal-TH-Derivation-DerivePPrint.html#v:derivePPrint1"},{"display_html":"<a href=\"#v:derivePPrint2\">derivePPrint2</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"derivePPrint2","module":"Grisette.Internal.TH.Derivation.DerivePPrint","link":"Grisette-Internal-TH-Derivation-DerivePPrint.html#v:derivePPrint2"},{"display_html":"<a href=\"#v:deriveNFData\">deriveNFData</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveNFData","module":"Grisette.Internal.TH.Derivation.DeriveNFData","link":"Grisette-Internal-TH-Derivation-DeriveNFData.html#v:deriveNFData"},{"display_html":"<a href=\"#v:deriveNFData1\">deriveNFData1</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveNFData1","module":"Grisette.Internal.TH.Derivation.DeriveNFData","link":"Grisette-Internal-TH-Derivation-DeriveNFData.html#v:deriveNFData1"},{"display_html":"<a href=\"#v:deriveNFData2\">deriveNFData2</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveNFData2","module":"Grisette.Internal.TH.Derivation.DeriveNFData","link":"Grisette-Internal-TH-Derivation-DeriveNFData.html#v:deriveNFData2"},{"display_html":"<a href=\"#v:deriveMergeable\">deriveMergeable</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveMergeable","module":"Grisette.Internal.TH.Derivation.DeriveMergeable","link":"Grisette-Internal-TH-Derivation-DeriveMergeable.html#v:deriveMergeable"},{"display_html":"<a href=\"#v:deriveMergeable1\">deriveMergeable1</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveMergeable1","module":"Grisette.Internal.TH.Derivation.DeriveMergeable","link":"Grisette-Internal-TH-Derivation-DeriveMergeable.html#v:deriveMergeable1"},{"display_html":"<a href=\"#v:deriveMergeable2\">deriveMergeable2</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveMergeable2","module":"Grisette.Internal.TH.Derivation.DeriveMergeable","link":"Grisette-Internal-TH-Derivation-DeriveMergeable.html#v:deriveMergeable2"},{"display_html":"<a href=\"#v:deriveMergeable3\">deriveMergeable3</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveMergeable3","module":"Grisette.Internal.TH.Derivation.DeriveMergeable","link":"Grisette-Internal-TH-Derivation-DeriveMergeable.html#v:deriveMergeable3"},{"display_html":"<a href=\"#v:genMergeableAndGetMergingInfoResult\">genMergeableAndGetMergingInfoResult</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> (MergingInfoResult, [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>])","name":"genMergeableAndGetMergingInfoResult","module":"Grisette.Internal.TH.Derivation.DeriveMergeable","link":"Grisette-Internal-TH-Derivation-DeriveMergeable.html#v:genMergeableAndGetMergingInfoResult"},{"display_html":"<a href=\"#v:genMergeable\">genMergeable</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"genMergeable","module":"Grisette.Internal.TH.Derivation.DeriveMergeable","link":"Grisette-Internal-TH-Derivation-DeriveMergeable.html#v:genMergeable"},{"display_html":"<a href=\"#v:genMergeable-39-\">genMergeable'</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; MergingInfoResult -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> (<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>, [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>])","name":"genMergeable'","module":"Grisette.Internal.TH.Derivation.DeriveMergeable","link":"Grisette-Internal-TH-Derivation-DeriveMergeable.html#v:genMergeable-39-"},{"display_html":"<a href=\"#v:genMergeableNoExistential\">genMergeableNoExistential</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"genMergeableNoExistential","module":"Grisette.Internal.TH.Derivation.DeriveMergeable","link":"Grisette-Internal-TH-Derivation-DeriveMergeable.html#v:genMergeableNoExistential"},{"display_html":"<a href=\"#v:genMergeableNoStrategy\">genMergeableNoStrategy</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"genMergeableNoStrategy","module":"Grisette.Internal.TH.Derivation.DeriveMergeable","link":"Grisette-Internal-TH-Derivation-DeriveMergeable.html#v:genMergeableNoStrategy"},{"display_html":"<a href=\"#v:genMergeableList\">genMergeableList</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"genMergeableList","module":"Grisette.Internal.TH.Derivation.DeriveMergeable","link":"Grisette-Internal-TH-Derivation-DeriveMergeable.html#v:genMergeableList"},{"display_html":"<a href=\"#v:deriveHashable\">deriveHashable</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveHashable","module":"Grisette.Internal.TH.Derivation.DeriveHashable","link":"Grisette-Internal-TH-Derivation-DeriveHashable.html#v:deriveHashable"},{"display_html":"<a href=\"#v:deriveHashable1\">deriveHashable1</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveHashable1","module":"Grisette.Internal.TH.Derivation.DeriveHashable","link":"Grisette-Internal-TH-Derivation-DeriveHashable.html#v:deriveHashable1"},{"display_html":"<a href=\"#v:deriveHashable2\">deriveHashable2</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveHashable2","module":"Grisette.Internal.TH.Derivation.DeriveHashable","link":"Grisette-Internal-TH-Derivation-DeriveHashable.html#v:deriveHashable2"},{"display_html":"<a href=\"#v:deriveExtractSym\">deriveExtractSym</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveExtractSym","module":"Grisette.Internal.TH.Derivation.DeriveExtractSym","link":"Grisette-Internal-TH-Derivation-DeriveExtractSym.html#v:deriveExtractSym"},{"display_html":"<a href=\"#v:deriveExtractSym1\">deriveExtractSym1</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveExtractSym1","module":"Grisette.Internal.TH.Derivation.DeriveExtractSym","link":"Grisette-Internal-TH-Derivation-DeriveExtractSym.html#v:deriveExtractSym1"},{"display_html":"<a href=\"#v:deriveExtractSym2\">deriveExtractSym2</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveExtractSym2","module":"Grisette.Internal.TH.Derivation.DeriveExtractSym","link":"Grisette-Internal-TH-Derivation-DeriveExtractSym.html#v:deriveExtractSym2"},{"display_html":"<a href=\"#v:deriveEvalSym\">deriveEvalSym</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveEvalSym","module":"Grisette.Internal.TH.Derivation.DeriveEvalSym","link":"Grisette-Internal-TH-Derivation-DeriveEvalSym.html#v:deriveEvalSym"},{"display_html":"<a href=\"#v:deriveEvalSym1\">deriveEvalSym1</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveEvalSym1","module":"Grisette.Internal.TH.Derivation.DeriveEvalSym","link":"Grisette-Internal-TH-Derivation-DeriveEvalSym.html#v:deriveEvalSym1"},{"display_html":"<a href=\"#v:deriveEvalSym2\">deriveEvalSym2</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveEvalSym2","module":"Grisette.Internal.TH.Derivation.DeriveEvalSym","link":"Grisette-Internal-TH-Derivation-DeriveEvalSym.html#v:deriveEvalSym2"},{"display_html":"<a href=\"#v:deriveCereal\">deriveCereal</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveCereal","module":"Grisette.Internal.TH.Derivation.DeriveCereal","link":"Grisette-Internal-TH-Derivation-DeriveCereal.html#v:deriveCereal"},{"display_html":"<a href=\"#v:deriveBinary\">deriveBinary</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveBinary","module":"Grisette.Internal.TH.Derivation.DeriveBinary","link":"Grisette-Internal-TH-Derivation-DeriveBinary.html#v:deriveBinary"},{"display_html":"<a href=\"#v:deriveAllSyms\">deriveAllSyms</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveAllSyms","module":"Grisette.Internal.TH.Derivation.DeriveAllSyms","link":"Grisette-Internal-TH-Derivation-DeriveAllSyms.html#v:deriveAllSyms"},{"display_html":"<a href=\"#v:deriveAllSyms1\">deriveAllSyms1</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveAllSyms1","module":"Grisette.Internal.TH.Derivation.DeriveAllSyms","link":"Grisette-Internal-TH-Derivation-DeriveAllSyms.html#v:deriveAllSyms1"},{"display_html":"<a href=\"#v:deriveAllSyms2\">deriveAllSyms2</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveAllSyms2","module":"Grisette.Internal.TH.Derivation.DeriveAllSyms","link":"Grisette-Internal-TH-Derivation-DeriveAllSyms.html#v:deriveAllSyms2"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:BinaryOpClassConfig\">BinaryOpClassConfig</a> = <a href=\"#v:BinaryOpClassConfig\">BinaryOpClassConfig</a> {<ul class=\"subs\"><li><a href=\"#v:binaryOpFieldConfigs\">binaryOpFieldConfigs</a> :: [<a href=\"Grisette-Internal-TH-Derivation-BinaryOpCommon.html#t:BinaryOpFieldConfig\" title=\"Grisette.Internal.TH.Derivation.BinaryOpCommon\">BinaryOpFieldConfig</a>]</li><li><a href=\"#v:binaryOpInstanceNames\">binaryOpInstanceNames</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]</li><li><a href=\"#v:binaryOpAllowSumType\">binaryOpAllowSumType</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:binaryOpAllowExistential\">binaryOpAllowExistential</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li></ul>}","name":"BinaryOpClassConfig BinaryOpClassConfig binaryOpAllowSumType binaryOpFieldConfigs binaryOpInstanceNames binaryOpAllowExistential","module":"Grisette.Internal.TH.Derivation.BinaryOpCommon","link":"Grisette-Internal-TH-Derivation-BinaryOpCommon.html#t:BinaryOpClassConfig"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:BinaryOpFieldConfig\">BinaryOpFieldConfig</a> = <a href=\"#v:BinaryOpFieldConfig\">BinaryOpFieldConfig</a> {<ul class=\"subs\"><li><a href=\"#v:extraPatNames\">extraPatNames</a> :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>]</li><li><a href=\"#v:fieldResFun\">fieldResFun</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>] -&gt; (<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>) -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> (<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>, [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>])</li><li><a href=\"#v:fieldCombineFun\">fieldCombineFun</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> (<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>, [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>])</li><li><a href=\"#v:fieldDifferentExistentialFun\">fieldDifferentExistentialFun</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a></li><li><a href=\"#v:fieldLMatchResult\">fieldLMatchResult</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a></li><li><a href=\"#v:fieldRMatchResult\">fieldRMatchResult</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a></li><li><a href=\"#v:fieldFunExp\">fieldFunExp</a> :: <a href=\"Grisette-Internal-TH-Derivation-BinaryOpCommon.html#t:FieldFunExp\" title=\"Grisette.Internal.TH.Derivation.BinaryOpCommon\">FieldFunExp</a></li><li><a href=\"#v:fieldFunNames\">fieldFunNames</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]</li></ul>}","name":"BinaryOpFieldConfig BinaryOpFieldConfig extraPatNames fieldCombineFun fieldFunExp fieldResFun fieldDifferentExistentialFun fieldFunNames fieldLMatchResult fieldRMatchResult","module":"Grisette.Internal.TH.Derivation.BinaryOpCommon","link":"Grisette-Internal-TH-Derivation-BinaryOpCommon.html#t:BinaryOpFieldConfig"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FieldFunExp\">FieldFunExp</a> = <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>","name":"FieldFunExp","module":"Grisette.Internal.TH.Derivation.BinaryOpCommon","link":"Grisette-Internal-TH-Derivation-BinaryOpCommon.html#t:FieldFunExp"},{"display_html":"<a href=\"#v:defaultFieldFunExp\">defaultFieldFunExp</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; <a href=\"Grisette-Internal-TH-Derivation-BinaryOpCommon.html#t:FieldFunExp\" title=\"Grisette.Internal.TH.Derivation.BinaryOpCommon\">FieldFunExp</a>","name":"defaultFieldFunExp","module":"Grisette.Internal.TH.Derivation.BinaryOpCommon","link":"Grisette-Internal-TH-Derivation-BinaryOpCommon.html#v:defaultFieldFunExp"},{"display_html":"<a href=\"#v:genBinaryOpClause\">genBinaryOpClause</a> :: <a href=\"Grisette-Internal-TH-Derivation-BinaryOpCommon.html#t:BinaryOpFieldConfig\" title=\"Grisette.Internal.TH.Derivation.BinaryOpCommon\">BinaryOpFieldConfig</a> -&gt; [(<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>)] -&gt; [(<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Kind\" title=\"Language.Haskell.TH.Syntax\">Kind</a>)] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"https://hackage.haskell.org/package/th-abstraction-0.7.1.0/docs/Language-Haskell-TH-Datatype.html#t:ConstructorInfo\" title=\"Language.Haskell.TH.Datatype\">ConstructorInfo</a> -&gt; <a href=\"https://hackage.haskell.org/package/th-abstraction-0.7.1.0/docs/Language-Haskell-TH-Datatype.html#t:ConstructorInfo\" title=\"Language.Haskell.TH.Datatype\">ConstructorInfo</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Clause\" title=\"Language.Haskell.TH.Syntax\">Clause</a>]","name":"genBinaryOpClause","module":"Grisette.Internal.TH.Derivation.BinaryOpCommon","link":"Grisette-Internal-TH-Derivation-BinaryOpCommon.html#v:genBinaryOpClause"},{"display_html":"<a href=\"#v:genBinaryOpClass\">genBinaryOpClass</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"Grisette-Internal-TH-Derivation-BinaryOpCommon.html#t:BinaryOpClassConfig\" title=\"Grisette.Internal.TH.Derivation.BinaryOpCommon\">BinaryOpClassConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"genBinaryOpClass","module":"Grisette.Internal.TH.Derivation.BinaryOpCommon","link":"Grisette-Internal-TH-Derivation-BinaryOpCommon.html#v:genBinaryOpClass"},{"display_html":"<a href=\"#v:deriveSymEq\">deriveSymEq</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveSymEq","module":"Grisette.Internal.TH.Derivation.DeriveSymEq","link":"Grisette-Internal-TH-Derivation-DeriveSymEq.html#v:deriveSymEq"},{"display_html":"<a href=\"#v:deriveSymEq1\">deriveSymEq1</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveSymEq1","module":"Grisette.Internal.TH.Derivation.DeriveSymEq","link":"Grisette-Internal-TH-Derivation-DeriveSymEq.html#v:deriveSymEq1"},{"display_html":"<a href=\"#v:deriveSymEq2\">deriveSymEq2</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveSymEq2","module":"Grisette.Internal.TH.Derivation.DeriveSymEq","link":"Grisette-Internal-TH-Derivation-DeriveSymEq.html#v:deriveSymEq2"},{"display_html":"<a href=\"#v:deriveOrd\">deriveOrd</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveOrd","module":"Grisette.Internal.TH.Derivation.DeriveOrd","link":"Grisette-Internal-TH-Derivation-DeriveOrd.html#v:deriveOrd"},{"display_html":"<a href=\"#v:deriveOrd1\">deriveOrd1</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveOrd1","module":"Grisette.Internal.TH.Derivation.DeriveOrd","link":"Grisette-Internal-TH-Derivation-DeriveOrd.html#v:deriveOrd1"},{"display_html":"<a href=\"#v:deriveOrd2\">deriveOrd2</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveOrd2","module":"Grisette.Internal.TH.Derivation.DeriveOrd","link":"Grisette-Internal-TH-Derivation-DeriveOrd.html#v:deriveOrd2"},{"display_html":"<a href=\"#v:deriveEq\">deriveEq</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveEq","module":"Grisette.Internal.TH.Derivation.DeriveEq","link":"Grisette-Internal-TH-Derivation-DeriveEq.html#v:deriveEq"},{"display_html":"<a href=\"#v:deriveEq1\">deriveEq1</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveEq1","module":"Grisette.Internal.TH.Derivation.DeriveEq","link":"Grisette-Internal-TH-Derivation-DeriveEq.html#v:deriveEq1"},{"display_html":"<a href=\"#v:deriveEq2\">deriveEq2</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveEq2","module":"Grisette.Internal.TH.Derivation.DeriveEq","link":"Grisette-Internal-TH-Derivation-DeriveEq.html#v:deriveEq2"},{"display_html":"<a href=\"#v:deriveSimpleMergeable\">deriveSimpleMergeable</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveSimpleMergeable","module":"Grisette.Internal.TH.Derivation.DeriveSimpleMergeable","link":"Grisette-Internal-TH-Derivation-DeriveSimpleMergeable.html#v:deriveSimpleMergeable"},{"display_html":"<a href=\"#v:deriveSimpleMergeable1\">deriveSimpleMergeable1</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveSimpleMergeable1","module":"Grisette.Internal.TH.Derivation.DeriveSimpleMergeable","link":"Grisette-Internal-TH-Derivation-DeriveSimpleMergeable.html#v:deriveSimpleMergeable1"},{"display_html":"<a href=\"#v:deriveSimpleMergeable2\">deriveSimpleMergeable2</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveSimpleMergeable2","module":"Grisette.Internal.TH.Derivation.DeriveSimpleMergeable","link":"Grisette-Internal-TH-Derivation-DeriveSimpleMergeable.html#v:deriveSimpleMergeable2"},{"display_html":"<a href=\"#v:deriveUnifiedSimpleMergeable\">deriveUnifiedSimpleMergeable</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveUnifiedSimpleMergeable","module":"Grisette.Internal.TH.Derivation.DeriveUnifiedSimpleMergeable","link":"Grisette-Internal-TH-Derivation-DeriveUnifiedSimpleMergeable.html#v:deriveUnifiedSimpleMergeable"},{"display_html":"<a href=\"#v:deriveUnifiedSimpleMergeable1\">deriveUnifiedSimpleMergeable1</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveUnifiedSimpleMergeable1","module":"Grisette.Internal.TH.Derivation.DeriveUnifiedSimpleMergeable","link":"Grisette-Internal-TH-Derivation-DeriveUnifiedSimpleMergeable.html#v:deriveUnifiedSimpleMergeable1"},{"display_html":"<a href=\"#v:deriveUnifiedSimpleMergeable2\">deriveUnifiedSimpleMergeable2</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveUnifiedSimpleMergeable2","module":"Grisette.Internal.TH.Derivation.DeriveUnifiedSimpleMergeable","link":"Grisette-Internal-TH-Derivation-DeriveUnifiedSimpleMergeable.html#v:deriveUnifiedSimpleMergeable2"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> u, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u) =&gt; <a href=\"#t:PlainUnion\">PlainUnion</a> (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:singleView\">singleView</a> :: u a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> a</li><li><a href=\"#v:ifView\">ifView</a> :: u a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>, u a, u a)</li><li><a href=\"#v:toGuardedList\">toGuardedList</a> :: u a -&gt; [(<a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>, a)]</li><li><a href=\"#v:overestimateUnionValues\">overestimateUnionValues</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a =&gt; u a -&gt; [a]</li></ul>","name":"PlainUnion ifView singleView toGuardedList overestimateUnionValues $dmtoGuardedList $dmoverestimateUnionValues","module":"Grisette.Internal.Core.Data.Class.PlainUnion","link":"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:Single\">Single</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; a -&gt; u a","name":"Single","module":"Grisette.Internal.Core.Data.Class.PlainUnion","link":"Grisette-Internal-Core-Data-Class-PlainUnion.html#v:Single"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:If\">If</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; u a -&gt; u a -&gt; u a","name":"If","module":"Grisette.Internal.Core.Data.Class.PlainUnion","link":"Grisette-Internal-Core-Data-Class-PlainUnion.html#v:If"},{"display_html":"<a href=\"#v:simpleMerge\">simpleMerge</a> :: <span class=\"keyword\">forall</span> u a. (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u) =&gt; u a -&gt; a","name":"simpleMerge","module":"Grisette.Internal.Core.Data.Class.PlainUnion","link":"Grisette-Internal-Core-Data-Class-PlainUnion.html#v:simpleMerge"},{"display_html":"<a href=\"#v:symIteMerge\">symIteMerge</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-ITEOp.html#t:ITEOp\" title=\"Grisette.Internal.Core.Data.Class.ITEOp\">ITEOp</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u) =&gt; u a -&gt; a","name":"symIteMerge","module":"Grisette.Internal.Core.Data.Class.PlainUnion","link":"Grisette-Internal-Core-Data-Class-PlainUnion.html#v:symIteMerge"},{"display_html":"<a href=\"#v:.-35-\">(.#)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Function.html#t:Function\" title=\"Grisette.Internal.Core.Data.Class.Function\">Function</a> f a r, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable</a> r, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u) =&gt; f -&gt; u a -&gt; r","name":".#","module":"Grisette.Internal.Core.Data.Class.PlainUnion","link":"Grisette-Internal-Core-Data-Class-PlainUnion.html#v:.-35-"},{"display_html":"<a href=\"#v:onUnion\">onUnion</a> :: <span class=\"keyword\">forall</span> u a r. (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable</a> r, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; r) -&gt; u a -&gt; r","name":"onUnion","module":"Grisette.Internal.Core.Data.Class.PlainUnion","link":"Grisette-Internal-Core-Data-Class-PlainUnion.html#v:onUnion"},{"display_html":"<a href=\"#v:onUnion2\">onUnion2</a> :: <span class=\"keyword\">forall</span> u a b r. (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable</a> r, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; (a -&gt; b -&gt; r) -&gt; u a -&gt; u b -&gt; r","name":"onUnion2","module":"Grisette.Internal.Core.Data.Class.PlainUnion","link":"Grisette-Internal-Core-Data-Class-PlainUnion.html#v:onUnion2"},{"display_html":"<a href=\"#v:onUnion3\">onUnion3</a> :: <span class=\"keyword\">forall</span> u a b c r. (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable</a> r, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c) =&gt; (a -&gt; b -&gt; c -&gt; r) -&gt; u a -&gt; u b -&gt; u c -&gt; r","name":"onUnion3","module":"Grisette.Internal.Core.Data.Class.PlainUnion","link":"Grisette-Internal-Core-Data-Class-PlainUnion.html#v:onUnion3"},{"display_html":"<a href=\"#v:onUnion4\">onUnion4</a> :: <span class=\"keyword\">forall</span> u a b c d r. (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable</a> r, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> d) =&gt; (a -&gt; b -&gt; c -&gt; d -&gt; r) -&gt; u a -&gt; u b -&gt; u c -&gt; u d -&gt; r","name":"onUnion4","module":"Grisette.Internal.Core.Data.Class.PlainUnion","link":"Grisette-Internal-Core-Data-Class-PlainUnion.html#v:onUnion4"},{"display_html":"<a href=\"#v:unionToCon\">unionToCon</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon</a> a b, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u) =&gt; u a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> b","name":"unionToCon","module":"Grisette.Internal.Core.Data.Class.PlainUnion","link":"Grisette-Internal-Core-Data-Class-PlainUnion.html#v:unionToCon"},{"display_html":"<a href=\"#v:genConvertOpClass\">genConvertOpClass</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"Grisette-Internal-TH-Derivation-ConvertOpCommon.html#t:ConvertOpClassConfig\" title=\"Grisette.Internal.TH.Derivation.ConvertOpCommon\">ConvertOpClassConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"genConvertOpClass","module":"Grisette.Internal.TH.Derivation.ConvertOpCommon","link":"Grisette-Internal-TH-Derivation-ConvertOpCommon.html#v:genConvertOpClass"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ConvertOpClassConfig\">ConvertOpClassConfig</a> = <a href=\"#v:ConvertOpClassConfig\">ConvertOpClassConfig</a> {<ul class=\"subs\"><li><a href=\"#v:convertOpTarget\">convertOpTarget</a> :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a></li><li><a href=\"#v:convertOpInstanceNames\">convertOpInstanceNames</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]</li><li><a href=\"#v:convertOpFunNames\">convertOpFunNames</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]</li><li><a href=\"#v:convertFieldResFun\">convertFieldResFun</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a></li><li><a href=\"#v:convertFieldCombineFun\">convertFieldCombineFun</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a></li><li><a href=\"#v:convertFieldFunExp\">convertFieldFunExp</a> :: FieldFunExp</li></ul>}","name":"ConvertOpClassConfig ConvertOpClassConfig convertFieldCombineFun convertFieldFunExp convertFieldResFun convertOpFunNames convertOpInstanceNames convertOpTarget","module":"Grisette.Internal.TH.Derivation.ConvertOpCommon","link":"Grisette-Internal-TH-Derivation-ConvertOpCommon.html#t:ConvertOpClassConfig"},{"display_html":"<a href=\"#v:defaultFieldFunExp\">defaultFieldFunExp</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; FieldFunExp","name":"defaultFieldFunExp","module":"Grisette.Internal.TH.Derivation.ConvertOpCommon","link":"Grisette-Internal-TH-Derivation-ConvertOpCommon.html#v:defaultFieldFunExp"},{"display_html":"<a href=\"#v:deriveToSym\">deriveToSym</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveToSym","module":"Grisette.Internal.TH.Derivation.DeriveToSym","link":"Grisette-Internal-TH-Derivation-DeriveToSym.html#v:deriveToSym"},{"display_html":"<a href=\"#v:deriveToSym1\">deriveToSym1</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveToSym1","module":"Grisette.Internal.TH.Derivation.DeriveToSym","link":"Grisette-Internal-TH-Derivation-DeriveToSym.html#v:deriveToSym1"},{"display_html":"<a href=\"#v:deriveToSym2\">deriveToSym2</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveToSym2","module":"Grisette.Internal.TH.Derivation.DeriveToSym","link":"Grisette-Internal-TH-Derivation-DeriveToSym.html#v:deriveToSym2"},{"display_html":"<a href=\"#v:deriveToCon\">deriveToCon</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveToCon","module":"Grisette.Internal.TH.Derivation.DeriveToCon","link":"Grisette-Internal-TH-Derivation-DeriveToCon.html#v:deriveToCon"},{"display_html":"<a href=\"#v:deriveToCon1\">deriveToCon1</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveToCon1","module":"Grisette.Internal.TH.Derivation.DeriveToCon","link":"Grisette-Internal-TH-Derivation-DeriveToCon.html#v:deriveToCon1"},{"display_html":"<a href=\"#v:deriveToCon2\">deriveToCon2</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveToCon2","module":"Grisette.Internal.TH.Derivation.DeriveToCon","link":"Grisette-Internal-TH-Derivation-DeriveToCon.html#v:deriveToCon2"},{"display_html":"<a href=\"#v:deriveSymOrd\">deriveSymOrd</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveSymOrd","module":"Grisette.Internal.TH.Derivation.DeriveSymOrd","link":"Grisette-Internal-TH-Derivation-DeriveSymOrd.html#v:deriveSymOrd"},{"display_html":"<a href=\"#v:deriveSymOrd1\">deriveSymOrd1</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveSymOrd1","module":"Grisette.Internal.TH.Derivation.DeriveSymOrd","link":"Grisette-Internal-TH-Derivation-DeriveSymOrd.html#v:deriveSymOrd1"},{"display_html":"<a href=\"#v:deriveSymOrd2\">deriveSymOrd2</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveSymOrd2","module":"Grisette.Internal.TH.Derivation.DeriveSymOrd","link":"Grisette-Internal-TH-Derivation-DeriveSymOrd.html#v:deriveSymOrd2"},{"display_html":"<a href=\"#v:deriveUnifiedSymOrd\">deriveUnifiedSymOrd</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveUnifiedSymOrd","module":"Grisette.Internal.TH.Derivation.DeriveUnifiedSymOrd","link":"Grisette-Internal-TH-Derivation-DeriveUnifiedSymOrd.html#v:deriveUnifiedSymOrd"},{"display_html":"<a href=\"#v:deriveUnifiedSymOrd1\">deriveUnifiedSymOrd1</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveUnifiedSymOrd1","module":"Grisette.Internal.TH.Derivation.DeriveUnifiedSymOrd","link":"Grisette-Internal-TH-Derivation-DeriveUnifiedSymOrd.html#v:deriveUnifiedSymOrd1"},{"display_html":"<a href=\"#v:deriveUnifiedSymOrd2\">deriveUnifiedSymOrd2</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveUnifiedSymOrd2","module":"Grisette.Internal.TH.Derivation.DeriveUnifiedSymOrd","link":"Grisette-Internal-TH-Derivation-DeriveUnifiedSymOrd.html#v:deriveUnifiedSymOrd2"},{"display_html":"<a href=\"#v:derive\">derive</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"derive","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:derive"},{"display_html":"<a href=\"#v:deriveWith\">deriveWith</a> :: <a href=\"Grisette-Internal-TH-Derivation-Common.html#t:DeriveConfig\" title=\"Grisette.Internal.TH.Derivation.Common\">DeriveConfig</a> -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveWith","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:deriveWith"},{"display_html":"<a href=\"#v:allClasses0\">allClasses0</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"allClasses0","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:allClasses0"},{"display_html":"<a href=\"#v:allClasses01\">allClasses01</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"allClasses01","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:allClasses01"},{"display_html":"<a href=\"#v:allClasses012\">allClasses012</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"allClasses012","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:allClasses012"},{"display_html":"<a href=\"#v:basicClasses0\">basicClasses0</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"basicClasses0","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:basicClasses0"},{"display_html":"<a href=\"#v:basicClasses1\">basicClasses1</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"basicClasses1","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:basicClasses1"},{"display_html":"<a href=\"#v:basicClasses2\">basicClasses2</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"basicClasses2","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:basicClasses2"},{"display_html":"<a href=\"#v:basicClasses01\">basicClasses01</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"basicClasses01","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:basicClasses01"},{"display_html":"<a href=\"#v:basicClasses012\">basicClasses012</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"basicClasses012","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:basicClasses012"},{"display_html":"<a href=\"#v:noExistentialClasses0\">noExistentialClasses0</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"noExistentialClasses0","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:noExistentialClasses0"},{"display_html":"<a href=\"#v:concreteOrdClasses0\">concreteOrdClasses0</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"concreteOrdClasses0","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:concreteOrdClasses0"},{"display_html":"<a href=\"#v:noExistentialClasses1\">noExistentialClasses1</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"noExistentialClasses1","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:noExistentialClasses1"},{"display_html":"<a href=\"#v:concreteOrdClasses1\">concreteOrdClasses1</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"concreteOrdClasses1","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:concreteOrdClasses1"},{"display_html":"<a href=\"#v:noExistentialClasses2\">noExistentialClasses2</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"noExistentialClasses2","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:noExistentialClasses2"},{"display_html":"<a href=\"#v:concreteOrdClasses2\">concreteOrdClasses2</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"concreteOrdClasses2","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:concreteOrdClasses2"},{"display_html":"<a href=\"#v:showClasses\">showClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"showClasses","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:showClasses"},{"display_html":"<a href=\"#v:pprintClasses\">pprintClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"pprintClasses","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:pprintClasses"},{"display_html":"<a href=\"#v:evalSymClasses\">evalSymClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"evalSymClasses","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:evalSymClasses"},{"display_html":"<a href=\"#v:extractSymClasses\">extractSymClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"extractSymClasses","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:extractSymClasses"},{"display_html":"<a href=\"#v:substSymClasses\">substSymClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"substSymClasses","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:substSymClasses"},{"display_html":"<a href=\"#v:allSymsClasses\">allSymsClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"allSymsClasses","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:allSymsClasses"},{"display_html":"<a href=\"#v:eqClasses\">eqClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"eqClasses","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:eqClasses"},{"display_html":"<a href=\"#v:ordClasses\">ordClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"ordClasses","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:ordClasses"},{"display_html":"<a href=\"#v:symOrdClasses\">symOrdClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"symOrdClasses","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:symOrdClasses"},{"display_html":"<a href=\"#v:symEqClasses\">symEqClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"symEqClasses","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:symEqClasses"},{"display_html":"<a href=\"#v:unifiedSymOrdClasses\">unifiedSymOrdClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"unifiedSymOrdClasses","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:unifiedSymOrdClasses"},{"display_html":"<a href=\"#v:unifiedSymEqClasses\">unifiedSymEqClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"unifiedSymEqClasses","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:unifiedSymEqClasses"},{"display_html":"<a href=\"#v:mergeableClasses\">mergeableClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"mergeableClasses","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:mergeableClasses"},{"display_html":"<a href=\"#v:nfDataClasses\">nfDataClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"nfDataClasses","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:nfDataClasses"},{"display_html":"<a href=\"#v:hashableClasses\">hashableClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"hashableClasses","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:hashableClasses"},{"display_html":"<a href=\"#v:toSymClasses\">toSymClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"toSymClasses","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:toSymClasses"},{"display_html":"<a href=\"#v:toConClasses\">toConClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"toConClasses","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:toConClasses"},{"display_html":"<a href=\"#v:serialClasses\">serialClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"serialClasses","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:serialClasses"},{"display_html":"<a href=\"#v:simpleMergeableClasses\">simpleMergeableClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"simpleMergeableClasses","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:simpleMergeableClasses"},{"display_html":"<a href=\"#v:unifiedSimpleMergeableClasses\">unifiedSimpleMergeableClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"unifiedSimpleMergeableClasses","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:unifiedSimpleMergeableClasses"},{"display_html":"<a href=\"#v:filterExactNumArgs\">filterExactNumArgs</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"filterExactNumArgs","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:filterExactNumArgs"},{"display_html":"<a href=\"#v:filterLeqNumArgs\">filterLeqNumArgs</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"filterLeqNumArgs","module":"Grisette.Internal.TH.Derivation.Derive","link":"Grisette-Internal-TH-Derivation-Derive.html#v:filterLeqNumArgs"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeSym\">SomeSym</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:SomeSym\">SomeSym</a> :: <span class=\"keyword\">forall</span> con sym. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> con sym =&gt; sym -&gt; <a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a></li></ul>","name":"SomeSym SomeSym","module":"Grisette.Internal.SymPrim.AllSyms","link":"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:AllSyms\">AllSyms</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:allSymsS\">allSymsS</a> :: a -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>] -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>]</li><li><a href=\"#v:allSyms\">allSyms</a> :: a -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>]</li></ul>","name":"AllSyms allSyms allSymsS $dmallSyms $dmallSymsS","module":"Grisette.Internal.SymPrim.AllSyms","link":"Grisette-Internal-SymPrim-AllSyms.html#t:AllSyms"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:AllSyms\" title=\"Grisette.Internal.SymPrim.AllSyms\">AllSyms</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:AllSyms\" title=\"Grisette.Internal.SymPrim.AllSyms\">AllSyms</a> (f a)) =&gt; <a href=\"#t:AllSyms1\">AllSyms1</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftAllSymsS\">liftAllSymsS</a> :: (a -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>] -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>]) -&gt; f a -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>] -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>]</li></ul>","name":"AllSyms1 liftAllSymsS","module":"Grisette.Internal.SymPrim.AllSyms","link":"Grisette-Internal-SymPrim-AllSyms.html#t:AllSyms1"},{"display_html":"<a href=\"#v:allSymsS1\">allSymsS1</a> :: (<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:AllSyms1\" title=\"Grisette.Internal.SymPrim.AllSyms\">AllSyms1</a> f, <a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:AllSyms\" title=\"Grisette.Internal.SymPrim.AllSyms\">AllSyms</a> a) =&gt; f a -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>] -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>]","name":"allSymsS1","module":"Grisette.Internal.SymPrim.AllSyms","link":"Grisette-Internal-SymPrim-AllSyms.html#v:allSymsS1"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:AllSyms\" title=\"Grisette.Internal.SymPrim.AllSyms\">AllSyms</a> a =&gt; <a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:AllSyms1\" title=\"Grisette.Internal.SymPrim.AllSyms\">AllSyms1</a> (f a)) =&gt; <a href=\"#t:AllSyms2\">AllSyms2</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftAllSymsS2\">liftAllSymsS2</a> :: (a -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>] -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>]) -&gt; (b -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>] -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>]) -&gt; f a b -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>] -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>]</li></ul>","name":"AllSyms2 liftAllSymsS2","module":"Grisette.Internal.SymPrim.AllSyms","link":"Grisette-Internal-SymPrim-AllSyms.html#t:AllSyms2"},{"display_html":"<a href=\"#v:allSymsS2\">allSymsS2</a> :: (<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:AllSyms2\" title=\"Grisette.Internal.SymPrim.AllSyms\">AllSyms2</a> f, <a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:AllSyms\" title=\"Grisette.Internal.SymPrim.AllSyms\">AllSyms</a> a, <a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:AllSyms\" title=\"Grisette.Internal.SymPrim.AllSyms\">AllSyms</a> b) =&gt; f a b -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>] -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>]","name":"allSymsS2","module":"Grisette.Internal.SymPrim.AllSyms","link":"Grisette-Internal-SymPrim-AllSyms.html#v:allSymsS2"},{"display_html":"<a href=\"#v:allSymsSize\">allSymsSize</a> :: <a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:AllSyms\" title=\"Grisette.Internal.SymPrim.AllSyms\">AllSyms</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"allSymsSize","module":"Grisette.Internal.SymPrim.AllSyms","link":"Grisette-Internal-SymPrim-AllSyms.html#v:allSymsSize"},{"display_html":"<a href=\"#v:symSize\">symSize</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> con sym =&gt; sym -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"symSize","module":"Grisette.Internal.SymPrim.AllSyms","link":"Grisette-Internal-SymPrim-AllSyms.html#v:symSize"},{"display_html":"<a href=\"#v:symsSize\">symsSize</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> con sym =&gt; [sym] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"symsSize","module":"Grisette.Internal.SymPrim.AllSyms","link":"Grisette-Internal-SymPrim-AllSyms.html#v:symsSize"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:AllSymsArgs\">AllSymsArgs</a> arity a","name":"AllSymsArgs AllSymsArgs0 AllSymsArgs1","module":"Grisette.Internal.SymPrim.AllSyms","link":"Grisette-Internal-SymPrim-AllSyms.html#t:AllSymsArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GAllSyms\">GAllSyms</a> arity (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:gallSymsS\">gallSymsS</a> :: <a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:AllSymsArgs\" title=\"Grisette.Internal.SymPrim.AllSyms\">AllSymsArgs</a> arity a -&gt; f a -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>] -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>]</li></ul>","name":"GAllSyms gallSymsS","module":"Grisette.Internal.SymPrim.AllSyms","link":"Grisette-Internal-SymPrim-AllSyms.html#t:GAllSyms"},{"display_html":"<a href=\"#v:genericAllSymsS\">genericAllSymsS</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:GAllSyms\" title=\"Grisette.Internal.SymPrim.AllSyms\">GAllSyms</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a)) =&gt; a -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>] -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>]","name":"genericAllSymsS","module":"Grisette.Internal.SymPrim.AllSyms","link":"Grisette-Internal-SymPrim-AllSyms.html#v:genericAllSymsS"},{"display_html":"<a href=\"#v:genericLiftAllSymsS\">genericLiftAllSymsS</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f, <a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:GAllSyms\" title=\"Grisette.Internal.SymPrim.AllSyms\">GAllSyms</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f)) =&gt; (a -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>] -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>]) -&gt; f a -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>] -&gt; [<a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:SomeSym\" title=\"Grisette.Internal.SymPrim.AllSyms\">SomeSym</a>]","name":"genericLiftAllSymsS","module":"Grisette.Internal.SymPrim.AllSyms","link":"Grisette-Internal-SymPrim-AllSyms.html#v:genericLiftAllSymsS"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToCon\">ToCon</a> a b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toCon\">toCon</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> b</li></ul>","name":"ToCon toCon","module":"Grisette.Internal.Core.Data.Class.ToCon","link":"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a b. <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon</a> a b =&gt; <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon</a> (f1 a) (f2 b)) =&gt; <a href=\"#t:ToCon1\">ToCon1</a> (f1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (f2 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftToCon\">liftToCon</a> :: (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> b) -&gt; f1 a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (f2 b)</li></ul>","name":"ToCon1 liftToCon","module":"Grisette.Internal.Core.Data.Class.ToCon","link":"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon1"},{"display_html":"<a href=\"#v:toCon1\">toCon1</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon1\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon1</a> f1 f2, <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon</a> a b) =&gt; f1 a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (f2 b)","name":"toCon1","module":"Grisette.Internal.Core.Data.Class.ToCon","link":"Grisette-Internal-Core-Data-Class-ToCon.html#v:toCon1"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a b. <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon</a> a b =&gt; <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon1\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon1</a> (f1 a) (f2 b)) =&gt; <a href=\"#t:ToCon2\">ToCon2</a> (f1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (f2 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftToCon2\">liftToCon2</a> :: (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> b) -&gt; (c -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> d) -&gt; f1 a c -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (f2 b d)</li></ul>","name":"ToCon2 liftToCon2","module":"Grisette.Internal.Core.Data.Class.ToCon","link":"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon2"},{"display_html":"<a href=\"#v:toCon2\">toCon2</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon2\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon2</a> f1 f2, <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon</a> a b, <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon</a> c d) =&gt; f1 a c -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (f2 b d)","name":"toCon2","module":"Grisette.Internal.Core.Data.Class.ToCon","link":"Grisette-Internal-Core-Data-Class-ToCon.html#v:toCon2"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:ToConArgs\">ToConArgs</a> arity a b","name":"ToConArgs ToConArgs0 ToConArgs1","module":"Grisette.Internal.Core.Data.Class.ToCon","link":"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToConArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GToCon\">GToCon</a> arity (f1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (f2 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:gtoCon\">gtoCon</a> :: <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToConArgs\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToConArgs</a> arity a b -&gt; f1 a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (f2 b)</li></ul>","name":"GToCon gtoCon","module":"Grisette.Internal.Core.Data.Class.ToCon","link":"Grisette-Internal-Core-Data-Class-ToCon.html#t:GToCon"},{"display_html":"<a href=\"#v:genericToCon\">genericToCon</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> b, <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:GToCon\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">GToCon</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> b)) =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> b","name":"genericToCon","module":"Grisette.Internal.Core.Data.Class.ToCon","link":"Grisette-Internal-Core-Data-Class-ToCon.html#v:genericToCon"},{"display_html":"<a href=\"#v:genericLiftToCon\">genericLiftToCon</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f1, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f2, <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:GToCon\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">GToCon</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f1) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f2)) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> b) -&gt; f1 a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (f2 b)","name":"genericLiftToCon","module":"Grisette.Internal.Core.Data.Class.ToCon","link":"Grisette-Internal-Core-Data-Class-ToCon.html#v:genericLiftToCon"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:SymEq\">SymEq</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:.-61--61-\">(.==)</a> :: a -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:.-47--61-\">(./=)</a> :: a -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symDistinct\">symDistinct</a> :: [a] -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li></ul>","name":"SymEq .== ./= symDistinct $dm.== $dm./= $dmsymDistinct","module":"Grisette.Internal.Core.Data.Class.SymEq","link":"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a =&gt; <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> (f a)) =&gt; <a href=\"#t:SymEq1\">SymEq1</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftSymEq\">liftSymEq</a> :: (a -&gt; b -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; f a -&gt; f b -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li></ul>","name":"SymEq1 liftSymEq","module":"Grisette.Internal.Core.Data.Class.SymEq","link":"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq1"},{"display_html":"<a href=\"#v:symEq1\">symEq1</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq1\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq1</a> f) =&gt; f a -&gt; f a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symEq1","module":"Grisette.Internal.Core.Data.Class.SymEq","link":"Grisette-Internal-Core-Data-Class-SymEq.html#v:symEq1"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a =&gt; <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq1\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq1</a> (f a)) =&gt; <a href=\"#t:SymEq2\">SymEq2</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftSymEq2\">liftSymEq2</a> :: (a -&gt; b -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; (c -&gt; d -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; f a c -&gt; f b d -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li></ul>","name":"SymEq2 liftSymEq2","module":"Grisette.Internal.Core.Data.Class.SymEq","link":"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq2"},{"display_html":"<a href=\"#v:symEq2\">symEq2</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> b, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq2\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq2</a> f) =&gt; f a b -&gt; f a b -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symEq2","module":"Grisette.Internal.Core.Data.Class.SymEq","link":"Grisette-Internal-Core-Data-Class-SymEq.html#v:symEq2"},{"display_html":"<a href=\"#v:pairwiseSymDistinct\">pairwiseSymDistinct</a> :: <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a =&gt; [a] -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"pairwiseSymDistinct","module":"Grisette.Internal.Core.Data.Class.SymEq","link":"Grisette-Internal-Core-Data-Class-SymEq.html#v:pairwiseSymDistinct"},{"display_html":"<a href=\"#v:distinct\">distinct</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a =&gt; [a] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"distinct","module":"Grisette.Internal.Core.Data.Class.SymEq","link":"Grisette-Internal-Core-Data-Class-SymEq.html#v:distinct"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:SymEqArgs\">SymEqArgs</a> arity a b","name":"SymEqArgs SymEqArgs0 SymEqArgs1","module":"Grisette.Internal.Core.Data.Class.SymEq","link":"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEqArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GSymEq\">GSymEq</a> arity (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:gsymEq\">gsymEq</a> :: <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEqArgs\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEqArgs</a> arity a b -&gt; f a -&gt; f b -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li></ul>","name":"GSymEq gsymEq","module":"Grisette.Internal.Core.Data.Class.SymEq","link":"Grisette-Internal-Core-Data-Class-SymEq.html#t:GSymEq"},{"display_html":"<a href=\"#v:genericSymEq\">genericSymEq</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:GSymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">GSymEq</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a)) =&gt; a -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"genericSymEq","module":"Grisette.Internal.Core.Data.Class.SymEq","link":"Grisette-Internal-Core-Data-Class-SymEq.html#v:genericSymEq"},{"display_html":"<a href=\"#v:genericLiftSymEq\">genericLiftSymEq</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:GSymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">GSymEq</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f)) =&gt; (a -&gt; b -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; f a -&gt; f b -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"genericLiftSymEq","module":"Grisette.Internal.Core.Data.Class.SymEq","link":"Grisette-Internal-Core-Data-Class-SymEq.html#v:genericLiftSymEq"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:SubstSym\">SubstSym</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:substSym\">substSym</a> :: <span class=\"keyword\">forall</span> cb sb (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> cb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; a -&gt; a</li></ul>","name":"SubstSym substSym","module":"Grisette.Internal.Core.Data.Class.SubstSym","link":"Grisette-Internal-Core-Data-Class-SubstSym.html#t:SubstSym"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Core-Data-Class-SubstSym.html#t:SubstSym\" title=\"Grisette.Internal.Core.Data.Class.SubstSym\">SubstSym</a> a =&gt; <a href=\"Grisette-Internal-Core-Data-Class-SubstSym.html#t:SubstSym\" title=\"Grisette.Internal.Core.Data.Class.SubstSym\">SubstSym</a> (f a)) =&gt; <a href=\"#t:SubstSym1\">SubstSym1</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftSubstSym\">liftSubstSym</a> :: <span class=\"keyword\">forall</span> cb sb (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> cb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; a -&gt; a) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; f a -&gt; f a</li></ul>","name":"SubstSym1 liftSubstSym","module":"Grisette.Internal.Core.Data.Class.SubstSym","link":"Grisette-Internal-Core-Data-Class-SubstSym.html#t:SubstSym1"},{"display_html":"<a href=\"#v:substSym1\">substSym1</a> :: <span class=\"keyword\">forall</span> f a cb sb (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). (<a href=\"Grisette-Internal-Core-Data-Class-SubstSym.html#t:SubstSym1\" title=\"Grisette.Internal.Core.Data.Class.SubstSym\">SubstSym1</a> f, <a href=\"Grisette-Internal-Core-Data-Class-SubstSym.html#t:SubstSym\" title=\"Grisette.Internal.Core.Data.Class.SubstSym\">SubstSym</a> a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> cb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; f a -&gt; f a","name":"substSym1","module":"Grisette.Internal.Core.Data.Class.SubstSym","link":"Grisette-Internal-Core-Data-Class-SubstSym.html#v:substSym1"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Core-Data-Class-SubstSym.html#t:SubstSym\" title=\"Grisette.Internal.Core.Data.Class.SubstSym\">SubstSym</a> a =&gt; <a href=\"Grisette-Internal-Core-Data-Class-SubstSym.html#t:SubstSym1\" title=\"Grisette.Internal.Core.Data.Class.SubstSym\">SubstSym1</a> (f a)) =&gt; <a href=\"#t:SubstSym2\">SubstSym2</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftSubstSym2\">liftSubstSym2</a> :: <span class=\"keyword\">forall</span> cb sb (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a b. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> cb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; a -&gt; a) -&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; b -&gt; b) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; f a b -&gt; f a b</li></ul>","name":"SubstSym2 liftSubstSym2","module":"Grisette.Internal.Core.Data.Class.SubstSym","link":"Grisette-Internal-Core-Data-Class-SubstSym.html#t:SubstSym2"},{"display_html":"<a href=\"#v:substSym2\">substSym2</a> :: <span class=\"keyword\">forall</span> f a b cb sb (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). (<a href=\"Grisette-Internal-Core-Data-Class-SubstSym.html#t:SubstSym2\" title=\"Grisette.Internal.Core.Data.Class.SubstSym\">SubstSym2</a> f, <a href=\"Grisette-Internal-Core-Data-Class-SubstSym.html#t:SubstSym\" title=\"Grisette.Internal.Core.Data.Class.SubstSym\">SubstSym</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SubstSym.html#t:SubstSym\" title=\"Grisette.Internal.Core.Data.Class.SubstSym\">SubstSym</a> b, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> cb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; f a b -&gt; f a b","name":"substSym2","module":"Grisette.Internal.Core.Data.Class.SubstSym","link":"Grisette-Internal-Core-Data-Class-SubstSym.html#v:substSym2"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:SubstSymArgs\">SubstSymArgs</a> arity (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a cb sb","name":"SubstSymArgs SubstSymArgs0 SubstSymArgs1","module":"Grisette.Internal.Core.Data.Class.SubstSym","link":"Grisette-Internal-Core-Data-Class-SubstSym.html#t:SubstSymArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GSubstSym\">GSubstSym</a> arity (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:gsubstSym\">gsubstSym</a> :: <span class=\"keyword\">forall</span> cb sb (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> cb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-SubstSym.html#t:SubstSymArgs\" title=\"Grisette.Internal.Core.Data.Class.SubstSym\">SubstSymArgs</a> arity knd a cb sb -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; f a -&gt; f a</li></ul>","name":"GSubstSym gsubstSym","module":"Grisette.Internal.Core.Data.Class.SubstSym","link":"Grisette-Internal-Core-Data-Class-SubstSym.html#t:GSubstSym"},{"display_html":"<a href=\"#v:genericSubstSym\">genericSubstSym</a> :: <span class=\"keyword\">forall</span> a cb sb (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SubstSym.html#t:GSubstSym\" title=\"Grisette.Internal.Core.Data.Class.SubstSym\">GSubstSym</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> cb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; a -&gt; a","name":"genericSubstSym","module":"Grisette.Internal.Core.Data.Class.SubstSym","link":"Grisette-Internal-Core-Data-Class-SubstSym.html#v:genericSubstSym"},{"display_html":"<a href=\"#v:genericLiftSubstSym\">genericLiftSubstSym</a> :: <span class=\"keyword\">forall</span> f cb sb (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f, <a href=\"Grisette-Internal-Core-Data-Class-SubstSym.html#t:GSubstSym\" title=\"Grisette.Internal.Core.Data.Class.SubstSym\">GSubstSym</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> cb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; a -&gt; a) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; f a -&gt; f a","name":"genericLiftSubstSym","module":"Grisette.Internal.Core.Data.Class.SubstSym","link":"Grisette-Internal-Core-Data-Class-SubstSym.html#v:genericLiftSubstSym"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PPrint\">PPrint</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pformat\">pformat</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann</li><li><a href=\"#v:pformatPrec\">pformatPrec</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann</li><li><a href=\"#v:pformatList\">pformatList</a> :: [a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann</li></ul>","name":"PPrint pformat pformatList pformatPrec $dmpformat $dmpformatList $dmpformatPrec","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint"},{"display_html":"<a href=\"#v:docToTextWith\">docToTextWith</a> :: <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:LayoutOptions\" title=\"Prettyprinter\">LayoutOptions</a> -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>","name":"docToTextWith","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#v:docToTextWith"},{"display_html":"<a href=\"#v:docToTextWithWidth\">docToTextWithWidth</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>","name":"docToTextWithWidth","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#v:docToTextWithWidth"},{"display_html":"<a href=\"#v:docToText\">docToText</a> :: <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>","name":"docToText","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#v:docToText"},{"display_html":"<a href=\"#v:pformatTextWith\">pformatTextWith</a> :: <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint</a> a =&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:LayoutOptions\" title=\"Prettyprinter\">LayoutOptions</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>","name":"pformatTextWith","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#v:pformatTextWith"},{"display_html":"<a href=\"#v:pformatTextWithWidth\">pformatTextWithWidth</a> :: <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint</a> a =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>","name":"pformatTextWithWidth","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#v:pformatTextWithWidth"},{"display_html":"<a href=\"#v:pformatText\">pformatText</a> :: <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>","name":"pformatText","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#v:pformatText"},{"display_html":"<a href=\"#v:pprint\">pprint</a> :: <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ()","name":"pprint","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#v:pprint"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint</a> a =&gt; <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint</a> (f a)) =&gt; <a href=\"#t:PPrint1\">PPrint1</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftPFormatPrec\">liftPFormatPrec</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; ([a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; f a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann</li><li><a href=\"#v:liftPFormatList\">liftPFormatList</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; ([a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; [f a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann</li></ul>","name":"PPrint1 liftPFormatList liftPFormatPrec $dmliftPFormatList","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint1"},{"display_html":"<a href=\"#v:pformatPrec1\">pformatPrec1</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint1\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint1</a> f, <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; f a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"pformatPrec1","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#v:pformatPrec1"},{"display_html":"<a href=\"#v:pformatList1\">pformatList1</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint1\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint1</a> f, <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint</a> a) =&gt; [f a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"pformatList1","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#v:pformatList1"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint</a> a =&gt; <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint1\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint1</a> (f a), <span class=\"keyword\">forall</span> a b. (<a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint</a> a, <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint</a> b) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint</a> (f a b)) =&gt; <a href=\"#t:PPrint2\">PPrint2</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftPFormatPrec2\">liftPFormatPrec2</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; ([a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; b -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; ([b] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; f a b -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann</li><li><a href=\"#v:liftPFormatList2\">liftPFormatList2</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; ([a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; b -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; ([b] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; [f a b] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann</li></ul>","name":"PPrint2 liftPFormatList2 liftPFormatPrec2 $dmliftPFormatList2","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint2"},{"display_html":"<a href=\"#v:pformatPrec2\">pformatPrec2</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint2\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint2</a> f, <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint</a> a, <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint</a> b) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; f a b -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"pformatPrec2","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#v:pformatPrec2"},{"display_html":"<a href=\"#v:pformatList2\">pformatList2</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint2\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint2</a> f, <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint</a> a, <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint</a> b) =&gt; [f a b] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"pformatList2","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#v:pformatList2"},{"display_html":"<a href=\"#v:genericPFormatPrec\">genericPFormatPrec</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:GPPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">GPPrint</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a)) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"genericPFormatPrec","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#v:genericPFormatPrec"},{"display_html":"<a href=\"#v:genericLiftPFormatPrec\">genericLiftPFormatPrec</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f, <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:GPPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">GPPrint</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f)) =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; ([a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; f a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"genericLiftPFormatPrec","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#v:genericLiftPFormatPrec"},{"display_html":"<a href=\"#v:genericPFormatList\">genericPFormatList</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:GPPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">GPPrint</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a)) =&gt; [a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"genericPFormatList","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#v:genericPFormatList"},{"display_html":"<a href=\"#v:genericLiftPFormatList\">genericLiftPFormatList</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f, <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:GPPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">GPPrint</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f)) =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; ([a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; [f a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"genericLiftPFormatList","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#v:genericLiftPFormatList"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:PPrintArgs\">PPrintArgs</a> arity a ann","name":"PPrintArgs PPrintArgs0 PPrintArgs1","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrintArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GPPrint\">GPPrint</a> arity (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:gpformatPrec\">gpformatPrec</a> :: <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrintArgs\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrintArgs</a> arity a ann -&gt; <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrintType\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrintType</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; f a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann</li><li><a href=\"#v:gpformatList\">gpformatList</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrintArgs\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrintArgs</a> arity a ann -&gt; [f a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann</li><li><a href=\"#v:gisNullary\">gisNullary</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrintArgs\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrintArgs</a> arity a ann -&gt; f a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li></ul>","name":"GPPrint gpformatPrec gpformatList gisNullary $dmgpformatList $dmgisNullary","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#t:GPPrint"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PPrintType\">PPrintType</a><ul class=\"subs\"><li>= <a href=\"#v:Rec\">Rec</a></li><li>| <a href=\"#v:Tup\">Tup</a></li><li>| <a href=\"#v:Pref\">Pref</a></li><li>| <a href=\"#v:Inf\">Inf</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li></ul>","name":"PPrintType Inf Rec Tup Pref","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrintType"},{"display_html":"<a href=\"#v:groupedEnclose\">groupedEnclose</a> :: <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"groupedEnclose","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#v:groupedEnclose"},{"display_html":"<a href=\"#v:condEnclose\">condEnclose</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"condEnclose","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#v:condEnclose"},{"display_html":"<a href=\"#v:pformatWithConstructor\">pformatWithConstructor</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; [<a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"pformatWithConstructor","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#v:pformatWithConstructor"},{"display_html":"<a href=\"#v:pformatWithConstructorNoAlign\">pformatWithConstructorNoAlign</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; [<a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"pformatWithConstructorNoAlign","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#v:pformatWithConstructorNoAlign"},{"display_html":"<a href=\"#v:viaShowsPrec\">viaShowsPrec</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:ShowS\" title=\"Prelude\">ShowS</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"viaShowsPrec","module":"Grisette.Internal.Core.Data.Class.PPrint","link":"Grisette-Internal-Core-Data-Class-PPrint.html#v:viaShowsPrec"},{"display_html":"module <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html\">Prettyprinter</a>","name":"","module":"Grisette.Internal.Core.Data.Class.PPrint","link":""},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToSym\">ToSym</a> a b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toSym\">toSym</a> :: a -&gt; b</li></ul>","name":"ToSym toSym","module":"Grisette.Internal.Core.Data.Class.ToSym","link":"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a b. <a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">ToSym</a> a b =&gt; <a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">ToSym</a> (f1 a) (f2 b)) =&gt; <a href=\"#t:ToSym1\">ToSym1</a> (f1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (f2 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftToSym\">liftToSym</a> :: (a -&gt; b) -&gt; f1 a -&gt; f2 b</li></ul>","name":"ToSym1 liftToSym","module":"Grisette.Internal.Core.Data.Class.ToSym","link":"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym1"},{"display_html":"<a href=\"#v:toSym1\">toSym1</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym1\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">ToSym1</a> f1 f2, <a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">ToSym</a> a b) =&gt; f1 a -&gt; f2 b","name":"toSym1","module":"Grisette.Internal.Core.Data.Class.ToSym","link":"Grisette-Internal-Core-Data-Class-ToSym.html#v:toSym1"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a b. <a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">ToSym</a> a b =&gt; <a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym1\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">ToSym1</a> (f1 a) (f2 b)) =&gt; <a href=\"#t:ToSym2\">ToSym2</a> (f1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (f2 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftToSym2\">liftToSym2</a> :: (a -&gt; b) -&gt; (c -&gt; d) -&gt; f1 a c -&gt; f2 b d</li></ul>","name":"ToSym2 liftToSym2","module":"Grisette.Internal.Core.Data.Class.ToSym","link":"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym2"},{"display_html":"<a href=\"#v:toSym2\">toSym2</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym2\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">ToSym2</a> f1 f2, <a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">ToSym</a> a b, <a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">ToSym</a> c d) =&gt; f1 a c -&gt; f2 b d","name":"toSym2","module":"Grisette.Internal.Core.Data.Class.ToSym","link":"Grisette-Internal-Core-Data-Class-ToSym.html#v:toSym2"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:ToSymArgs\">ToSymArgs</a> arity a b","name":"ToSymArgs ToSymArgs0 ToSymArgs1","module":"Grisette.Internal.Core.Data.Class.ToSym","link":"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSymArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GToSym\">GToSym</a> arity (f1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (f2 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:gtoSym\">gtoSym</a> :: <a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSymArgs\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">ToSymArgs</a> arity a b -&gt; f1 a -&gt; f2 b</li></ul>","name":"GToSym gtoSym","module":"Grisette.Internal.Core.Data.Class.ToSym","link":"Grisette-Internal-Core-Data-Class-ToSym.html#t:GToSym"},{"display_html":"<a href=\"#v:genericToSym\">genericToSym</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> b, <a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:GToSym\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">GToSym</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> b)) =&gt; a -&gt; b","name":"genericToSym","module":"Grisette.Internal.Core.Data.Class.ToSym","link":"Grisette-Internal-Core-Data-Class-ToSym.html#v:genericToSym"},{"display_html":"<a href=\"#v:genericLiftToSym\">genericLiftToSym</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f1, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f2, <a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:GToSym\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">GToSym</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f1) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f2)) =&gt; (a -&gt; b) -&gt; f1 a -&gt; f2 b","name":"genericLiftToSym","module":"Grisette.Internal.Core.Data.Class.ToSym","link":"Grisette-Internal-Core-Data-Class-ToSym.html#v:genericLiftToSym"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ConSymConversion\">ConSymConversion</a> conType symType t = (<a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon</a> t conType, <a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">ToSym</a> conType t, <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon</a> symType t, <a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">ToSym</a> t symType)","name":"ConSymConversion","module":"Grisette.Internal.Unified.BaseConstraint","link":"Grisette-Internal-Unified-BaseConstraint.html#t:ConSymConversion"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MergingStrategy\">MergingStrategy</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:SimpleStrategy\">SimpleStrategy</a> :: <span class=\"keyword\">forall</span> a. (<a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; a -&gt; a -&gt; a) -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a</li><li><a href=\"#v:SortedStrategy\">SortedStrategy</a> :: <span class=\"keyword\">forall</span> idx a. <a href=\"Grisette-Core.html#t:MergingIndex\" title=\"Grisette.Core\">MergingIndex</a> idx =&gt; (a -&gt; idx) -&gt; (idx -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a) -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a</li><li><a href=\"#v:NoStrategy\">NoStrategy</a> :: <span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a</li></ul>","name":"MergingStrategy NoStrategy SimpleStrategy SortedStrategy","module":"Grisette.Internal.Core.Data.Class.Mergeable","link":"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Mergeable\">Mergeable</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:rootStrategy\">rootStrategy</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a</li><li><a href=\"#v:sortIndices\">sortIndices</a> :: a -&gt; [<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:DynamicSortedIdx\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">DynamicSortedIdx</a>]</li></ul>","name":"Mergeable rootStrategy sortIndices $dmsortIndices","module":"Grisette.Internal.Core.Data.Class.Mergeable","link":"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (u a)) =&gt; <a href=\"#t:Mergeable1\">Mergeable1</a> (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftRootStrategy\">liftRootStrategy</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> (u a)</li></ul>","name":"Mergeable1 liftRootStrategy","module":"Grisette.Internal.Core.Data.Class.Mergeable","link":"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable1"},{"display_html":"<a href=\"#v:rootStrategy1\">rootStrategy1</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable1\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable1</a> u) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> (u a)","name":"rootStrategy1","module":"Grisette.Internal.Core.Data.Class.Mergeable","link":"Grisette-Internal-Core-Data-Class-Mergeable.html#v:rootStrategy1"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable1\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable1</a> (u a)) =&gt; <a href=\"#t:Mergeable2\">Mergeable2</a> (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftRootStrategy2\">liftRootStrategy2</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> b -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> (u a b)</li></ul>","name":"Mergeable2 liftRootStrategy2","module":"Grisette.Internal.Core.Data.Class.Mergeable","link":"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable2"},{"display_html":"<a href=\"#v:rootStrategy2\">rootStrategy2</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable2\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable2</a> u) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> (u a b)","name":"rootStrategy2","module":"Grisette.Internal.Core.Data.Class.Mergeable","link":"Grisette-Internal-Core-Data-Class-Mergeable.html#v:rootStrategy2"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable2\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable2</a> (u a)) =&gt; <a href=\"#t:Mergeable3\">Mergeable3</a> (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftRootStrategy3\">liftRootStrategy3</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> b -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> c -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> (u a b c)</li></ul>","name":"Mergeable3 liftRootStrategy3","module":"Grisette.Internal.Core.Data.Class.Mergeable","link":"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable3"},{"display_html":"<a href=\"#v:rootStrategy3\">rootStrategy3</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable3\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable3</a> u) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> (u a b c)","name":"rootStrategy3","module":"Grisette.Internal.Core.Data.Class.Mergeable","link":"Grisette-Internal-Core-Data-Class-Mergeable.html#v:rootStrategy3"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:MergeableArgs\">MergeableArgs</a> arity a","name":"MergeableArgs MergeableArgs0 MergeableArgs1","module":"Grisette.Internal.Core.Data.Class.Mergeable","link":"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergeableArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GMergeable\">GMergeable</a> arity (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:grootStrategy\">grootStrategy</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergeableArgs\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergeableArgs</a> arity a -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> (f a)</li></ul>","name":"GMergeable grootStrategy","module":"Grisette.Internal.Core.Data.Class.Mergeable","link":"Grisette-Internal-Core-Data-Class-Mergeable.html#t:GMergeable"},{"display_html":"<a href=\"#v:genericRootStrategy\">genericRootStrategy</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:GMergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">GMergeable</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a)) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a","name":"genericRootStrategy","module":"Grisette.Internal.Core.Data.Class.Mergeable","link":"Grisette-Internal-Core-Data-Class-Mergeable.html#v:genericRootStrategy"},{"display_html":"<a href=\"#v:genericLiftRootStrategy\">genericLiftRootStrategy</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:GMergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">GMergeable</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f)) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> (f a)","name":"genericLiftRootStrategy","module":"Grisette.Internal.Core.Data.Class.Mergeable","link":"Grisette-Internal-Core-Data-Class-Mergeable.html#v:genericLiftRootStrategy"},{"display_html":"<a href=\"#v:wrapStrategy\">wrapStrategy</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a -&gt; (a -&gt; b) -&gt; (b -&gt; a) -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> b","name":"wrapStrategy","module":"Grisette.Internal.Core.Data.Class.Mergeable","link":"Grisette-Internal-Core-Data-Class-Mergeable.html#v:wrapStrategy"},{"display_html":"<a href=\"#v:product2Strategy\">product2Strategy</a> :: (a -&gt; b -&gt; r) -&gt; (r -&gt; (a, b)) -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> b -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> r","name":"product2Strategy","module":"Grisette.Internal.Core.Data.Class.Mergeable","link":"Grisette-Internal-Core-Data-Class-Mergeable.html#v:product2Strategy"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DynamicSortedIdx\">DynamicSortedIdx</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:DynamicSortedIdx\">DynamicSortedIdx</a> :: <span class=\"keyword\">forall</span> idx. <a href=\"Grisette-Core.html#t:MergingIndex\" title=\"Grisette.Core\">MergingIndex</a> idx =&gt; idx -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:DynamicSortedIdx\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">DynamicSortedIdx</a></li></ul>","name":"DynamicSortedIdx DynamicSortedIdx","module":"Grisette.Internal.Core.Data.Class.Mergeable","link":"Grisette-Internal-Core-Data-Class-Mergeable.html#t:DynamicSortedIdx"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:StrategyList\">StrategyList</a> (container :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:StrategyList\">StrategyList</a> :: <span class=\"keyword\">forall</span> a (container :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). container [<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:DynamicSortedIdx\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">DynamicSortedIdx</a>] -&gt; container (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a) -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:StrategyList\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">StrategyList</a> container</li></ul>","name":"StrategyList StrategyList","module":"Grisette.Internal.Core.Data.Class.Mergeable","link":"Grisette-Internal-Core-Data-Class-Mergeable.html#t:StrategyList"},{"display_html":"<a href=\"#v:buildStrategyList\">buildStrategyList</a> :: <span class=\"keyword\">forall</span> a container. <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> container =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a -&gt; container a -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:StrategyList\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">StrategyList</a> container","name":"buildStrategyList","module":"Grisette.Internal.Core.Data.Class.Mergeable","link":"Grisette-Internal-Core-Data-Class-Mergeable.html#v:buildStrategyList"},{"display_html":"<a href=\"#v:resolveStrategy\">resolveStrategy</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> x -&gt; x -&gt; ([<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:DynamicSortedIdx\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">DynamicSortedIdx</a>], <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> x)","name":"resolveStrategy","module":"Grisette.Internal.Core.Data.Class.Mergeable","link":"Grisette-Internal-Core-Data-Class-Mergeable.html#v:resolveStrategy"},{"display_html":"<a href=\"#v:resolveStrategy-39-\">resolveStrategy'</a> :: x -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> x -&gt; ([<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:DynamicSortedIdx\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">DynamicSortedIdx</a>], <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> x)","name":"resolveStrategy'","module":"Grisette.Internal.Core.Data.Class.Mergeable","link":"Grisette-Internal-Core-Data-Class-Mergeable.html#v:resolveStrategy-39-"},{"display_html":"<a href=\"#v:resolveMergeable1\">resolveMergeable1</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable1\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable1</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (f a) =&gt; r) -&gt; r","name":"resolveMergeable1","module":"Grisette.Internal.Core.Data.Class.Mergeable","link":"Grisette-Internal-Core-Data-Class-Mergeable.html#v:resolveMergeable1"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UnionBase\">UnionBase</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:UnionSingle\">UnionSingle</a> :: <span class=\"keyword\">forall</span> a. a -&gt; <a href=\"Grisette-Internal-Core-Data-UnionBase.html#t:UnionBase\" title=\"Grisette.Internal.Core.Data.UnionBase\">UnionBase</a> a</li><li><a href=\"#v:UnionIf\">UnionIf</a> :: <span class=\"keyword\">forall</span> a. a -&gt; !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; !<a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Internal-Core-Data-UnionBase.html#t:UnionBase\" title=\"Grisette.Internal.Core.Data.UnionBase\">UnionBase</a> a -&gt; <a href=\"Grisette-Internal-Core-Data-UnionBase.html#t:UnionBase\" title=\"Grisette.Internal.Core.Data.UnionBase\">UnionBase</a> a -&gt; <a href=\"Grisette-Internal-Core-Data-UnionBase.html#t:UnionBase\" title=\"Grisette.Internal.Core.Data.UnionBase\">UnionBase</a> a</li></ul>","name":"UnionBase UnionIf UnionSingle","module":"Grisette.Internal.Core.Data.UnionBase","link":"Grisette-Internal-Core-Data-UnionBase.html#t:UnionBase"},{"display_html":"<a href=\"#v:ifWithLeftMost\">ifWithLeftMost</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Internal-Core-Data-UnionBase.html#t:UnionBase\" title=\"Grisette.Internal.Core.Data.UnionBase\">UnionBase</a> a -&gt; <a href=\"Grisette-Internal-Core-Data-UnionBase.html#t:UnionBase\" title=\"Grisette.Internal.Core.Data.UnionBase\">UnionBase</a> a -&gt; <a href=\"Grisette-Internal-Core-Data-UnionBase.html#t:UnionBase\" title=\"Grisette.Internal.Core.Data.UnionBase\">UnionBase</a> a","name":"ifWithLeftMost","module":"Grisette.Internal.Core.Data.UnionBase","link":"Grisette-Internal-Core-Data-UnionBase.html#v:ifWithLeftMost"},{"display_html":"<a href=\"#v:ifWithStrategy\">ifWithStrategy</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Internal-Core-Data-UnionBase.html#t:UnionBase\" title=\"Grisette.Internal.Core.Data.UnionBase\">UnionBase</a> a -&gt; <a href=\"Grisette-Internal-Core-Data-UnionBase.html#t:UnionBase\" title=\"Grisette.Internal.Core.Data.UnionBase\">UnionBase</a> a -&gt; <a href=\"Grisette-Internal-Core-Data-UnionBase.html#t:UnionBase\" title=\"Grisette.Internal.Core.Data.UnionBase\">UnionBase</a> a","name":"ifWithStrategy","module":"Grisette.Internal.Core.Data.UnionBase","link":"Grisette-Internal-Core-Data-UnionBase.html#v:ifWithStrategy"},{"display_html":"<a href=\"#v:fullReconstruct\">fullReconstruct</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a -&gt; <a href=\"Grisette-Internal-Core-Data-UnionBase.html#t:UnionBase\" title=\"Grisette.Internal.Core.Data.UnionBase\">UnionBase</a> a -&gt; <a href=\"Grisette-Internal-Core-Data-UnionBase.html#t:UnionBase\" title=\"Grisette.Internal.Core.Data.UnionBase\">UnionBase</a> a","name":"fullReconstruct","module":"Grisette.Internal.Core.Data.UnionBase","link":"Grisette-Internal-Core-Data-UnionBase.html#v:fullReconstruct"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:TryMerge\">TryMerge</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:tryMergeWithStrategy\">tryMergeWithStrategy</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a -&gt; m a -&gt; m a</li></ul>","name":"TryMerge tryMergeWithStrategy","module":"Grisette.Internal.Core.Data.Class.TryMerge","link":"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge"},{"display_html":"<a href=\"#v:tryMerge\">tryMerge</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; m a -&gt; m a","name":"tryMerge","module":"Grisette.Internal.Core.Data.Class.TryMerge","link":"Grisette-Internal-Core-Data-Class-TryMerge.html#v:tryMerge"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MonadTryMerge\">MonadTryMerge</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) = (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> f)","name":"MonadTryMerge","module":"Grisette.Internal.Core.Data.Class.TryMerge","link":"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge"},{"display_html":"<a href=\"#v:mrgSingle\">mrgSingle</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; a -&gt; m a","name":"mrgSingle","module":"Grisette.Internal.Core.Data.Class.TryMerge","link":"Grisette-Internal-Core-Data-Class-TryMerge.html#v:mrgSingle"},{"display_html":"<a href=\"#v:mrgSingleWithStrategy\">mrgSingleWithStrategy</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a -&gt; a -&gt; m a","name":"mrgSingleWithStrategy","module":"Grisette.Internal.Core.Data.Class.TryMerge","link":"Grisette-Internal-Core-Data-Class-TryMerge.html#v:mrgSingleWithStrategy"},{"display_html":"<a href=\"#v:mrgToSym\">mrgToSym</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">ToSym</a> a b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m) =&gt; a -&gt; m b","name":"mrgToSym","module":"Grisette.Internal.Core.Data.Class.TryMerge","link":"Grisette-Internal-Core-Data-Class-TryMerge.html#v:mrgToSym"},{"display_html":"<a href=\"#v:toUnionSym\">toUnionSym</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">ToSym</a> a b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m) =&gt; a -&gt; m b","name":"toUnionSym","module":"Grisette.Internal.Core.Data.Class.TryMerge","link":"Grisette-Internal-Core-Data-Class-TryMerge.html#v:toUnionSym"},{"display_html":"<a href=\"#v:makeSmartCtorWith\">makeSmartCtorWith</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>) -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeSmartCtorWith","module":"Grisette.Internal.TH.Ctor.SmartConstructor","link":"Grisette-Internal-TH-Ctor-SmartConstructor.html#v:makeSmartCtorWith"},{"display_html":"<a href=\"#v:makePrefixedSmartCtor\">makePrefixedSmartCtor</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makePrefixedSmartCtor","module":"Grisette.Internal.TH.Ctor.SmartConstructor","link":"Grisette-Internal-TH-Ctor-SmartConstructor.html#v:makePrefixedSmartCtor"},{"display_html":"<a href=\"#v:makeNamedSmartCtor\">makeNamedSmartCtor</a> :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeNamedSmartCtor","module":"Grisette.Internal.TH.Ctor.SmartConstructor","link":"Grisette-Internal-TH-Ctor-SmartConstructor.html#v:makeNamedSmartCtor"},{"display_html":"<a href=\"#v:makeSmartCtor\">makeSmartCtor</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeSmartCtor","module":"Grisette.Internal.TH.Ctor.SmartConstructor","link":"Grisette-Internal-TH-Ctor-SmartConstructor.html#v:makeSmartCtor"},{"display_html":"<a href=\"#v:makeGrisetteBasicADT\">makeGrisetteBasicADT</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeGrisetteBasicADT","module":"Grisette.Internal.TH.ADT","link":"Grisette-Internal-TH-ADT.html#v:makeGrisetteBasicADT"},{"display_html":"<a href=\"#v:makeGrisetteBasicADT1\">makeGrisetteBasicADT1</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeGrisetteBasicADT1","module":"Grisette.Internal.TH.ADT","link":"Grisette-Internal-TH-ADT.html#v:makeGrisetteBasicADT1"},{"display_html":"<a href=\"#v:makeGrisetteBasicADT2\">makeGrisetteBasicADT2</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeGrisetteBasicADT2","module":"Grisette.Internal.TH.ADT","link":"Grisette-Internal-TH-ADT.html#v:makeGrisetteBasicADT2"},{"display_html":"<a href=\"#v:makeGrisetteADT\">makeGrisetteADT</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeGrisetteADT","module":"Grisette.Internal.TH.ADT","link":"Grisette-Internal-TH-ADT.html#v:makeGrisetteADT"},{"display_html":"<a href=\"#v:makeGrisetteADT1\">makeGrisetteADT1</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeGrisetteADT1","module":"Grisette.Internal.TH.ADT","link":"Grisette-Internal-TH-ADT.html#v:makeGrisetteADT1"},{"display_html":"<a href=\"#v:makeGrisetteADT2\">makeGrisetteADT2</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeGrisetteADT2","module":"Grisette.Internal.TH.ADT","link":"Grisette-Internal-TH-ADT.html#v:makeGrisetteADT2"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a =&gt; <a href=\"#t:SimpleMergeable\">SimpleMergeable</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:mrgIte\">mrgIte</a> :: <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; a -&gt; a -&gt; a</li></ul>","name":"SimpleMergeable mrgIte","module":"Grisette.Internal.Core.Data.Class.SimpleMergeable","link":"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable1\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable1</a> u, <span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable</a> a =&gt; <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable</a> (u a)) =&gt; <a href=\"#t:SimpleMergeable1\">SimpleMergeable1</a> (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftMrgIte\">liftMrgIte</a> :: (<a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; a -&gt; a -&gt; a) -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; u a -&gt; u a -&gt; u a</li></ul>","name":"SimpleMergeable1 liftMrgIte","module":"Grisette.Internal.Core.Data.Class.SimpleMergeable","link":"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable1"},{"display_html":"<a href=\"#v:mrgIte1\">mrgIte1</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable1\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable1</a> u, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; u a -&gt; u a -&gt; u a","name":"mrgIte1","module":"Grisette.Internal.Core.Data.Class.SimpleMergeable","link":"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#v:mrgIte1"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable2\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable2</a> u, <span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable</a> a =&gt; <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable1\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable1</a> (u a)) =&gt; <a href=\"#t:SimpleMergeable2\">SimpleMergeable2</a> (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftMrgIte2\">liftMrgIte2</a> :: (<a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; a -&gt; a -&gt; a) -&gt; (<a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; b -&gt; b -&gt; b) -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; u a b -&gt; u a b -&gt; u a b</li></ul>","name":"SimpleMergeable2 liftMrgIte2","module":"Grisette.Internal.Core.Data.Class.SimpleMergeable","link":"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable2"},{"display_html":"<a href=\"#v:mrgIte2\">mrgIte2</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable2\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable2</a> u, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable</a> b) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; u a b -&gt; u a b -&gt; u a b","name":"mrgIte2","module":"Grisette.Internal.Core.Data.Class.SimpleMergeable","link":"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#v:mrgIte2"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:SimpleMergeableArgs\">SimpleMergeableArgs</a> arity a","name":"SimpleMergeableArgs SimpleMergeableArgs0 SimpleMergeableArgs1","module":"Grisette.Internal.Core.Data.Class.SimpleMergeable","link":"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeableArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GSimpleMergeable\">GSimpleMergeable</a> arity (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:gmrgIte\">gmrgIte</a> :: <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeableArgs\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeableArgs</a> arity a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; f a -&gt; f a -&gt; f a</li></ul>","name":"GSimpleMergeable gmrgIte","module":"Grisette.Internal.Core.Data.Class.SimpleMergeable","link":"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:GSimpleMergeable"},{"display_html":"<a href=\"#v:genericMrgIte\">genericMrgIte</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:GSimpleMergeable\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">GSimpleMergeable</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a)) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; a -&gt; a -&gt; a","name":"genericMrgIte","module":"Grisette.Internal.Core.Data.Class.SimpleMergeable","link":"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#v:genericMrgIte"},{"display_html":"<a href=\"#v:genericLiftMrgIte\">genericLiftMrgIte</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:GSimpleMergeable\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">GSimpleMergeable</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f)) =&gt; (<a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; a -&gt; a -&gt; a) -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; f a -&gt; f a -&gt; f a","name":"genericLiftMrgIte","module":"Grisette.Internal.Core.Data.Class.SimpleMergeable","link":"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#v:genericLiftMrgIte"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable1\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable1</a> u, <span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a =&gt; <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable</a> (u a), <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> u) =&gt; <a href=\"#t:SymBranching\">SymBranching</a> (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:mrgIfWithStrategy\">mrgIfWithStrategy</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; u a -&gt; u a -&gt; u a</li><li><a href=\"#v:mrgIfPropagatedStrategy\">mrgIfPropagatedStrategy</a> :: <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; u a -&gt; u a -&gt; u a</li></ul>","name":"SymBranching mrgIfPropagatedStrategy mrgIfWithStrategy","module":"Grisette.Internal.Core.Data.Class.SimpleMergeable","link":"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching"},{"display_html":"<a href=\"#v:mrgIf\">mrgIf</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; u a -&gt; u a -&gt; u a","name":"mrgIf","module":"Grisette.Internal.Core.Data.Class.SimpleMergeable","link":"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#v:mrgIf"},{"display_html":"<a href=\"#v:mergeWithStrategy\">mergeWithStrategy</a> :: <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> m =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a -&gt; m a -&gt; m a","name":"mergeWithStrategy","module":"Grisette.Internal.Core.Data.Class.SimpleMergeable","link":"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#v:mergeWithStrategy"},{"display_html":"<a href=\"#v:merge\">merge</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; m a -&gt; m a","name":"merge","module":"Grisette.Internal.Core.Data.Class.SimpleMergeable","link":"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#v:merge"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MonadUnion\">MonadUnion</a> (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) = (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u)","name":"MonadUnion","module":"Grisette.Internal.Core.Control.Monad.Class.Union","link":"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; <a href=\"#t:SafeLogBase\">SafeLogBase</a> e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:safeLogBase\">safeLogBase</a> :: a -&gt; a -&gt; m a</li></ul>","name":"SafeLogBase safeLogBase $dmsafeLogBase","module":"Grisette.Internal.Core.Data.Class.SafeLogBase","link":"Grisette-Internal-Core-Data-Class-SafeLogBase.html#t:SafeLogBase"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:LogBaseOr\">LogBaseOr</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:logBaseOr\">logBaseOr</a> :: a -&gt; a -&gt; a -&gt; a</li></ul>","name":"LogBaseOr logBaseOr","module":"Grisette.Internal.Core.Data.Class.SafeLogBase","link":"Grisette-Internal-Core-Data-Class-SafeLogBase.html#t:LogBaseOr"},{"display_html":"<a href=\"#v:logBaseOrZero\">logBaseOrZero</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeLogBase.html#t:LogBaseOr\" title=\"Grisette.Internal.Core.Data.Class.SafeLogBase\">LogBaseOr</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; a -&gt; a -&gt; a","name":"logBaseOrZero","module":"Grisette.Internal.Core.Data.Class.SafeLogBase","link":"Grisette-Internal-Core-Data-Class-SafeLogBase.html#v:logBaseOrZero"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; <a href=\"#t:SafeFdiv\">SafeFdiv</a> e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:safeFdiv\">safeFdiv</a> :: a -&gt; a -&gt; m a</li><li><a href=\"#v:safeRecip\">safeRecip</a> :: a -&gt; m a</li></ul>","name":"SafeFdiv safeFdiv safeRecip $dmsafeRecip","module":"Grisette.Internal.Core.Data.Class.SafeFdiv","link":"Grisette-Internal-Core-Data-Class-SafeFdiv.html#t:SafeFdiv"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:FdivOr\">FdivOr</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fdivOr\">fdivOr</a> :: a -&gt; a -&gt; a -&gt; a</li><li><a href=\"#v:recipOr\">recipOr</a> :: a -&gt; a -&gt; a</li></ul>","name":"FdivOr fdivOr recipOr","module":"Grisette.Internal.Core.Data.Class.SafeFdiv","link":"Grisette-Internal-Core-Data-Class-SafeFdiv.html#t:FdivOr"},{"display_html":"<a href=\"#v:fdivOrZero\">fdivOrZero</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeFdiv.html#t:FdivOr\" title=\"Grisette.Internal.Core.Data.Class.SafeFdiv\">FdivOr</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; a -&gt; a -&gt; a","name":"fdivOrZero","module":"Grisette.Internal.Core.Data.Class.SafeFdiv","link":"Grisette-Internal-Core-Data-Class-SafeFdiv.html#v:fdivOrZero"},{"display_html":"<a href=\"#v:recipOrZero\">recipOrZero</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeFdiv.html#t:FdivOr\" title=\"Grisette.Internal.Core.Data.Class.SafeFdiv\">FdivOr</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; a -&gt; a","name":"recipOrZero","module":"Grisette.Internal.Core.Data.Class.SafeFdiv","link":"Grisette-Internal-Core-Data-Class-SafeFdiv.html#v:recipOrZero"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:TransformError\">TransformError</a> from to <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:transformError\">transformError</a> :: from -&gt; to</li></ul>","name":"TransformError transformError","module":"Grisette.Internal.Core.Data.Class.Error","link":"Grisette-Internal-Core-Data-Class-Error.html#t:TransformError"},{"display_html":"<a href=\"#v:symAssertWith\">symAssertWith</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e erm, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> erm) =&gt; e -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; erm ()","name":"symAssertWith","module":"Grisette.Internal.Core.Data.Class.Error","link":"Grisette-Internal-Core-Data-Class-Error.html#v:symAssertWith"},{"display_html":"<a href=\"#v:symAssertTransformableError\">symAssertTransformableError</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> to, <a href=\"Grisette-Internal-Core-Data-Class-Error.html#t:TransformError\" title=\"Grisette.Internal.Core.Data.Class.Error\">TransformError</a> from to, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> to erm, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> erm) =&gt; from -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; erm ()","name":"symAssertTransformableError","module":"Grisette.Internal.Core.Data.Class.Error","link":"Grisette-Internal-Core-Data-Class-Error.html#v:symAssertTransformableError"},{"display_html":"<a href=\"#v:symThrowTransformableError\">symThrowTransformableError</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> to, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Error.html#t:TransformError\" title=\"Grisette.Internal.Core.Data.Class.Error\">TransformError</a> from to, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> to erm, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> erm) =&gt; from -&gt; erm a","name":"symThrowTransformableError","module":"Grisette.Internal.Core.Data.Class.Error","link":"Grisette-Internal-Core-Data-Class-Error.html#v:symThrowTransformableError"},{"display_html":"<a href=\"#v:symAssert\">symAssert</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Error.html#t:TransformError\" title=\"Grisette.Internal.Core.Data.Class.Error\">TransformError</a> <a href=\"Grisette-Internal-Core-Control-Exception.html#t:AssertionError\" title=\"Grisette.Internal.Core.Control.Exception\">AssertionError</a> to, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> to, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> to erm, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> erm) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; erm ()","name":"symAssert","module":"Grisette.Internal.Core.Data.Class.Error","link":"Grisette-Internal-Core-Data-Class-Error.html#v:symAssert"},{"display_html":"<a href=\"#v:symAssume\">symAssume</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Error.html#t:TransformError\" title=\"Grisette.Internal.Core.Data.Class.Error\">TransformError</a> <a href=\"Grisette-Internal-Core-Control-Exception.html#t:VerificationConditions\" title=\"Grisette.Internal.Core.Control.Exception\">VerificationConditions</a> to, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> to, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> to erm, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> erm) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; erm ()","name":"symAssume","module":"Grisette.Internal.Core.Data.Class.Error","link":"Grisette-Internal-Core-Data-Class-Error.html#v:symAssume"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ExtractSym\">ExtractSym</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:extractSym\">extractSym</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:AnySymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">AnySymbolSet</a></li><li><a href=\"#v:extractSymMaybe\">extractSymMaybe</a> :: <span class=\"keyword\">forall</span> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)</li></ul>","name":"ExtractSym extractSymMaybe extractSym $dmextractSym","module":"Grisette.Internal.Core.Data.Class.ExtractSym","link":"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> a =&gt; <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> (f a)) =&gt; <a href=\"#t:ExtractSym1\">ExtractSym1</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftExtractSymMaybe\">liftExtractSymMaybe</a> :: <span class=\"keyword\">forall</span> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)) -&gt; f a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)</li></ul>","name":"ExtractSym1 liftExtractSymMaybe","module":"Grisette.Internal.Core.Data.Class.ExtractSym","link":"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym1"},{"display_html":"<a href=\"#v:extractSymMaybe1\">extractSymMaybe1</a> :: <span class=\"keyword\">forall</span> f a (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). (<a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym1\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym1</a> f, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; f a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)","name":"extractSymMaybe1","module":"Grisette.Internal.Core.Data.Class.ExtractSym","link":"Grisette-Internal-Core-Data-Class-ExtractSym.html#v:extractSymMaybe1"},{"display_html":"<a href=\"#v:extractSym1\">extractSym1</a> :: <span class=\"keyword\">forall</span> f a (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). (<a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym1\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym1</a> f, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; f a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd","name":"extractSym1","module":"Grisette.Internal.Core.Data.Class.ExtractSym","link":"Grisette-Internal-Core-Data-Class-ExtractSym.html#v:extractSym1"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> a =&gt; <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym1\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym1</a> (f a)) =&gt; <a href=\"#t:ExtractSym2\">ExtractSym2</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftExtractSymMaybe2\">liftExtractSymMaybe2</a> :: <span class=\"keyword\">forall</span> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a b. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)) -&gt; (b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)) -&gt; f a b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)</li></ul>","name":"ExtractSym2 liftExtractSymMaybe2","module":"Grisette.Internal.Core.Data.Class.ExtractSym","link":"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym2"},{"display_html":"<a href=\"#v:extractSymMaybe2\">extractSymMaybe2</a> :: <span class=\"keyword\">forall</span> f a b (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). (<a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym2\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym2</a> f, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> b, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; f a b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)","name":"extractSymMaybe2","module":"Grisette.Internal.Core.Data.Class.ExtractSym","link":"Grisette-Internal-Core-Data-Class-ExtractSym.html#v:extractSymMaybe2"},{"display_html":"<a href=\"#v:extractSym2\">extractSym2</a> :: <span class=\"keyword\">forall</span> f a b (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). (<a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym2\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym2</a> f, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> b, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; f a b -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd","name":"extractSym2","module":"Grisette.Internal.Core.Data.Class.ExtractSym","link":"Grisette-Internal-Core-Data-Class-ExtractSym.html#v:extractSym2"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:ExtractSymArgs\">ExtractSymArgs</a> arity (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a","name":"ExtractSymArgs ExtractSymArgs0 ExtractSymArgs1","module":"Grisette.Internal.Core.Data.Class.ExtractSym","link":"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSymArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GExtractSym\">GExtractSym</a> arity (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:gextractSymMaybe\">gextractSymMaybe</a> :: <span class=\"keyword\">forall</span> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd =&gt; <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSymArgs\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSymArgs</a> arity knd a -&gt; f a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)</li></ul>","name":"GExtractSym gextractSymMaybe","module":"Grisette.Internal.Core.Data.Class.ExtractSym","link":"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:GExtractSym"},{"display_html":"<a href=\"#v:genericExtractSymMaybe\">genericExtractSymMaybe</a> :: <span class=\"keyword\">forall</span> a (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:GExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">GExtractSym</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)","name":"genericExtractSymMaybe","module":"Grisette.Internal.Core.Data.Class.ExtractSym","link":"Grisette-Internal-Core-Data-Class-ExtractSym.html#v:genericExtractSymMaybe"},{"display_html":"<a href=\"#v:genericLiftExtractSymMaybe\">genericLiftExtractSymMaybe</a> :: <span class=\"keyword\">forall</span> f (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:GExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">GExtractSym</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)) -&gt; f a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)","name":"genericLiftExtractSymMaybe","module":"Grisette.Internal.Core.Data.Class.ExtractSym","link":"Grisette-Internal-Core-Data-Class-ExtractSym.html#v:genericLiftExtractSymMaybe"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SolvingFailure\">SolvingFailure</a><ul class=\"subs\"><li>= <a href=\"#v:Unsat\">Unsat</a></li><li>| <a href=\"#v:Unk\">Unk</a></li><li>| <a href=\"#v:ResultNumLimitReached\">ResultNumLimitReached</a></li><li>| <a href=\"#v:SolvingError\">SolvingError</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li>| <a href=\"#v:Terminated\">Terminated</a></li></ul>","name":"SolvingFailure Unsat Unk Terminated SolvingError ResultNumLimitReached","module":"Grisette.Internal.Core.Data.Class.Solver","link":"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"#t:MonadicSolver\">MonadicSolver</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:monadicSolverPush\">monadicSolverPush</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; m ()</li><li><a href=\"#v:monadicSolverPop\">monadicSolverPop</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; m ()</li><li><a href=\"#v:monadicSolverResetAssertions\">monadicSolverResetAssertions</a> :: m ()</li><li><a href=\"#v:monadicSolverAssert\">monadicSolverAssert</a> :: <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; m ()</li><li><a href=\"#v:monadicSolverCheckSat\">monadicSolverCheckSat</a> :: m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a> <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>)</li></ul>","name":"MonadicSolver monadicSolverAssert monadicSolverCheckSat monadicSolverPop monadicSolverPush monadicSolverResetAssertions","module":"Grisette.Internal.Core.Data.Class.Solver","link":"Grisette-Internal-Core-Data-Class-Solver.html#t:MonadicSolver"},{"display_html":"<a href=\"#v:monadicSolverSolve\">monadicSolverSolve</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:MonadicSolver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">MonadicSolver</a> m =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a> <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>)","name":"monadicSolverSolve","module":"Grisette.Internal.Core.Data.Class.Solver","link":"Grisette-Internal-Core-Data-Class-Solver.html#v:monadicSolverSolve"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SolverCommand\">SolverCommand</a><ul class=\"subs\"><li>= <a href=\"#v:SolverAssert\">SolverAssert</a> !<a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li>| <a href=\"#v:SolverCheckSat\">SolverCheckSat</a></li><li>| <a href=\"#v:SolverPush\">SolverPush</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li>| <a href=\"#v:SolverPop\">SolverPop</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li>| <a href=\"#v:SolverResetAssertions\">SolverResetAssertions</a></li><li>| <a href=\"#v:SolverTerminate\">SolverTerminate</a></li></ul>","name":"SolverCommand SolverAssert SolverCheckSat SolverPop SolverPush SolverResetAssertions SolverTerminate","module":"Grisette.Internal.Core.Data.Class.Solver","link":"Grisette-Internal-Core-Data-Class-Solver.html#t:SolverCommand"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:Solver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">Solver</a> handle =&gt; <a href=\"#t:ConfigurableSolver\">ConfigurableSolver</a> config handle | config -&gt; handle <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:newSolver\">newSolver</a> :: config -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> handle</li></ul>","name":"ConfigurableSolver newSolver","module":"Grisette.Internal.Core.Data.Class.Solver","link":"Grisette-Internal-Core-Data-Class-Solver.html#t:ConfigurableSolver"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Solver\">Solver</a> handle <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:solverRunCommand\">solverRunCommand</a> :: (handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a> a)) -&gt; handle -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolverCommand\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolverCommand</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a> a)</li><li><a href=\"#v:solverAssert\">solverAssert</a> :: handle -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a> ())</li><li><a href=\"#v:solverCheckSat\">solverCheckSat</a> :: handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a> <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>)</li><li><a href=\"#v:solverPush\">solverPush</a> :: handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a> ())</li><li><a href=\"#v:solverPop\">solverPop</a> :: handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a> ())</li><li><a href=\"#v:solverResetAssertions\">solverResetAssertions</a> :: handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a> ())</li><li><a href=\"#v:solverTerminate\">solverTerminate</a> :: handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ()</li><li><a href=\"#v:solverForceTerminate\">solverForceTerminate</a> :: handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ()</li></ul>","name":"Solver solverCheckSat solverForceTerminate solverRunCommand solverTerminate solverResetAssertions solverAssert solverPush solverPop $dmsolverResetAssertions $dmsolverAssert $dmsolverPush $dmsolverPop","module":"Grisette.Internal.Core.Data.Class.Solver","link":"Grisette-Internal-Core-Data-Class-Solver.html#t:Solver"},{"display_html":"<a href=\"#v:solverSolve\">solverSolve</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:Solver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">Solver</a> handle =&gt; handle -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a> <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>)","name":"solverSolve","module":"Grisette.Internal.Core.Data.Class.Solver","link":"Grisette-Internal-Core-Data-Class-Solver.html#v:solverSolve"},{"display_html":"<a href=\"#v:withSolver\">withSolver</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:ConfigurableSolver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">ConfigurableSolver</a> config handle =&gt; config -&gt; (handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> a) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> a","name":"withSolver","module":"Grisette.Internal.Core.Data.Class.Solver","link":"Grisette-Internal-Core-Data-Class-Solver.html#v:withSolver"},{"display_html":"<a href=\"#v:solve\">solve</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:ConfigurableSolver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">ConfigurableSolver</a> config handle =&gt; config -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a> <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>)","name":"solve","module":"Grisette.Internal.Core.Data.Class.Solver","link":"Grisette-Internal-Core-Data-Class-Solver.html#v:solve"},{"display_html":"<a href=\"#v:solverSolveMulti\">solverSolveMulti</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:Solver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">Solver</a> handle =&gt; handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"solverSolveMulti","module":"Grisette.Internal.Core.Data.Class.Solver","link":"Grisette-Internal-Core-Data-Class-Solver.html#v:solverSolveMulti"},{"display_html":"<a href=\"#v:solveMulti\">solveMulti</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:ConfigurableSolver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">ConfigurableSolver</a> config handle =&gt; config -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"solveMulti","module":"Grisette.Internal.Core.Data.Class.Solver","link":"Grisette-Internal-Core-Data-Class-Solver.html#v:solveMulti"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnionWithExcept\">UnionWithExcept</a> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v | t -&gt; u e v <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:extractUnionExcept\">extractUnionExcept</a> :: t -&gt; u (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v)</li></ul>","name":"UnionWithExcept extractUnionExcept","module":"Grisette.Internal.Core.Data.Class.Solver","link":"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept"},{"display_html":"<a href=\"#v:solverSolveExcept\">solverSolveExcept</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v handle. (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:Solver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">Solver</a> handle) =&gt; handle -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a> <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>)","name":"solverSolveExcept","module":"Grisette.Internal.Core.Data.Class.Solver","link":"Grisette-Internal-Core-Data-Class-Solver.html#v:solverSolveExcept"},{"display_html":"<a href=\"#v:solveExcept\">solveExcept</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v config handle. (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:ConfigurableSolver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">ConfigurableSolver</a> config handle) =&gt; config -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a> <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>)","name":"solveExcept","module":"Grisette.Internal.Core.Data.Class.Solver","link":"Grisette-Internal-Core-Data-Class-Solver.html#v:solveExcept"},{"display_html":"<a href=\"#v:solverSolveMultiExcept\">solverSolveMultiExcept</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v handle. (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:Solver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">Solver</a> handle) =&gt; handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"solverSolveMultiExcept","module":"Grisette.Internal.Core.Data.Class.Solver","link":"Grisette-Internal-Core-Data-Class-Solver.html#v:solverSolveMultiExcept"},{"display_html":"<a href=\"#v:solveMultiExcept\">solveMultiExcept</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v config handle. (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:ConfigurableSolver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">ConfigurableSolver</a> config handle) =&gt; config -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"solveMultiExcept","module":"Grisette.Internal.Core.Data.Class.Solver","link":"Grisette-Internal-Core-Data-Class-Solver.html#v:solveMultiExcept"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:GrisetteSMTConfig\">GrisetteSMTConfig</a> = <a href=\"#v:GrisetteSMTConfig\">GrisetteSMTConfig</a> {<ul class=\"subs\"><li><a href=\"#v:sbvConfig\">sbvConfig</a> :: <a href=\"Grisette-Backend.html#t:SMTConfig\" title=\"Grisette.Backend\">SMTConfig</a></li><li><a href=\"#v:extraConfig\">extraConfig</a> :: <a href=\"Grisette-Internal-Backend-Solving.html#t:ExtraConfig\" title=\"Grisette.Internal.Backend.Solving\">ExtraConfig</a></li></ul>}","name":"GrisetteSMTConfig GrisetteSMTConfig sbvConfig extraConfig","module":"Grisette.Internal.Backend.Solving","link":"Grisette-Internal-Backend-Solving.html#t:GrisetteSMTConfig"},{"display_html":"<a href=\"#v:boolector\">boolector</a> :: <a href=\"Grisette-Internal-Backend-Solving.html#t:GrisetteSMTConfig\" title=\"Grisette.Internal.Backend.Solving\">GrisetteSMTConfig</a>","name":"boolector","module":"Grisette.Internal.Backend.Solving","link":"Grisette-Internal-Backend-Solving.html#v:boolector"},{"display_html":"<a href=\"#v:bitwuzla\">bitwuzla</a> :: <a href=\"Grisette-Internal-Backend-Solving.html#t:GrisetteSMTConfig\" title=\"Grisette.Internal.Backend.Solving\">GrisetteSMTConfig</a>","name":"bitwuzla","module":"Grisette.Internal.Backend.Solving","link":"Grisette-Internal-Backend-Solving.html#v:bitwuzla"},{"display_html":"<a href=\"#v:cvc4\">cvc4</a> :: <a href=\"Grisette-Internal-Backend-Solving.html#t:GrisetteSMTConfig\" title=\"Grisette.Internal.Backend.Solving\">GrisetteSMTConfig</a>","name":"cvc4","module":"Grisette.Internal.Backend.Solving","link":"Grisette-Internal-Backend-Solving.html#v:cvc4"},{"display_html":"<a href=\"#v:cvc5\">cvc5</a> :: <a href=\"Grisette-Internal-Backend-Solving.html#t:GrisetteSMTConfig\" title=\"Grisette.Internal.Backend.Solving\">GrisetteSMTConfig</a>","name":"cvc5","module":"Grisette.Internal.Backend.Solving","link":"Grisette-Internal-Backend-Solving.html#v:cvc5"},{"display_html":"<a href=\"#v:yices\">yices</a> :: <a href=\"Grisette-Internal-Backend-Solving.html#t:GrisetteSMTConfig\" title=\"Grisette.Internal.Backend.Solving\">GrisetteSMTConfig</a>","name":"yices","module":"Grisette.Internal.Backend.Solving","link":"Grisette-Internal-Backend-Solving.html#v:yices"},{"display_html":"<a href=\"#v:dReal\">dReal</a> :: <a href=\"Grisette-Internal-Backend-Solving.html#t:GrisetteSMTConfig\" title=\"Grisette.Internal.Backend.Solving\">GrisetteSMTConfig</a>","name":"dReal","module":"Grisette.Internal.Backend.Solving","link":"Grisette-Internal-Backend-Solving.html#v:dReal"},{"display_html":"<a href=\"#v:z3\">z3</a> :: <a href=\"Grisette-Internal-Backend-Solving.html#t:GrisetteSMTConfig\" title=\"Grisette.Internal.Backend.Solving\">GrisetteSMTConfig</a>","name":"z3","module":"Grisette.Internal.Backend.Solving","link":"Grisette-Internal-Backend-Solving.html#v:z3"},{"display_html":"<a href=\"#v:mathSAT\">mathSAT</a> :: <a href=\"Grisette-Internal-Backend-Solving.html#t:GrisetteSMTConfig\" title=\"Grisette.Internal.Backend.Solving\">GrisetteSMTConfig</a>","name":"mathSAT","module":"Grisette.Internal.Backend.Solving","link":"Grisette-Internal-Backend-Solving.html#v:mathSAT"},{"display_html":"<a href=\"#v:abc\">abc</a> :: <a href=\"Grisette-Internal-Backend-Solving.html#t:GrisetteSMTConfig\" title=\"Grisette.Internal.Backend.Solving\">GrisetteSMTConfig</a>","name":"abc","module":"Grisette.Internal.Backend.Solving","link":"Grisette-Internal-Backend-Solving.html#v:abc"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:ExtraConfig\">ExtraConfig</a> = <a href=\"#v:ExtraConfig\">ExtraConfig</a> {<ul class=\"subs\"><li><a href=\"#v:timeout\">timeout</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li></ul>}","name":"ExtraConfig timeout ExtraConfig","module":"Grisette.Internal.Backend.Solving","link":"Grisette-Internal-Backend-Solving.html#t:ExtraConfig"},{"display_html":"<a href=\"#v:withTimeout\">withTimeout</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Internal-Backend-Solving.html#t:GrisetteSMTConfig\" title=\"Grisette.Internal.Backend.Solving\">GrisetteSMTConfig</a> -&gt; <a href=\"Grisette-Internal-Backend-Solving.html#t:GrisetteSMTConfig\" title=\"Grisette.Internal.Backend.Solving\">GrisetteSMTConfig</a>","name":"withTimeout","module":"Grisette.Internal.Backend.Solving","link":"Grisette-Internal-Backend-Solving.html#v:withTimeout"},{"display_html":"<a href=\"#v:clearTimeout\">clearTimeout</a> :: <a href=\"Grisette-Internal-Backend-Solving.html#t:GrisetteSMTConfig\" title=\"Grisette.Internal.Backend.Solving\">GrisetteSMTConfig</a> -&gt; <a href=\"Grisette-Internal-Backend-Solving.html#t:GrisetteSMTConfig\" title=\"Grisette.Internal.Backend.Solving\">GrisetteSMTConfig</a>","name":"clearTimeout","module":"Grisette.Internal.Backend.Solving","link":"Grisette-Internal-Backend-Solving.html#v:clearTimeout"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SBVIncrementalT\">SBVIncrementalT</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) = <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Reader.html#t:ReaderT\" title=\"Control.Monad.Reader\">ReaderT</a> <a href=\"Grisette-Internal-Backend-Solving.html#t:GrisetteSMTConfig\" title=\"Grisette.Internal.Backend.Solving\">GrisetteSMTConfig</a> (<a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> <a href=\"Grisette-Internal-Backend-SymBiMap.html#t:SymBiMap\" title=\"Grisette.Internal.Backend.SymBiMap\">SymBiMap</a> (<a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Trans-Control.html#t:QueryT\" title=\"Data.SBV.Trans.Control\">QueryT</a> m))","name":"SBVIncrementalT","module":"Grisette.Internal.Backend.Solving","link":"Grisette-Internal-Backend-Solving.html#t:SBVIncrementalT"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SBVIncremental\">SBVIncremental</a> = <a href=\"Grisette-Internal-Backend-Solving.html#t:SBVIncrementalT\" title=\"Grisette.Internal.Backend.Solving\">SBVIncrementalT</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a>","name":"SBVIncremental","module":"Grisette.Internal.Backend.Solving","link":"Grisette-Internal-Backend-Solving.html#t:SBVIncremental"},{"display_html":"<a href=\"#v:runSBVIncrementalT\">runSBVIncrementalT</a> :: <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Trans-Control.html#t:ExtractIO\" title=\"Data.SBV.Trans.Control\">ExtractIO</a> m =&gt; <a href=\"Grisette-Internal-Backend-Solving.html#t:GrisetteSMTConfig\" title=\"Grisette.Internal.Backend.Solving\">GrisetteSMTConfig</a> -&gt; <a href=\"Grisette-Internal-Backend-Solving.html#t:SBVIncrementalT\" title=\"Grisette.Internal.Backend.Solving\">SBVIncrementalT</a> m a -&gt; m a","name":"runSBVIncrementalT","module":"Grisette.Internal.Backend.Solving","link":"Grisette-Internal-Backend-Solving.html#v:runSBVIncrementalT"},{"display_html":"<a href=\"#v:runSBVIncremental\">runSBVIncremental</a> :: <a href=\"Grisette-Internal-Backend-Solving.html#t:GrisetteSMTConfig\" title=\"Grisette.Internal.Backend.Solving\">GrisetteSMTConfig</a> -&gt; <a href=\"Grisette-Internal-Backend-Solving.html#t:SBVIncremental\" title=\"Grisette.Internal.Backend.Solving\">SBVIncremental</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> a","name":"runSBVIncremental","module":"Grisette.Internal.Backend.Solving","link":"Grisette-Internal-Backend-Solving.html#v:runSBVIncremental"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SBVSolverHandle\">SBVSolverHandle</a>","name":"SBVSolverHandle","module":"Grisette.Internal.Backend.Solving","link":"Grisette-Internal-Backend-Solving.html#t:SBVSolverHandle"},{"display_html":"<a href=\"#v:lowerSinglePrimCached\">lowerSinglePrimCached</a> :: <span class=\"keyword\">forall</span> t m. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVFreshMonad\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVFreshMonad</a> m) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> t -&gt; <a href=\"Grisette-Internal-Backend-SymBiMap.html#t:SymBiMap\" title=\"Grisette.Internal.Backend.SymBiMap\">SymBiMap</a> -&gt; m (<a href=\"Grisette-Internal-Backend-SymBiMap.html#t:SymBiMap\" title=\"Grisette.Internal.Backend.SymBiMap\">SymBiMap</a>, <a href=\"Grisette-Internal-Backend-QuantifiedStack.html#t:QuantifiedStack\" title=\"Grisette.Internal.Backend.QuantifiedStack\">QuantifiedStack</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> t, <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:SBool\" title=\"Data.SBV.Internals\">SBool</a>)","name":"lowerSinglePrimCached","module":"Grisette.Internal.Backend.Solving","link":"Grisette-Internal-Backend-Solving.html#v:lowerSinglePrimCached"},{"display_html":"<a href=\"#v:lowerSinglePrim\">lowerSinglePrim</a> :: <span class=\"keyword\">forall</span> a m. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVFreshMonad\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVFreshMonad</a> m) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:Term\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">Term</a> a -&gt; m (<a href=\"Grisette-Internal-Backend-SymBiMap.html#t:SymBiMap\" title=\"Grisette.Internal.Backend.SymBiMap\">SymBiMap</a>, <a href=\"Grisette-Internal-Backend-QuantifiedStack.html#t:QuantifiedStack\" title=\"Grisette.Internal.Backend.QuantifiedStack\">QuantifiedStack</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVType</a> a, <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:SBool\" title=\"Data.SBV.Internals\">SBool</a>)","name":"lowerSinglePrim","module":"Grisette.Internal.Backend.Solving","link":"Grisette-Internal-Backend-Solving.html#v:lowerSinglePrim"},{"display_html":"<a href=\"#v:parseModel\">parseModel</a> :: <a href=\"Grisette-Internal-Backend-Solving.html#t:GrisetteSMTConfig\" title=\"Grisette.Internal.Backend.Solving\">GrisetteSMTConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:SMTModel\" title=\"Data.SBV.Internals\">SMTModel</a> -&gt; <a href=\"Grisette-Internal-Backend-SymBiMap.html#t:SymBiMap\" title=\"Grisette.Internal.Backend.SymBiMap\">SymBiMap</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>","name":"parseModel","module":"Grisette.Internal.Backend.Solving","link":"Grisette-Internal-Backend-Solving.html#v:parseModel"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:GrisetteSMTConfig\">GrisetteSMTConfig</a> = <a href=\"#v:GrisetteSMTConfig\">GrisetteSMTConfig</a> {<ul class=\"subs\"><li><a href=\"#v:sbvConfig\">sbvConfig</a> :: <a href=\"Grisette-Backend.html#t:SMTConfig\" title=\"Grisette.Backend\">SMTConfig</a></li><li><a href=\"#v:extraConfig\">extraConfig</a> :: <a href=\"Grisette-Backend.html#t:ExtraConfig\" title=\"Grisette.Backend\">ExtraConfig</a></li></ul>}","name":"GrisetteSMTConfig GrisetteSMTConfig sbvConfig extraConfig","module":"Grisette.Backend","link":"Grisette-Backend.html#t:GrisetteSMTConfig"},{"display_html":"<a href=\"#v:boolector\">boolector</a> :: <a href=\"Grisette-Backend.html#t:GrisetteSMTConfig\" title=\"Grisette.Backend\">GrisetteSMTConfig</a>","name":"boolector","module":"Grisette.Backend","link":"Grisette-Backend.html#v:boolector"},{"display_html":"<a href=\"#v:bitwuzla\">bitwuzla</a> :: <a href=\"Grisette-Backend.html#t:GrisetteSMTConfig\" title=\"Grisette.Backend\">GrisetteSMTConfig</a>","name":"bitwuzla","module":"Grisette.Backend","link":"Grisette-Backend.html#v:bitwuzla"},{"display_html":"<a href=\"#v:cvc4\">cvc4</a> :: <a href=\"Grisette-Backend.html#t:GrisetteSMTConfig\" title=\"Grisette.Backend\">GrisetteSMTConfig</a>","name":"cvc4","module":"Grisette.Backend","link":"Grisette-Backend.html#v:cvc4"},{"display_html":"<a href=\"#v:cvc5\">cvc5</a> :: <a href=\"Grisette-Backend.html#t:GrisetteSMTConfig\" title=\"Grisette.Backend\">GrisetteSMTConfig</a>","name":"cvc5","module":"Grisette.Backend","link":"Grisette-Backend.html#v:cvc5"},{"display_html":"<a href=\"#v:yices\">yices</a> :: <a href=\"Grisette-Backend.html#t:GrisetteSMTConfig\" title=\"Grisette.Backend\">GrisetteSMTConfig</a>","name":"yices","module":"Grisette.Backend","link":"Grisette-Backend.html#v:yices"},{"display_html":"<a href=\"#v:dReal\">dReal</a> :: <a href=\"Grisette-Backend.html#t:GrisetteSMTConfig\" title=\"Grisette.Backend\">GrisetteSMTConfig</a>","name":"dReal","module":"Grisette.Backend","link":"Grisette-Backend.html#v:dReal"},{"display_html":"<a href=\"#v:z3\">z3</a> :: <a href=\"Grisette-Backend.html#t:GrisetteSMTConfig\" title=\"Grisette.Backend\">GrisetteSMTConfig</a>","name":"z3","module":"Grisette.Backend","link":"Grisette-Backend.html#v:z3"},{"display_html":"<a href=\"#v:mathSAT\">mathSAT</a> :: <a href=\"Grisette-Backend.html#t:GrisetteSMTConfig\" title=\"Grisette.Backend\">GrisetteSMTConfig</a>","name":"mathSAT","module":"Grisette.Backend","link":"Grisette-Backend.html#v:mathSAT"},{"display_html":"<a href=\"#v:abc\">abc</a> :: <a href=\"Grisette-Backend.html#t:GrisetteSMTConfig\" title=\"Grisette.Backend\">GrisetteSMTConfig</a>","name":"abc","module":"Grisette.Backend","link":"Grisette-Backend.html#v:abc"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:ExtraConfig\">ExtraConfig</a> = <a href=\"#v:ExtraConfig\">ExtraConfig</a> {<ul class=\"subs\"><li><a href=\"#v:timeout\">timeout</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li></ul>}","name":"ExtraConfig timeout ExtraConfig","module":"Grisette.Backend","link":"Grisette-Backend.html#t:ExtraConfig"},{"display_html":"<a href=\"#v:withTimeout\">withTimeout</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Backend.html#t:GrisetteSMTConfig\" title=\"Grisette.Backend\">GrisetteSMTConfig</a> -&gt; <a href=\"Grisette-Backend.html#t:GrisetteSMTConfig\" title=\"Grisette.Backend\">GrisetteSMTConfig</a>","name":"withTimeout","module":"Grisette.Backend","link":"Grisette-Backend.html#v:withTimeout"},{"display_html":"<a href=\"#v:clearTimeout\">clearTimeout</a> :: <a href=\"Grisette-Backend.html#t:GrisetteSMTConfig\" title=\"Grisette.Backend\">GrisetteSMTConfig</a> -&gt; <a href=\"Grisette-Backend.html#t:GrisetteSMTConfig\" title=\"Grisette.Backend\">GrisetteSMTConfig</a>","name":"clearTimeout","module":"Grisette.Backend","link":"Grisette-Backend.html#v:clearTimeout"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SMTConfig\">SMTConfig</a> = <a href=\"#v:SMTConfig\">SMTConfig</a> {<ul class=\"subs\"><li><a href=\"#v:verbose\">verbose</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:timing\">timing</a> :: <a href=\"Grisette-Backend.html#t:Timing\" title=\"Grisette.Backend\">Timing</a></li><li><a href=\"#v:printBase\">printBase</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li><a href=\"#v:printRealPrec\">printRealPrec</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li><a href=\"#v:crackNum\">crackNum</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:crackNumSurfaceVals\">crackNumSurfaceVals</a> :: [(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integer\" title=\"Prelude\">Integer</a>)]</li><li><a href=\"#v:satCmd\">satCmd</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li><li><a href=\"#v:allSatMaxModelCount\">allSatMaxModelCount</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li><a href=\"#v:allSatPrintAlong\">allSatPrintAlong</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:allSatTrackUFs\">allSatTrackUFs</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:isNonModelVar\">isNonModelVar</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:validateModel\">validateModel</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:optimizeValidateConstraints\">optimizeValidateConstraints</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:transcript\">transcript</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a></li><li><a href=\"#v:smtLibVersion\">smtLibVersion</a> :: <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:SMTLibVersion\" title=\"Data.SBV.Internals\">SMTLibVersion</a></li><li><a href=\"#v:dsatPrecision\">dsatPrecision</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Exts.html#t:Double\" title=\"GHC.Exts\">Double</a></li><li><a href=\"#v:solver\">solver</a> :: <a href=\"Grisette-Backend.html#t:SMTSolver\" title=\"Grisette.Backend\">SMTSolver</a></li><li><a href=\"#v:extraArgs\">extraArgs</a> :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>]</li><li><a href=\"#v:roundingMode\">roundingMode</a> :: <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:RoundingMode\" title=\"Data.SBV.Internals\">RoundingMode</a></li><li><a href=\"#v:solverSetOptions\">solverSetOptions</a> :: [<a href=\"Grisette-Backend.html#t:SMTOption\" title=\"Grisette.Backend\">SMTOption</a>]</li><li><a href=\"#v:ignoreExitCode\">ignoreExitCode</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:redirectVerbose\">redirectVerbose</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a></li><li><a href=\"#v:kdRibbonLength\">kdRibbonLength</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li></ul>}","name":"SMTConfig verbose redirectVerbose allSatMaxModelCount SMTConfig kdRibbonLength ignoreExitCode solverSetOptions roundingMode extraArgs solver dsatPrecision smtLibVersion transcript optimizeValidateConstraints validateModel isNonModelVar allSatTrackUFs allSatPrintAlong satCmd crackNumSurfaceVals crackNum printRealPrec printBase timing","module":"Grisette.Backend","link":"Grisette-Backend.html#t:SMTConfig"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Logic\">Logic</a><ul class=\"subs\"><li>= <a href=\"#v:AUFLIA\">AUFLIA</a></li><li>| <a href=\"#v:AUFLIRA\">AUFLIRA</a></li><li>| <a href=\"#v:AUFNIRA\">AUFNIRA</a></li><li>| <a href=\"#v:LRA\">LRA</a></li><li>| <a href=\"#v:QF_ABV\">QF_ABV</a></li><li>| <a href=\"#v:QF_AUFBV\">QF_AUFBV</a></li><li>| <a href=\"#v:QF_AUFLIA\">QF_AUFLIA</a></li><li>| <a href=\"#v:QF_AX\">QF_AX</a></li><li>| <a href=\"#v:QF_BV\">QF_BV</a></li><li>| <a href=\"#v:QF_IDL\">QF_IDL</a></li><li>| <a href=\"#v:QF_LIA\">QF_LIA</a></li><li>| <a href=\"#v:QF_LRA\">QF_LRA</a></li><li>| <a href=\"#v:QF_NIA\">QF_NIA</a></li><li>| <a href=\"#v:QF_NRA\">QF_NRA</a></li><li>| <a href=\"#v:QF_RDL\">QF_RDL</a></li><li>| <a href=\"#v:QF_UF\">QF_UF</a></li><li>| <a href=\"#v:QF_UFBV\">QF_UFBV</a></li><li>| <a href=\"#v:QF_UFIDL\">QF_UFIDL</a></li><li>| <a href=\"#v:QF_UFLIA\">QF_UFLIA</a></li><li>| <a href=\"#v:QF_UFLRA\">QF_UFLRA</a></li><li>| <a href=\"#v:QF_UFNRA\">QF_UFNRA</a></li><li>| <a href=\"#v:QF_UFNIRA\">QF_UFNIRA</a></li><li>| <a href=\"#v:UFLRA\">UFLRA</a></li><li>| <a href=\"#v:UFNIA\">UFNIA</a></li><li>| <a href=\"#v:QF_FPBV\">QF_FPBV</a></li><li>| <a href=\"#v:QF_FP\">QF_FP</a></li><li>| <a href=\"#v:QF_FD\">QF_FD</a></li><li>| <a href=\"#v:QF_S\">QF_S</a></li><li>| <a href=\"#v:Logic_ALL\">Logic_ALL</a></li><li>| <a href=\"#v:Logic_NONE\">Logic_NONE</a></li><li>| <a href=\"#v:CustomLogic\">CustomLogic</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li></ul>","name":"Logic AUFLIA AUFLIRA AUFNIRA LRA QF_ABV QF_AUFBV QF_AUFLIA QF_AX QF_BV QF_IDL QF_LIA QF_LRA QF_NIA QF_NRA QF_RDL QF_UF QF_UFBV QF_UFIDL QF_UFLIA QF_UFLRA QF_UFNRA QF_UFNIRA UFLRA UFNIA QF_FPBV QF_FP QF_FD QF_S Logic_ALL Logic_NONE CustomLogic","module":"Grisette.Backend","link":"Grisette-Backend.html#t:Logic"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SMTOption\">SMTOption</a><ul class=\"subs\"><li>= <a href=\"#v:DiagnosticOutputChannel\">DiagnosticOutputChannel</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a></li><li>| <a href=\"#v:ProduceAssertions\">ProduceAssertions</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li>| <a href=\"#v:ProduceAssignments\">ProduceAssignments</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li>| <a href=\"#v:ProduceProofs\">ProduceProofs</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li>| <a href=\"#v:ProduceInterpolants\">ProduceInterpolants</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li>| <a href=\"#v:ProduceUnsatAssumptions\">ProduceUnsatAssumptions</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li>| <a href=\"#v:ProduceUnsatCores\">ProduceUnsatCores</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li>| <a href=\"#v:ProduceAbducts\">ProduceAbducts</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li>| <a href=\"#v:RandomSeed\">RandomSeed</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integer\" title=\"Prelude\">Integer</a></li><li>| <a href=\"#v:ReproducibleResourceLimit\">ReproducibleResourceLimit</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integer\" title=\"Prelude\">Integer</a></li><li>| <a href=\"#v:SMTVerbosity\">SMTVerbosity</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integer\" title=\"Prelude\">Integer</a></li><li>| <a href=\"#v:OptionKeyword\">OptionKeyword</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>]</li><li>| <a href=\"#v:SetLogic\">SetLogic</a> <a href=\"Grisette-Backend.html#t:Logic\" title=\"Grisette.Backend\">Logic</a></li><li>| <a href=\"#v:SetInfo\">SetInfo</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>]</li></ul>","name":"SMTOption ProduceUnsatCores ProduceUnsatAssumptions OptionKeyword ProduceProofs ProduceInterpolants ProduceAssertions ProduceAssignments DiagnosticOutputChannel ProduceAbducts RandomSeed ReproducibleResourceLimit SMTVerbosity SetLogic SetInfo","module":"Grisette.Backend","link":"Grisette-Backend.html#t:SMTOption"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Timing\">Timing</a><ul class=\"subs\"><li>= <a href=\"#v:NoTiming\">NoTiming</a></li><li>| <a href=\"#v:PrintTiming\">PrintTiming</a></li><li>| <a href=\"#v:SaveTiming\">SaveTiming</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-IORef.html#t:IORef\" title=\"Data.IORef\">IORef</a> <a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock.html#t:NominalDiffTime\" title=\"Data.Time.Clock\">NominalDiffTime</a>)</li></ul>","name":"Timing NoTiming PrintTiming SaveTiming","module":"Grisette.Backend","link":"Grisette-Backend.html#t:Timing"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SMTSolver\">SMTSolver</a> = <a href=\"#v:SMTSolver\">SMTSolver</a> {<ul class=\"subs\"><li><a href=\"#v:name\">name</a> :: <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:Solver\" title=\"Data.SBV.Internals\">Solver</a></li><li><a href=\"#v:executable\">executable</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li><li><a href=\"#v:preprocess\">preprocess</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li><li><a href=\"#v:options\">options</a> :: <a href=\"Grisette-Backend.html#t:SMTConfig\" title=\"Grisette.Backend\">SMTConfig</a> -&gt; [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>]</li><li><a href=\"#v:engine\">engine</a> :: SMTEngine</li><li><a href=\"#v:capabilities\">capabilities</a> :: <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Internals.html#t:SolverCapabilities\" title=\"Data.SBV.Internals\">SolverCapabilities</a></li></ul>}","name":"SMTSolver executable SMTSolver capabilities engine options preprocess name","module":"Grisette.Backend","link":"Grisette-Backend.html#t:SMTSolver"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:EvalSym\">EvalSym</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:evalSym\">evalSym</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; a -&gt; a</li></ul>","name":"EvalSym evalSym","module":"Grisette.Internal.Core.Data.Class.EvalSym","link":"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym"},{"display_html":"<a href=\"#v:evalSymToCon\">evalSymToCon</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon</a> a b, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; a -&gt; b","name":"evalSymToCon","module":"Grisette.Internal.Core.Data.Class.EvalSym","link":"Grisette-Internal-Core-Data-Class-EvalSym.html#v:evalSymToCon"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> a =&gt; <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> (f a)) =&gt; <a href=\"#t:EvalSym1\">EvalSym1</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftEvalSym\">liftEvalSym</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; a -&gt; a) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; f a -&gt; f a</li></ul>","name":"EvalSym1 liftEvalSym","module":"Grisette.Internal.Core.Data.Class.EvalSym","link":"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym1"},{"display_html":"<a href=\"#v:evalSym1\">evalSym1</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym1\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym1</a> f, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; f a -&gt; f a","name":"evalSym1","module":"Grisette.Internal.Core.Data.Class.EvalSym","link":"Grisette-Internal-Core-Data-Class-EvalSym.html#v:evalSym1"},{"display_html":"<a href=\"#v:evalSymToCon1\">evalSymToCon1</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym1\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym1</a> f, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon1\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon1</a> f g, <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon</a> a b) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; f a -&gt; g b","name":"evalSymToCon1","module":"Grisette.Internal.Core.Data.Class.EvalSym","link":"Grisette-Internal-Core-Data-Class-EvalSym.html#v:evalSymToCon1"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> a =&gt; <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym1\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym1</a> (f a)) =&gt; <a href=\"#t:EvalSym2\">EvalSym2</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftEvalSym2\">liftEvalSym2</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; a -&gt; a) -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; b -&gt; b) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; f a b -&gt; f a b</li></ul>","name":"EvalSym2 liftEvalSym2","module":"Grisette.Internal.Core.Data.Class.EvalSym","link":"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym2"},{"display_html":"<a href=\"#v:evalSym2\">evalSym2</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym2\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym2</a> f, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> a, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> b) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; f a b -&gt; f a b","name":"evalSym2","module":"Grisette.Internal.Core.Data.Class.EvalSym","link":"Grisette-Internal-Core-Data-Class-EvalSym.html#v:evalSym2"},{"display_html":"<a href=\"#v:evalSymToCon2\">evalSymToCon2</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym2\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym2</a> f, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> a, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> c, <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon2\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon2</a> f g, <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon</a> a b, <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon</a> c d) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; f a c -&gt; g b d","name":"evalSymToCon2","module":"Grisette.Internal.Core.Data.Class.EvalSym","link":"Grisette-Internal-Core-Data-Class-EvalSym.html#v:evalSymToCon2"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:EvalSymArgs\">EvalSymArgs</a> arity a","name":"EvalSymArgs EvalSymArgs0 EvalSymArgs1","module":"Grisette.Internal.Core.Data.Class.EvalSym","link":"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSymArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GEvalSym\">GEvalSym</a> arity (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:gevalSym\">gevalSym</a> :: <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSymArgs\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSymArgs</a> arity a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; f a -&gt; f a</li></ul>","name":"GEvalSym gevalSym","module":"Grisette.Internal.Core.Data.Class.EvalSym","link":"Grisette-Internal-Core-Data-Class-EvalSym.html#t:GEvalSym"},{"display_html":"<a href=\"#v:genericEvalSym\">genericEvalSym</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:GEvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">GEvalSym</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a)) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; a -&gt; a","name":"genericEvalSym","module":"Grisette.Internal.Core.Data.Class.EvalSym","link":"Grisette-Internal-Core-Data-Class-EvalSym.html#v:genericEvalSym"},{"display_html":"<a href=\"#v:genericLiftEvalSym\">genericLiftEvalSym</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:GEvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">GEvalSym</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f)) =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; a -&gt; a) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; f a -&gt; f a","name":"genericLiftEvalSym","module":"Grisette.Internal.Core.Data.Class.EvalSym","link":"Grisette-Internal-Core-Data-Class-EvalSym.html#v:genericLiftEvalSym"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:VerifierResult\">VerifierResult</a> cex exception<ul class=\"subs\"><li>= <a href=\"#v:CEGISVerifierFoundCex\">CEGISVerifierFoundCex</a> cex</li><li>| <a href=\"#v:CEGISVerifierNoCex\">CEGISVerifierNoCex</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li>| <a href=\"#v:CEGISVerifierException\">CEGISVerifierException</a> exception</li></ul>","name":"VerifierResult CEGISVerifierFoundCex CEGISVerifierNoCex CEGISVerifierException","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:VerifierResult"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SynthesisConstraintFun\">SynthesisConstraintFun</a> cex = cex -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"SynthesisConstraintFun","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:SynthesisConstraintFun"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:VerifierFun\">VerifierFun</a> cex exception = <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:VerifierResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">VerifierResult</a> cex exception)","name":"VerifierFun","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:VerifierFun"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CEGISResult\">CEGISResult</a> exception<ul class=\"subs\"><li>= <a href=\"#v:CEGISSuccess\">CEGISSuccess</a> <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a></li><li>| <a href=\"#v:CEGISVerifierFailure\">CEGISVerifierFailure</a> exception</li><li>| <a href=\"#v:CEGISSolverFailure\">CEGISSolverFailure</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a></li></ul>","name":"CEGISResult CEGISSuccess CEGISVerifierFailure CEGISSolverFailure","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult"},{"display_html":"<a href=\"#v:solverGenericCEGIS\">solverGenericCEGIS</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:Solver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">Solver</a> handle =&gt; handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:SynthesisConstraintFun\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">SynthesisConstraintFun</a> input -&gt; [<a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:VerifierFun\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">VerifierFun</a> input exception] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([input], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> exception)","name":"solverGenericCEGIS","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:solverGenericCEGIS"},{"display_html":"<a href=\"#v:solverGenericCEGISWithRefinement\">solverGenericCEGISWithRefinement</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:Solver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">Solver</a> handle =&gt; handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:SynthesisConstraintFun\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">SynthesisConstraintFun</a> input -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> RefinementConditionFun -&gt; [<a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:VerifierFun\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">VerifierFun</a> input exception] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([input], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> exception)","name":"solverGenericCEGISWithRefinement","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:solverGenericCEGISWithRefinement"},{"display_html":"<a href=\"#v:genericCEGIS\">genericCEGIS</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:ConfigurableSolver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">ConfigurableSolver</a> config handle =&gt; config -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:SynthesisConstraintFun\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">SynthesisConstraintFun</a> input -&gt; [<a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:VerifierFun\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">VerifierFun</a> input exception] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([input], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> exception)","name":"genericCEGIS","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:genericCEGIS"},{"display_html":"<a href=\"#v:genericCEGISWithRefinement\">genericCEGISWithRefinement</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:ConfigurableSolver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">ConfigurableSolver</a> config handle =&gt; config -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:SynthesisConstraintFun\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">SynthesisConstraintFun</a> input -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> RefinementConditionFun -&gt; [<a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:VerifierFun\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">VerifierFun</a> input exception] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([input], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> exception)","name":"genericCEGISWithRefinement","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:genericCEGISWithRefinement"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CEGISCondition\">CEGISCondition</a> = <a href=\"#v:CEGISCondition\">CEGISCondition</a> <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"CEGISCondition CEGISCondition","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISCondition"},{"display_html":"<a href=\"#v:cegisPostCond\">cegisPostCond</a> :: <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISCondition\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISCondition</a>","name":"cegisPostCond","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:cegisPostCond"},{"display_html":"<a href=\"#v:cegisPrePost\">cegisPrePost</a> :: <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISCondition\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISCondition</a>","name":"cegisPrePost","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:cegisPrePost"},{"display_html":"<a href=\"#v:solverCegisMultiInputs\">solverCegisMultiInputs</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> input, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> input, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:Solver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">Solver</a> handle) =&gt; handle -&gt; handle -&gt; [input] -&gt; (input -&gt; <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISCondition\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISCondition</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([input], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"solverCegisMultiInputs","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:solverCegisMultiInputs"},{"display_html":"<a href=\"#v:solverCegis\">solverCegis</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:Solver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">Solver</a> handle, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> inputs) =&gt; handle -&gt; handle -&gt; inputs -&gt; (inputs -&gt; <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISCondition\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISCondition</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"solverCegis","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:solverCegis"},{"display_html":"<a href=\"#v:solverCegisExcept\">solverCegisExcept</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v inputs handle. (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> u, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:Solver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">Solver</a> handle, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> inputs) =&gt; handle -&gt; handle -&gt; inputs -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISCondition\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISCondition</a>) -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"solverCegisExcept","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:solverCegisExcept"},{"display_html":"<a href=\"#v:solverCegisExceptStdVC\">solverCegisExceptStdVC</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) inputs handle. (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u <a href=\"Grisette-Internal-Core-Control-Exception.html#t:VerificationConditions\" title=\"Grisette.Internal.Core.Control.Exception\">VerificationConditions</a> (), <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:Solver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">Solver</a> handle, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> inputs) =&gt; handle -&gt; handle -&gt; inputs -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"solverCegisExceptStdVC","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:solverCegisExceptStdVC"},{"display_html":"<a href=\"#v:solverCegisExceptVC\">solverCegisExceptVC</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:Solver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">Solver</a> handle, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> inputs) =&gt; handle -&gt; handle -&gt; inputs -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; u (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-Core-Control-Exception.html#t:VerificationConditions\" title=\"Grisette.Internal.Core.Control.Exception\">VerificationConditions</a> ())) -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"solverCegisExceptVC","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:solverCegisExceptVC"},{"display_html":"<a href=\"#v:solverCegisExceptMultiInputs\">solverCegisExceptMultiInputs</a> :: <span class=\"keyword\">forall</span> handle inputs t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v. (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:Solver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">Solver</a> handle, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u) =&gt; handle -&gt; handle -&gt; [inputs] -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISCondition\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISCondition</a>) -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"solverCegisExceptMultiInputs","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:solverCegisExceptMultiInputs"},{"display_html":"<a href=\"#v:solverCegisExceptStdVCMultiInputs\">solverCegisExceptStdVCMultiInputs</a> :: <span class=\"keyword\">forall</span> handle inputs t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:Solver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">Solver</a> handle, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u <a href=\"Grisette-Internal-Core-Control-Exception.html#t:VerificationConditions\" title=\"Grisette.Internal.Core.Control.Exception\">VerificationConditions</a> (), <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u) =&gt; handle -&gt; handle -&gt; [inputs] -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"solverCegisExceptStdVCMultiInputs","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:solverCegisExceptStdVCMultiInputs"},{"display_html":"<a href=\"#v:solverCegisExceptVCMultiInputs\">solverCegisExceptVCMultiInputs</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:Solver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">Solver</a> handle, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u) =&gt; handle -&gt; handle -&gt; [inputs] -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; u (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-Core-Control-Exception.html#t:VerificationConditions\" title=\"Grisette.Internal.Core.Control.Exception\">VerificationConditions</a> ())) -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"solverCegisExceptVCMultiInputs","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:solverCegisExceptVCMultiInputs"},{"display_html":"<a href=\"#v:solverCegisForAll\">solverCegisForAll</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> forallInput, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:Solver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">Solver</a> handle) =&gt; handle -&gt; handle -&gt; forallInput -&gt; <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISCondition\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISCondition</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"solverCegisForAll","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:solverCegisForAll"},{"display_html":"<a href=\"#v:solverCegisForAllExcept\">solverCegisForAllExcept</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v inputs handle. (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> u, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:Solver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">Solver</a> handle, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> inputs) =&gt; handle -&gt; handle -&gt; inputs -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISCondition\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISCondition</a>) -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"solverCegisForAllExcept","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:solverCegisForAllExcept"},{"display_html":"<a href=\"#v:solverCegisForAllExceptStdVC\">solverCegisForAllExceptStdVC</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) inputs handle. (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u <a href=\"Grisette-Internal-Core-Control-Exception.html#t:VerificationConditions\" title=\"Grisette.Internal.Core.Control.Exception\">VerificationConditions</a> (), <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:Solver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">Solver</a> handle, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> inputs) =&gt; handle -&gt; handle -&gt; inputs -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"solverCegisForAllExceptStdVC","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:solverCegisForAllExceptStdVC"},{"display_html":"<a href=\"#v:solverCegisForAllExceptVC\">solverCegisForAllExceptVC</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:Solver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">Solver</a> handle, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> inputs) =&gt; handle -&gt; handle -&gt; inputs -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; u (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-Core-Control-Exception.html#t:VerificationConditions\" title=\"Grisette.Internal.Core.Control.Exception\">VerificationConditions</a> ())) -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"solverCegisForAllExceptVC","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:solverCegisForAllExceptVC"},{"display_html":"<a href=\"#v:cegisMultiInputs\">cegisMultiInputs</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> input, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> input, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:ConfigurableSolver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">ConfigurableSolver</a> config handle) =&gt; config -&gt; [input] -&gt; (input -&gt; <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISCondition\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISCondition</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([input], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"cegisMultiInputs","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:cegisMultiInputs"},{"display_html":"<a href=\"#v:cegis\">cegis</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:ConfigurableSolver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">ConfigurableSolver</a> config handle, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> inputs) =&gt; config -&gt; inputs -&gt; (inputs -&gt; <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISCondition\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISCondition</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"cegis","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:cegis"},{"display_html":"<a href=\"#v:cegisExcept\">cegisExcept</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v inputs config handle. (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> u, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:ConfigurableSolver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">ConfigurableSolver</a> config handle, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> inputs) =&gt; config -&gt; inputs -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISCondition\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISCondition</a>) -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"cegisExcept","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:cegisExcept"},{"display_html":"<a href=\"#v:cegisExceptStdVC\">cegisExceptStdVC</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) inputs config handle. (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u <a href=\"Grisette-Internal-Core-Control-Exception.html#t:VerificationConditions\" title=\"Grisette.Internal.Core.Control.Exception\">VerificationConditions</a> (), <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:ConfigurableSolver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">ConfigurableSolver</a> config handle, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> inputs) =&gt; config -&gt; inputs -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"cegisExceptStdVC","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:cegisExceptStdVC"},{"display_html":"<a href=\"#v:cegisExceptVC\">cegisExceptVC</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:ConfigurableSolver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">ConfigurableSolver</a> config handle, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> inputs) =&gt; config -&gt; inputs -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; u (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-Core-Control-Exception.html#t:VerificationConditions\" title=\"Grisette.Internal.Core.Control.Exception\">VerificationConditions</a> ())) -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"cegisExceptVC","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:cegisExceptVC"},{"display_html":"<a href=\"#v:cegisExceptMultiInputs\">cegisExceptMultiInputs</a> :: <span class=\"keyword\">forall</span> config handle inputs t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v. (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:ConfigurableSolver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">ConfigurableSolver</a> config handle, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u) =&gt; config -&gt; [inputs] -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISCondition\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISCondition</a>) -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"cegisExceptMultiInputs","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:cegisExceptMultiInputs"},{"display_html":"<a href=\"#v:cegisExceptStdVCMultiInputs\">cegisExceptStdVCMultiInputs</a> :: <span class=\"keyword\">forall</span> config handle inputs t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:ConfigurableSolver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">ConfigurableSolver</a> config handle, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u <a href=\"Grisette-Internal-Core-Control-Exception.html#t:VerificationConditions\" title=\"Grisette.Internal.Core.Control.Exception\">VerificationConditions</a> (), <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u) =&gt; config -&gt; [inputs] -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"cegisExceptStdVCMultiInputs","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:cegisExceptStdVCMultiInputs"},{"display_html":"<a href=\"#v:cegisExceptVCMultiInputs\">cegisExceptVCMultiInputs</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:ConfigurableSolver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">ConfigurableSolver</a> config handle, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u) =&gt; config -&gt; [inputs] -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; u (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-Core-Control-Exception.html#t:VerificationConditions\" title=\"Grisette.Internal.Core.Control.Exception\">VerificationConditions</a> ())) -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"cegisExceptVCMultiInputs","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:cegisExceptVCMultiInputs"},{"display_html":"<a href=\"#v:cegisForAll\">cegisForAll</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> forallInput, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:ConfigurableSolver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">ConfigurableSolver</a> config handle) =&gt; config -&gt; forallInput -&gt; <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISCondition\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISCondition</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"cegisForAll","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:cegisForAll"},{"display_html":"<a href=\"#v:cegisForAllExcept\">cegisForAllExcept</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v inputs config handle. (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> u, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:ConfigurableSolver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">ConfigurableSolver</a> config handle, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> inputs) =&gt; config -&gt; inputs -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISCondition\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISCondition</a>) -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"cegisForAllExcept","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:cegisForAllExcept"},{"display_html":"<a href=\"#v:cegisForAllExceptStdVC\">cegisForAllExceptStdVC</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) inputs config handle. (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u <a href=\"Grisette-Internal-Core-Control-Exception.html#t:VerificationConditions\" title=\"Grisette.Internal.Core.Control.Exception\">VerificationConditions</a> (), <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:ConfigurableSolver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">ConfigurableSolver</a> config handle, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> inputs) =&gt; config -&gt; inputs -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"cegisForAllExceptStdVC","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:cegisForAllExceptStdVC"},{"display_html":"<a href=\"#v:cegisForAllExceptVC\">cegisForAllExceptVC</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:UnionWithExcept\" title=\"Grisette.Internal.Core.Data.Class.Solver\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Internal-Core-Data-Class-PlainUnion.html#t:PlainUnion\" title=\"Grisette.Internal.Core.Data.Class.PlainUnion\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> inputs, <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:ConfigurableSolver\" title=\"Grisette.Internal.Core.Data.Class.Solver\">ConfigurableSolver</a> config handle, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> inputs) =&gt; config -&gt; inputs -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; u (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-Core-Control-Exception.html#t:VerificationConditions\" title=\"Grisette.Internal.Core.Control.Exception\">VerificationConditions</a> ())) -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Internal-Core-Data-Class-CEGISSolver.html#t:CEGISResult\" title=\"Grisette.Internal.Core.Data.Class.CEGISSolver\">CEGISResult</a> <a href=\"Grisette-Internal-Core-Data-Class-Solver.html#t:SolvingFailure\" title=\"Grisette.Internal.Core.Data.Class.Solver\">SolvingFailure</a>)","name":"cegisForAllExceptVC","module":"Grisette.Internal.Core.Data.Class.CEGISSolver","link":"Grisette-Internal-Core-Data-Class-CEGISSolver.html#v:cegisForAllExceptVC"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Union\">Union</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:UAny\">UAny</a> :: <span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Core-Data-UnionBase.html#t:UnionBase\" title=\"Grisette.Internal.Core.Data.UnionBase\">UnionBase</a> a -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a</li><li><a href=\"#v:UMrg\">UMrg</a> :: <span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a -&gt; <a href=\"Grisette-Internal-Core-Data-UnionBase.html#t:UnionBase\" title=\"Grisette.Internal.Core.Data.UnionBase\">UnionBase</a> a -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a</li></ul>","name":"Union UAny UMrg","module":"Grisette.Internal.Core.Control.Monad.Union","link":"Grisette-Internal-Core-Control-Monad-Union.html#t:Union"},{"display_html":"<a href=\"#v:unionUnaryOp\">unionUnaryOp</a> :: (a -&gt; a) -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a","name":"unionUnaryOp","module":"Grisette.Internal.Core.Control.Monad.Union","link":"Grisette-Internal-Core-Control-Monad-Union.html#v:unionUnaryOp"},{"display_html":"<a href=\"#v:unionBinOp\">unionBinOp</a> :: (a -&gt; a -&gt; a) -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a","name":"unionBinOp","module":"Grisette.Internal.Core.Control.Monad.Union","link":"Grisette-Internal-Core-Control-Monad-Union.html#v:unionBinOp"},{"display_html":"<a href=\"#v:liftUnion\">liftUnion</a> :: <span class=\"keyword\">forall</span> u a. (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> u) =&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a -&gt; u a","name":"liftUnion","module":"Grisette.Internal.Core.Control.Monad.Union","link":"Grisette-Internal-Core-Control-Monad-Union.html#v:liftUnion"},{"display_html":"<a href=\"#v:liftToMonadUnion\">liftToMonadUnion</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> u) =&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a -&gt; u a","name":"liftToMonadUnion","module":"Grisette.Internal.Core.Control.Monad.Union","link":"Grisette-Internal-Core-Control-Monad-Union.html#v:liftToMonadUnion"},{"display_html":"<a href=\"#v:unionBase\">unionBase</a> :: <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a -&gt; <a href=\"Grisette-Internal-Core-Data-UnionBase.html#t:UnionBase\" title=\"Grisette.Internal.Core.Data.UnionBase\">UnionBase</a> a","name":"unionBase","module":"Grisette.Internal.Core.Control.Monad.Union","link":"Grisette-Internal-Core-Control-Monad-Union.html#v:unionBase"},{"display_html":"<a href=\"#v:unionMergingStrategy\">unionMergingStrategy</a> :: <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a)","name":"unionMergingStrategy","module":"Grisette.Internal.Core.Control.Monad.Union","link":"Grisette-Internal-Core-Control-Monad-Union.html#v:unionMergingStrategy"},{"display_html":"<a href=\"#v:isMerged\">isMerged</a> :: <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"isMerged","module":"Grisette.Internal.Core.Control.Monad.Union","link":"Grisette-Internal-Core-Control-Monad-Union.html#v:isMerged"},{"display_html":"<a href=\"#v:unionSize\">unionSize</a> :: <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"unionSize","module":"Grisette.Internal.Core.Control.Monad.Union","link":"Grisette-Internal-Core-Control-Monad-Union.html#v:unionSize"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:BaseMonad\">BaseMonad</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) = (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> r -&gt; mode <span class=\"keyword\">where ...</span>","name":"BaseMonad","module":"Grisette.Internal.Unified.BaseMonad","link":"Grisette-Internal-Unified-BaseMonad.html#t:BaseMonad"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a =&gt; <a href=\"#t:SymOrd\">SymOrd</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:.-60-\">(.&lt;)</a> :: a -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:.-60--61-\">(.&lt;=)</a> :: a -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:.-62-\">(.&gt;)</a> :: a -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:.-62--61-\">(.&gt;=)</a> :: a -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symCompare\">symCompare</a> :: a -&gt; a -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a></li></ul>","name":"SymOrd .< .<= .> .>= symCompare $dm.< $dm.<= $dm.> $dm.>= $dmsymCompare","module":"Grisette.Internal.Core.Data.Class.SymOrd","link":"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq1\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq1</a> f, <span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> a =&gt; <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> (f a)) =&gt; <a href=\"#t:SymOrd1\">SymOrd1</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftSymCompare\">liftSymCompare</a> :: (a -&gt; b -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; f a -&gt; f b -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a></li></ul>","name":"SymOrd1 liftSymCompare","module":"Grisette.Internal.Core.Data.Class.SymOrd","link":"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd1"},{"display_html":"<a href=\"#v:symCompare1\">symCompare1</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd1\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd1</a> f, <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> a) =&gt; f a -&gt; f a -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>","name":"symCompare1","module":"Grisette.Internal.Core.Data.Class.SymOrd","link":"Grisette-Internal-Core-Data-Class-SymOrd.html#v:symCompare1"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq2\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq2</a> f, <span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> a =&gt; <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd1\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd1</a> (f a)) =&gt; <a href=\"#t:SymOrd2\">SymOrd2</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftSymCompare2\">liftSymCompare2</a> :: (a -&gt; b -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; (c -&gt; d -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; f a c -&gt; f b d -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a></li></ul>","name":"SymOrd2 liftSymCompare2","module":"Grisette.Internal.Core.Data.Class.SymOrd","link":"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd2"},{"display_html":"<a href=\"#v:symCompare2\">symCompare2</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd2\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd2</a> f, <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> b) =&gt; f a b -&gt; f a b -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>","name":"symCompare2","module":"Grisette.Internal.Core.Data.Class.SymOrd","link":"Grisette-Internal-Core-Data-Class-SymOrd.html#v:symCompare2"},{"display_html":"<a href=\"#v:symMax\">symMax</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ITEOp.html#t:ITEOp\" title=\"Grisette.Internal.Core.Data.Class.ITEOp\">ITEOp</a> a) =&gt; a -&gt; a -&gt; a","name":"symMax","module":"Grisette.Internal.Core.Data.Class.SymOrd","link":"Grisette-Internal-Core-Data-Class-SymOrd.html#v:symMax"},{"display_html":"<a href=\"#v:symMin\">symMin</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ITEOp.html#t:ITEOp\" title=\"Grisette.Internal.Core.Data.Class.ITEOp\">ITEOp</a> a) =&gt; a -&gt; a -&gt; a","name":"symMin","module":"Grisette.Internal.Core.Data.Class.SymOrd","link":"Grisette-Internal-Core-Data-Class-SymOrd.html#v:symMin"},{"display_html":"<a href=\"#v:mrgMax\">mrgMax</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m) =&gt; a -&gt; a -&gt; m a","name":"mrgMax","module":"Grisette.Internal.Core.Data.Class.SymOrd","link":"Grisette-Internal-Core-Data-Class-SymOrd.html#v:mrgMax"},{"display_html":"<a href=\"#v:mrgMin\">mrgMin</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m) =&gt; a -&gt; a -&gt; m a","name":"mrgMin","module":"Grisette.Internal.Core.Data.Class.SymOrd","link":"Grisette-Internal-Core-Data-Class-SymOrd.html#v:mrgMin"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:SymOrdArgs\">SymOrdArgs</a> arity a b","name":"SymOrdArgs SymOrdArgs0 SymOrdArgs1","module":"Grisette.Internal.Core.Data.Class.SymOrd","link":"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrdArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GSymOrd\">GSymOrd</a> arity (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:gsymCompare\">gsymCompare</a> :: <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrdArgs\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrdArgs</a> arity a b -&gt; f a -&gt; f b -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a></li></ul>","name":"GSymOrd gsymCompare","module":"Grisette.Internal.Core.Data.Class.SymOrd","link":"Grisette-Internal-Core-Data-Class-SymOrd.html#t:GSymOrd"},{"display_html":"<a href=\"#v:genericSymCompare\">genericSymCompare</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:GSymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">GSymOrd</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a)) =&gt; a -&gt; a -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>","name":"genericSymCompare","module":"Grisette.Internal.Core.Data.Class.SymOrd","link":"Grisette-Internal-Core-Data-Class-SymOrd.html#v:genericSymCompare"},{"display_html":"<a href=\"#v:genericLiftSymCompare\">genericLiftSymCompare</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f, <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:GSymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">GSymOrd</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f)) =&gt; (a -&gt; b -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; f a -&gt; f b -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>","name":"genericLiftSymCompare","module":"Grisette.Internal.Core.Data.Class.SymOrd","link":"Grisette-Internal-Core-Data-Class-SymOrd.html#v:genericLiftSymCompare"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; <a href=\"#t:MonadParallelUnion\">MonadParallelUnion</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:parBindUnion\">parBindUnion</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/deepseq-1.5.0.0/docs/Control-DeepSeq.html#t:NFData\" title=\"Control.DeepSeq\">NFData</a> b) =&gt; m a -&gt; (a -&gt; m b) -&gt; m b</li></ul>","name":"MonadParallelUnion parBindUnion","module":"Grisette.Experimental.MonadParallelUnion","link":"Grisette-Experimental-MonadParallelUnion.html#t:MonadParallelUnion"},{"display_html":"<a href=\"#v:-62--62--61-\">(&gt;&gt;=)</a> :: (<a href=\"Grisette-Experimental-MonadParallelUnion.html#t:MonadParallelUnion\" title=\"Grisette.Experimental.MonadParallelUnion\">MonadParallelUnion</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/deepseq-1.5.0.0/docs/Control-DeepSeq.html#t:NFData\" title=\"Control.DeepSeq\">NFData</a> b) =&gt; m a -&gt; (a -&gt; m b) -&gt; m b","name":">>=","module":"Grisette.Experimental.Qualified.ParallelUnionDo","link":"Grisette-Experimental-Qualified-ParallelUnionDo.html#v:-62--62--61-"},{"display_html":"<a href=\"#v:-62--62-\">(&gt;&gt;)</a> :: (<a href=\"Grisette-Experimental-MonadParallelUnion.html#t:MonadParallelUnion\" title=\"Grisette.Experimental.MonadParallelUnion\">MonadParallelUnion</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/deepseq-1.5.0.0/docs/Control-DeepSeq.html#t:NFData\" title=\"Control.DeepSeq\">NFData</a> b) =&gt; m a -&gt; m b -&gt; m b","name":">>","module":"Grisette.Experimental.Qualified.ParallelUnionDo","link":"Grisette-Experimental-Qualified-ParallelUnionDo.html#v:-62--62-"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; <a href=\"#t:SafeSymShift\">SafeSymShift</a> e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:safeSymShiftL\">safeSymShiftL</a> :: a -&gt; a -&gt; m a</li><li><a href=\"#v:safeSymShiftR\">safeSymShiftR</a> :: a -&gt; a -&gt; m a</li><li><a href=\"#v:safeSymStrictShiftL\">safeSymStrictShiftL</a> :: a -&gt; a -&gt; m a</li><li><a href=\"#v:safeSymStrictShiftR\">safeSymStrictShiftR</a> :: a -&gt; a -&gt; m a</li></ul>","name":"SafeSymShift safeSymShiftL safeSymShiftR safeSymStrictShiftL safeSymStrictShiftR","module":"Grisette.Internal.Core.Data.Class.SafeSymShift","link":"Grisette-Internal-Core-Data-Class-SafeSymShift.html#t:SafeSymShift"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; <a href=\"#t:SafeSymRotate\">SafeSymRotate</a> e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:safeSymRotateL\">safeSymRotateL</a> :: a -&gt; a -&gt; m a</li><li><a href=\"#v:safeSymRotateR\">safeSymRotateR</a> :: a -&gt; a -&gt; m a</li></ul>","name":"SafeSymRotate safeSymRotateL safeSymRotateR","module":"Grisette.Internal.Core.Data.Class.SafeSymRotate","link":"Grisette-Internal-Core-Data-Class-SafeSymRotate.html#t:SafeSymRotate"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ArithException\">ArithException</a><ul class=\"subs\"><li>= <a href=\"#v:Overflow\">Overflow</a></li><li>| <a href=\"#v:Underflow\">Underflow</a></li><li>| <a href=\"#v:DivideByZero\">DivideByZero</a></li></ul>","name":"ArithException Overflow Underflow DivideByZero","module":"Grisette.Internal.Core.Data.Class.SafeLinearArith","link":"Grisette-Internal-Core-Data-Class-SafeLinearArith.html#t:ArithException"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; <a href=\"#t:SafeLinearArith\">SafeLinearArith</a> e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:safeAdd\">safeAdd</a> :: a -&gt; a -&gt; m a</li><li><a href=\"#v:safeNeg\">safeNeg</a> :: a -&gt; m a</li><li><a href=\"#v:safeSub\">safeSub</a> :: a -&gt; a -&gt; m a</li></ul>","name":"SafeLinearArith safeAdd safeNeg safeSub","module":"Grisette.Internal.Core.Data.Class.SafeLinearArith","link":"Grisette-Internal-Core-Data-Class-SafeLinearArith.html#t:SafeLinearArith"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-IEEEFP.html#t:IEEEFPConvertible\" title=\"Grisette.Internal.Core.Data.Class.IEEEFP\">IEEEFPConvertible</a> a fp fprd) =&gt; <a href=\"#t:SafeFromFP\">SafeFromFP</a> e a fp fprd (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:safeFromFP\">safeFromFP</a> :: fprd -&gt; fp -&gt; m a</li></ul>","name":"SafeFromFP safeFromFP","module":"Grisette.Internal.Core.Data.Class.SafeFromFP","link":"Grisette-Internal-Core-Data-Class-SafeFromFP.html#t:SafeFromFP"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-BitCast.html#t:BitCastOr\" title=\"Grisette.Internal.Core.Data.Class.BitCast\">BitCastOr</a> a b) =&gt; <a href=\"#t:SafeBitCast\">SafeBitCast</a> e a b (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:safeBitCast\">safeBitCast</a> :: a -&gt; m b</li></ul>","name":"SafeBitCast safeBitCast","module":"Grisette.Internal.Core.Data.Class.SafeBitCast","link":"Grisette-Internal-Core-Data-Class-SafeBitCast.html#t:SafeBitCast"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:FreshIndex\">FreshIndex</a> = <a href=\"#v:FreshIndex\">FreshIndex</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"FreshIndex FreshIndex","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#t:FreshIndex"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"#t:MonadFresh\">MonadFresh</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:getFreshIndex\">getFreshIndex</a> :: m <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:FreshIndex\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">FreshIndex</a></li><li><a href=\"#v:setFreshIndex\">setFreshIndex</a> :: <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:FreshIndex\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">FreshIndex</a> -&gt; m ()</li><li><a href=\"#v:getIdentifier\">getIdentifier</a> :: m <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a></li><li><a href=\"#v:localIdentifier\">localIdentifier</a> :: (<a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a>) -&gt; m a -&gt; m a</li></ul>","name":"MonadFresh getFreshIndex setFreshIndex getIdentifier localIdentifier","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh"},{"display_html":"<a href=\"#v:nextFreshIndex\">nextFreshIndex</a> :: <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m =&gt; m <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:FreshIndex\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">FreshIndex</a>","name":"nextFreshIndex","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#v:nextFreshIndex"},{"display_html":"<a href=\"#v:liftFresh\">liftFresh</a> :: <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m =&gt; <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:Fresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">Fresh</a> a -&gt; m a","name":"liftFresh","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#v:liftFresh"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:FreshT\">FreshT</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) a = <a href=\"#v:FreshT\">FreshT</a> {<ul class=\"subs\"><li><a href=\"#v:runFreshTFromIndex\">runFreshTFromIndex</a> :: <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:FreshIndex\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">FreshIndex</a> -&gt; m (a, <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:FreshIndex\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">FreshIndex</a>)</li></ul>}","name":"FreshT FreshT runFreshTFromIndex","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#t:FreshT"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Fresh\">Fresh</a> = <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:FreshT\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">FreshT</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Functor-Identity.html#t:Identity\" title=\"Data.Functor.Identity\">Identity</a>","name":"Fresh","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#t:Fresh"},{"display_html":"<a href=\"#v:runFreshT\">runFreshT</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:FreshT\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">FreshT</a> m a -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; m a","name":"runFreshT","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#v:runFreshT"},{"display_html":"<a href=\"#v:runFresh\">runFresh</a> :: <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:Fresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">Fresh</a> a -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; a","name":"runFresh","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#v:runFresh"},{"display_html":"<a href=\"#v:mrgRunFreshT\">mrgRunFreshT</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:FreshT\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">FreshT</a> m a -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; m a","name":"mrgRunFreshT","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#v:mrgRunFreshT"},{"display_html":"<a href=\"#v:freshString\">freshString</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:IsString\" title=\"Data.String\">IsString</a> s) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; m s","name":"freshString","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#v:freshString"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a =&gt; <a href=\"#t:GenSym\">GenSym</a> spec a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fresh\">fresh</a> :: <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m =&gt; spec -&gt; m (<a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a)</li></ul>","name":"GenSym fresh $dmfresh","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#t:GenSym"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GenSymSimple\">GenSymSimple</a> spec a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:simpleFresh\">simpleFresh</a> :: <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m =&gt; spec -&gt; m a</li></ul>","name":"GenSymSimple simpleFresh","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#t:GenSymSimple"},{"display_html":"<a href=\"#v:genSym\">genSym</a> :: <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:GenSym\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">GenSym</a> spec a =&gt; spec -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a","name":"genSym","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#v:genSym"},{"display_html":"<a href=\"#v:genSymSimple\">genSymSimple</a> :: <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:GenSymSimple\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">GenSymSimple</a> spec a =&gt; spec -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; a","name":"genSymSimple","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#v:genSymSimple"},{"display_html":"<a href=\"#v:derivedNoSpecFresh\">derivedNoSpecFresh</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, GenSymNoSpec (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a), <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m) =&gt; () -&gt; m (<a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a)","name":"derivedNoSpecFresh","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#v:derivedNoSpecFresh"},{"display_html":"<a href=\"#v:derivedNoSpecSimpleFresh\">derivedNoSpecSimpleFresh</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, GenSymSimpleNoSpec (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a), <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m) =&gt; () -&gt; m a","name":"derivedNoSpecSimpleFresh","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#v:derivedNoSpecSimpleFresh"},{"display_html":"<a href=\"#v:derivedSameShapeSimpleFresh\">derivedSameShapeSimpleFresh</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, GenSymSameShape (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a), <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m) =&gt; a -&gt; m a","name":"derivedSameShapeSimpleFresh","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#v:derivedSameShapeSimpleFresh"},{"display_html":"<a href=\"#v:chooseFresh\">chooseFresh</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m) =&gt; [a] -&gt; m (<a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a)","name":"chooseFresh","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#v:chooseFresh"},{"display_html":"<a href=\"#v:chooseSimpleFresh\">chooseSimpleFresh</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m) =&gt; [a] -&gt; m a","name":"chooseSimpleFresh","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#v:chooseSimpleFresh"},{"display_html":"<a href=\"#v:chooseUnionFresh\">chooseUnionFresh</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m) =&gt; [<a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a] -&gt; m (<a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a)","name":"chooseUnionFresh","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#v:chooseUnionFresh"},{"display_html":"<a href=\"#v:choose\">choose</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a =&gt; [a] -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a","name":"choose","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#v:choose"},{"display_html":"<a href=\"#v:chooseSimple\">chooseSimple</a> :: <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable</a> a =&gt; [a] -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; a","name":"chooseSimple","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#v:chooseSimple"},{"display_html":"<a href=\"#v:chooseUnion\">chooseUnion</a> :: <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a =&gt; [<a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a] -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a","name":"chooseUnion","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#v:chooseUnion"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ListSpec\">ListSpec</a> spec = <a href=\"#v:ListSpec\">ListSpec</a> {<ul class=\"subs\"><li><a href=\"#v:genListMinLength\">genListMinLength</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li><a href=\"#v:genListMaxLength\">genListMaxLength</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li><a href=\"#v:genListSubSpec\">genListSubSpec</a> :: spec</li></ul>}","name":"ListSpec ListSpec genListMinLength genListMaxLength genListSubSpec","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#t:ListSpec"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SimpleListSpec\">SimpleListSpec</a> spec = <a href=\"#v:SimpleListSpec\">SimpleListSpec</a> {<ul class=\"subs\"><li><a href=\"#v:genSimpleListLength\">genSimpleListLength</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li><a href=\"#v:genSimpleListSubSpec\">genSimpleListSubSpec</a> :: spec</li></ul>}","name":"SimpleListSpec SimpleListSpec genSimpleListLength genSimpleListSubSpec","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#t:SimpleListSpec"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:EnumGenBound\">EnumGenBound</a> a = <a href=\"#v:EnumGenBound\">EnumGenBound</a> a a","name":"EnumGenBound EnumGenBound","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#t:EnumGenBound"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:EnumGenUpperBound\">EnumGenUpperBound</a> a = <a href=\"#v:EnumGenUpperBound\">EnumGenUpperBound</a> a","name":"EnumGenUpperBound EnumGenUpperBound","module":"Grisette.Internal.Core.Data.Class.GenSym","link":"Grisette-Internal-Core-Data-Class-GenSym.html#t:EnumGenUpperBound"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Prim\">Prim</a> a = (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Show\" title=\"Prelude\">Show</a> a, <a href=\"https://hackage.haskell.org/package/binary-0.8.9.2/docs/Data-Binary.html#t:Binary\" title=\"Data.Binary\">Binary</a> a, <a href=\"https://hackage.haskell.org/package/bytes-0.17.3/docs/Data-Bytes-Serial.html#t:Serial\" title=\"Data.Bytes.Serial\">Serial</a> a, <a href=\"https://hackage.haskell.org/package/cereal-0.5.8.3/docs/Data-Serialize.html#t:Serialize\" title=\"Data.Serialize\">Serialize</a> a, <a href=\"https://hackage.haskell.org/package/deepseq-1.5.0.0/docs/Control-DeepSeq.html#t:NFData\" title=\"Control.DeepSeq\">NFData</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SubstSym.html#t:SubstSym\" title=\"Grisette.Internal.Core.Data.Class.SubstSym\">SubstSym</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> a, <a href=\"Grisette-Internal-SymPrim-AllSyms.html#t:AllSyms\" title=\"Grisette.Internal.SymPrim.AllSyms\">AllSyms</a> a, <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> a, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Lift\" title=\"Language.Haskell.TH.Syntax\">Lift</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> a)","name":"Prim","module":"Grisette.Internal.SymPrim.SymPrim","link":"Grisette-Internal-SymPrim-SymPrim.html#t:Prim"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymPrim\">SymPrim</a> a = (<a href=\"Grisette-Internal-SymPrim-SymPrim.html#t:Prim\" title=\"Grisette.Internal.SymPrim.SymPrim\">Prim</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ITEOp.html#t:ITEOp\" title=\"Grisette.Internal.Core.Data.Class.ITEOp\">ITEOp</a> a, <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:GenSymSimple\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">GenSymSimple</a> a a)","name":"SymPrim","module":"Grisette.Internal.SymPrim.SymPrim","link":"Grisette-Internal-SymPrim-SymPrim.html#t:SymPrim"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:BasicSymPrim\">BasicSymPrim</a> a = (<a href=\"Grisette-Internal-SymPrim-SymPrim.html#t:SymPrim\" title=\"Grisette.Internal.SymPrim.SymPrim\">SymPrim</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:GenSymSimple\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">GenSymSimple</a> () a, <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:ConType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConType</a> a) a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:ConRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConRep</a> a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:ConType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConType</a> a) a, <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon</a> a (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:ConType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConType</a> a), <a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">ToSym</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:ConType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConType</a> a) a, <a href=\"Grisette-Internal-Core-Data-Class-Function.html#t:Apply\" title=\"Grisette.Internal.Core.Data.Class.Function\">Apply</a> a, a <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"Grisette-Internal-Core-Data-Class-Function.html#t:FunType\" title=\"Grisette.Internal.Core.Data.Class.Function\">FunType</a> a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedNonFuncPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedNonFuncPrim</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:ConType\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">ConType</a> a))","name":"BasicSymPrim","module":"Grisette.Internal.SymPrim.SymPrim","link":"Grisette-Internal-SymPrim-SymPrim.html#t:BasicSymPrim"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-SymPrim-SymPrim.html#t:Prim\" title=\"Grisette.Internal.SymPrim.SymPrim\">Prim</a> (<a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode), <a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:UnifiedConRep\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">UnifiedConRep</a> (<a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode), <a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:UnifiedSymRep\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">UnifiedSymRep</a> (<a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode), <a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:ConType\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">ConType</a> (<a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode) <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>, <a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:SymType\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">SymType</a> (<a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode) <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>, <a href=\"Grisette-Internal-Unified-BaseConstraint.html#t:ConSymConversion\" title=\"Grisette.Internal.Unified.BaseConstraint\">ConSymConversion</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> (<a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode), <a href=\"Grisette-Internal-Core-Data-Class-LogicalOp.html#t:LogicalOp\" title=\"Grisette.Internal.Core.Data.Class.LogicalOp\">LogicalOp</a> (<a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode)) =&gt; <a href=\"#t:UnifiedBool\">UnifiedBool</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:GetBool\">GetBool</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) = (bool :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> bool -&gt; mode</li></ul>","name":"UnifiedBool GetBool","module":"Grisette.Internal.Unified.UnifiedBool","link":"Grisette-Internal-Unified-UnifiedBool.html#t:UnifiedBool"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSymOrd\">UnifiedSymOrd</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSymOrd\">withBaseSymOrd</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:IsConMode\" title=\"Grisette.Internal.Unified.EvalModeTag\">IsConMode</a> mode) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> a) (<a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> a) =&gt; r) -&gt; r</li></ul>","name":"UnifiedSymOrd withBaseSymOrd","module":"Grisette.Internal.Unified.Class.UnifiedSymOrd","link":"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSymOrd1\">UnifiedSymOrd1</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSymOrd1\">withBaseSymOrd1</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:IsConMode\" title=\"Grisette.Internal.Unified.EvalModeTag\">IsConMode</a> mode) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Functor-Classes.html#t:Ord1\" title=\"Data.Functor.Classes\">Ord1</a> f) (<a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd1\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd1</a> f) =&gt; r) -&gt; r</li></ul>","name":"UnifiedSymOrd1 withBaseSymOrd1","module":"Grisette.Internal.Unified.Class.UnifiedSymOrd","link":"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd1"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSymOrd2\">UnifiedSymOrd2</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSymOrd2\">withBaseSymOrd2</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:IsConMode\" title=\"Grisette.Internal.Unified.EvalModeTag\">IsConMode</a> mode) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Functor-Classes.html#t:Ord2\" title=\"Data.Functor.Classes\">Ord2</a> f) (<a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd2\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd2</a> f) =&gt; r) -&gt; r</li></ul>","name":"UnifiedSymOrd2 withBaseSymOrd2","module":"Grisette.Internal.Unified.Class.UnifiedSymOrd","link":"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd2"},{"display_html":"<a href=\"#v:.-60--61-\">(.&lt;=)</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd</a> mode a) =&gt; a -&gt; a -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode","name":".<=","module":"Grisette.Internal.Unified.Class.UnifiedSymOrd","link":"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#v:.-60--61-"},{"display_html":"<a href=\"#v:.-60-\">(.&lt;)</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd</a> mode a) =&gt; a -&gt; a -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode","name":".<","module":"Grisette.Internal.Unified.Class.UnifiedSymOrd","link":"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#v:.-60-"},{"display_html":"<a href=\"#v:.-62--61-\">(.&gt;=)</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd</a> mode a) =&gt; a -&gt; a -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode","name":".>=","module":"Grisette.Internal.Unified.Class.UnifiedSymOrd","link":"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#v:.-62--61-"},{"display_html":"<a href=\"#v:.-62-\">(.&gt;)</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd</a> mode a) =&gt; a -&gt; a -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode","name":".>","module":"Grisette.Internal.Unified.Class.UnifiedSymOrd","link":"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#v:.-62-"},{"display_html":"<a href=\"#v:symCompare\">symCompare</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a (ctx :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd</a> mode a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> ctx) =&gt; a -&gt; a -&gt; <a href=\"Grisette-Internal-Unified-BaseMonad.html#t:BaseMonad\" title=\"Grisette.Internal.Unified.BaseMonad\">BaseMonad</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>","name":"symCompare","module":"Grisette.Internal.Unified.Class.UnifiedSymOrd","link":"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#v:symCompare"},{"display_html":"<a href=\"#v:liftSymCompare\">liftSymCompare</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) f a b. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd1\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd1</a> mode f) =&gt; (a -&gt; b -&gt; <a href=\"Grisette-Internal-Unified-BaseMonad.html#t:BaseMonad\" title=\"Grisette.Internal.Unified.BaseMonad\">BaseMonad</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; f a -&gt; f b -&gt; <a href=\"Grisette-Internal-Unified-BaseMonad.html#t:BaseMonad\" title=\"Grisette.Internal.Unified.BaseMonad\">BaseMonad</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>","name":"liftSymCompare","module":"Grisette.Internal.Unified.Class.UnifiedSymOrd","link":"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#v:liftSymCompare"},{"display_html":"<a href=\"#v:symCompare1\">symCompare1</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) f a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd</a> mode a, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd1\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd1</a> mode f) =&gt; f a -&gt; f a -&gt; <a href=\"Grisette-Internal-Unified-BaseMonad.html#t:BaseMonad\" title=\"Grisette.Internal.Unified.BaseMonad\">BaseMonad</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>","name":"symCompare1","module":"Grisette.Internal.Unified.Class.UnifiedSymOrd","link":"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#v:symCompare1"},{"display_html":"<a href=\"#v:liftSymCompare2\">liftSymCompare2</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) f a b c d. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd2\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd2</a> mode f) =&gt; (a -&gt; b -&gt; <a href=\"Grisette-Internal-Unified-BaseMonad.html#t:BaseMonad\" title=\"Grisette.Internal.Unified.BaseMonad\">BaseMonad</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; (c -&gt; d -&gt; <a href=\"Grisette-Internal-Unified-BaseMonad.html#t:BaseMonad\" title=\"Grisette.Internal.Unified.BaseMonad\">BaseMonad</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; f a c -&gt; f b d -&gt; <a href=\"Grisette-Internal-Unified-BaseMonad.html#t:BaseMonad\" title=\"Grisette.Internal.Unified.BaseMonad\">BaseMonad</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>","name":"liftSymCompare2","module":"Grisette.Internal.Unified.Class.UnifiedSymOrd","link":"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#v:liftSymCompare2"},{"display_html":"<a href=\"#v:symCompare2\">symCompare2</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) f a b. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd</a> mode a, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd</a> mode b, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd2\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd2</a> mode f) =&gt; f a b -&gt; f a b -&gt; <a href=\"Grisette-Internal-Unified-BaseMonad.html#t:BaseMonad\" title=\"Grisette.Internal.Unified.BaseMonad\">BaseMonad</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>","name":"symCompare2","module":"Grisette.Internal.Unified.Class.UnifiedSymOrd","link":"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#v:symCompare2"},{"display_html":"<a href=\"#v:symMax\">symMax</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a. (<a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd</a> mode a, <a href=\"Grisette-Internal-Unified-Class-UnifiedITEOp.html#t:UnifiedITEOp\" title=\"Grisette.Internal.Unified.Class.UnifiedITEOp\">UnifiedITEOp</a> mode a, <a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode) =&gt; a -&gt; a -&gt; a","name":"symMax","module":"Grisette.Internal.Unified.Class.UnifiedSymOrd","link":"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#v:symMax"},{"display_html":"<a href=\"#v:symMin\">symMin</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a. (<a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd</a> mode a, <a href=\"Grisette-Internal-Unified-Class-UnifiedITEOp.html#t:UnifiedITEOp\" title=\"Grisette.Internal.Unified.Class.UnifiedITEOp\">UnifiedITEOp</a> mode a, <a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode) =&gt; a -&gt; a -&gt; a","name":"symMin","module":"Grisette.Internal.Unified.Class.UnifiedSymOrd","link":"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#v:symMin"},{"display_html":"<a href=\"#v:mrgMax\">mrgMax</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a m. (<a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd</a> mode a, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedBranching\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedBranching</a> mode m, <a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; a -&gt; a -&gt; m a","name":"mrgMax","module":"Grisette.Internal.Unified.Class.UnifiedSymOrd","link":"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#v:mrgMax"},{"display_html":"<a href=\"#v:mrgMin\">mrgMin</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a m. (<a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd</a> mode a, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedBranching\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedBranching</a> mode m, <a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; a -&gt; a -&gt; m a","name":"mrgMin","module":"Grisette.Internal.Unified.Class.UnifiedSymOrd","link":"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#v:mrgMin"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSymEq\">UnifiedSymEq</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSymEq\">withBaseSymEq</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:IsConMode\" title=\"Grisette.Internal.Unified.EvalModeTag\">IsConMode</a> mode) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) (<a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a) =&gt; r) -&gt; r</li></ul>","name":"UnifiedSymEq withBaseSymEq","module":"Grisette.Internal.Unified.Class.UnifiedSymEq","link":"Grisette-Internal-Unified-Class-UnifiedSymEq.html#t:UnifiedSymEq"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Unified-Class-UnifiedSymEq.html#t:UnifiedSymEq\" title=\"Grisette.Internal.Unified.Class.UnifiedSymEq\">UnifiedSymEq</a> mode a =&gt; <a href=\"Grisette-Internal-Unified-Class-UnifiedSymEq.html#t:UnifiedSymEq\" title=\"Grisette.Internal.Unified.Class.UnifiedSymEq\">UnifiedSymEq</a> mode (f a)) =&gt; <a href=\"#t:UnifiedSymEq1\">UnifiedSymEq1</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSymEq1\">withBaseSymEq1</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:IsConMode\" title=\"Grisette.Internal.Unified.EvalModeTag\">IsConMode</a> mode) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Functor-Classes.html#t:Eq1\" title=\"Data.Functor.Classes\">Eq1</a> f) (<a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq1\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq1</a> f) =&gt; r) -&gt; r</li></ul>","name":"UnifiedSymEq1 withBaseSymEq1","module":"Grisette.Internal.Unified.Class.UnifiedSymEq","link":"Grisette-Internal-Unified-Class-UnifiedSymEq.html#t:UnifiedSymEq1"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Internal-Unified-Class-UnifiedSymEq.html#t:UnifiedSymEq\" title=\"Grisette.Internal.Unified.Class.UnifiedSymEq\">UnifiedSymEq</a> mode a =&gt; <a href=\"Grisette-Internal-Unified-Class-UnifiedSymEq.html#t:UnifiedSymEq1\" title=\"Grisette.Internal.Unified.Class.UnifiedSymEq\">UnifiedSymEq1</a> mode (f a)) =&gt; <a href=\"#t:UnifiedSymEq2\">UnifiedSymEq2</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSymEq2\">withBaseSymEq2</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:IsConMode\" title=\"Grisette.Internal.Unified.EvalModeTag\">IsConMode</a> mode) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Functor-Classes.html#t:Eq2\" title=\"Data.Functor.Classes\">Eq2</a> f) (<a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq2\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq2</a> f) =&gt; r) -&gt; r</li></ul>","name":"UnifiedSymEq2 withBaseSymEq2","module":"Grisette.Internal.Unified.Class.UnifiedSymEq","link":"Grisette-Internal-Unified-Class-UnifiedSymEq.html#t:UnifiedSymEq2"},{"display_html":"<a href=\"#v:.-61--61-\">(.==)</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymEq.html#t:UnifiedSymEq\" title=\"Grisette.Internal.Unified.Class.UnifiedSymEq\">UnifiedSymEq</a> mode a) =&gt; a -&gt; a -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode","name":".==","module":"Grisette.Internal.Unified.Class.UnifiedSymEq","link":"Grisette-Internal-Unified-Class-UnifiedSymEq.html#v:.-61--61-"},{"display_html":"<a href=\"#v:.-47--61-\">(./=)</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymEq.html#t:UnifiedSymEq\" title=\"Grisette.Internal.Unified.Class.UnifiedSymEq\">UnifiedSymEq</a> mode a) =&gt; a -&gt; a -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode","name":"./=","module":"Grisette.Internal.Unified.Class.UnifiedSymEq","link":"Grisette-Internal-Unified-Class-UnifiedSymEq.html#v:.-47--61-"},{"display_html":"<a href=\"#v:symDistinct\">symDistinct</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymEq.html#t:UnifiedSymEq\" title=\"Grisette.Internal.Unified.Class.UnifiedSymEq\">UnifiedSymEq</a> mode a) =&gt; [a] -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode","name":"symDistinct","module":"Grisette.Internal.Unified.Class.UnifiedSymEq","link":"Grisette-Internal-Unified-Class-UnifiedSymEq.html#v:symDistinct"},{"display_html":"<a href=\"#v:liftSymEq\">liftSymEq</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) f a b. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymEq.html#t:UnifiedSymEq1\" title=\"Grisette.Internal.Unified.Class.UnifiedSymEq\">UnifiedSymEq1</a> mode f) =&gt; (a -&gt; b -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode) -&gt; f a -&gt; f b -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode","name":"liftSymEq","module":"Grisette.Internal.Unified.Class.UnifiedSymEq","link":"Grisette-Internal-Unified-Class-UnifiedSymEq.html#v:liftSymEq"},{"display_html":"<a href=\"#v:symEq1\">symEq1</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) f a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymEq.html#t:UnifiedSymEq\" title=\"Grisette.Internal.Unified.Class.UnifiedSymEq\">UnifiedSymEq</a> mode a, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymEq.html#t:UnifiedSymEq1\" title=\"Grisette.Internal.Unified.Class.UnifiedSymEq\">UnifiedSymEq1</a> mode f) =&gt; f a -&gt; f a -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode","name":"symEq1","module":"Grisette.Internal.Unified.Class.UnifiedSymEq","link":"Grisette-Internal-Unified-Class-UnifiedSymEq.html#v:symEq1"},{"display_html":"<a href=\"#v:liftSymEq2\">liftSymEq2</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) f a b c d. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymEq.html#t:UnifiedSymEq2\" title=\"Grisette.Internal.Unified.Class.UnifiedSymEq\">UnifiedSymEq2</a> mode f) =&gt; (a -&gt; b -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode) -&gt; (c -&gt; d -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode) -&gt; f a c -&gt; f b d -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode","name":"liftSymEq2","module":"Grisette.Internal.Unified.Class.UnifiedSymEq","link":"Grisette-Internal-Unified-Class-UnifiedSymEq.html#v:liftSymEq2"},{"display_html":"<a href=\"#v:symEq2\">symEq2</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) f a b. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymEq.html#t:UnifiedSymEq\" title=\"Grisette.Internal.Unified.Class.UnifiedSymEq\">UnifiedSymEq</a> mode a, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymEq.html#t:UnifiedSymEq\" title=\"Grisette.Internal.Unified.Class.UnifiedSymEq\">UnifiedSymEq</a> mode b, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymEq.html#t:UnifiedSymEq2\" title=\"Grisette.Internal.Unified.Class.UnifiedSymEq\">UnifiedSymEq2</a> mode f) =&gt; f a b -&gt; f a b -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode","name":"symEq2","module":"Grisette.Internal.Unified.Class.UnifiedSymEq","link":"Grisette-Internal-Unified-Class-UnifiedSymEq.html#v:symEq2"},{"display_html":"<a href=\"#v:symIte\">symIte</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) v. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedITEOp.html#t:UnifiedITEOp\" title=\"Grisette.Internal.Unified.Class.UnifiedITEOp\">UnifiedITEOp</a> mode v) =&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode -&gt; v -&gt; v -&gt; v","name":"symIte","module":"Grisette.Internal.Unified.Class.UnifiedITEOp","link":"Grisette-Internal-Unified-Class-UnifiedITEOp.html#v:symIte"},{"display_html":"<a href=\"#v:symIteMerge\">symIteMerge</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) v. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedITEOp.html#t:UnifiedITEOp\" title=\"Grisette.Internal.Unified.Class.UnifiedITEOp\">UnifiedITEOp</a> mode v, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> v) =&gt; <a href=\"Grisette-Internal-Unified-BaseMonad.html#t:BaseMonad\" title=\"Grisette.Internal.Unified.BaseMonad\">BaseMonad</a> mode v -&gt; v","name":"symIteMerge","module":"Grisette.Internal.Unified.Class.UnifiedITEOp","link":"Grisette-Internal-Unified-Class-UnifiedITEOp.html#v:symIteMerge"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedITEOp\">UnifiedITEOp</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) v <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseITEOp\">withBaseITEOp</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:IsConMode\" title=\"Grisette.Internal.Unified.EvalModeTag\">IsConMode</a> mode) () (<a href=\"Grisette-Internal-Core-Data-Class-ITEOp.html#t:ITEOp\" title=\"Grisette.Internal.Core.Data.Class.ITEOp\">ITEOp</a> v) =&gt; r) -&gt; r</li></ul>","name":"UnifiedITEOp withBaseITEOp","module":"Grisette.Internal.Unified.Class.UnifiedITEOp","link":"Grisette-Internal-Unified-Class-UnifiedITEOp.html#t:UnifiedITEOp"},{"display_html":"<a href=\"#v:forallSet\">forallSet</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:ConstantSymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">ConstantSymbolSet</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"forallSet","module":"Grisette.Internal.SymPrim.Quantifier","link":"Grisette-Internal-SymPrim-Quantifier.html#v:forallSet"},{"display_html":"<a href=\"#v:forallSym\">forallSym</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> a) =&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"forallSym","module":"Grisette.Internal.SymPrim.Quantifier","link":"Grisette-Internal-SymPrim-Quantifier.html#v:forallSym"},{"display_html":"<a href=\"#v:existsSet\">existsSet</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:ConstantSymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">ConstantSymbolSet</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"existsSet","module":"Grisette.Internal.SymPrim.Quantifier","link":"Grisette-Internal-SymPrim-Quantifier.html#v:existsSet"},{"display_html":"<a href=\"#v:existsSym\">existsSym</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> a) =&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"existsSym","module":"Grisette.Internal.SymPrim.Quantifier","link":"Grisette-Internal-SymPrim-Quantifier.html#v:existsSym"},{"display_html":"<a href=\"#v:forallFresh\">forallFresh</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> v, <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m, <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:GenSym\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">GenSym</a> spec v, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; spec -&gt; (v -&gt; <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:FreshT\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">FreshT</a> <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; m <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"forallFresh","module":"Grisette.Internal.SymPrim.Quantifier","link":"Grisette-Internal-SymPrim-Quantifier.html#v:forallFresh"},{"display_html":"<a href=\"#v:existsFresh\">existsFresh</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> v, <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m, <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:GenSym\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">GenSym</a> spec v, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; spec -&gt; (v -&gt; <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:FreshT\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">FreshT</a> <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; m <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"existsFresh","module":"Grisette.Internal.SymPrim.Quantifier","link":"Grisette-Internal-SymPrim-Quantifier.html#v:existsFresh"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; <a href=\"#t:UnifiedBranching\">UnifiedBranching</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseBranching\">withBaseBranching</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:IsConMode\" title=\"Grisette.Internal.Unified.EvalModeTag\">IsConMode</a> mode) (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> m) =&gt; r) -&gt; r</li></ul>","name":"UnifiedBranching withBaseBranching","module":"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable","link":"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedBranching"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a =&gt; <a href=\"#t:UnifiedSimpleMergeable\">UnifiedSimpleMergeable</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSimpleMergeable\">withBaseSimpleMergeable</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:IsConMode\" title=\"Grisette.Internal.Unified.EvalModeTag\">IsConMode</a> mode) () (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable</a> a) =&gt; r) -&gt; r</li></ul>","name":"UnifiedSimpleMergeable withBaseSimpleMergeable","module":"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable","link":"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedSimpleMergeable"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSimpleMergeable1\">UnifiedSimpleMergeable1</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSimpleMergeable1\">withBaseSimpleMergeable1</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:IsConMode\" title=\"Grisette.Internal.Unified.EvalModeTag\">IsConMode</a> mode) () (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable1\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable1</a> f) =&gt; r) -&gt; r</li></ul>","name":"UnifiedSimpleMergeable1 withBaseSimpleMergeable1","module":"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable","link":"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedSimpleMergeable1"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSimpleMergeable2\">UnifiedSimpleMergeable2</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSimpleMergeable2\">withBaseSimpleMergeable2</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:IsConMode\" title=\"Grisette.Internal.Unified.EvalModeTag\">IsConMode</a> mode) () (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable2\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable2</a> f) =&gt; r) -&gt; r</li></ul>","name":"UnifiedSimpleMergeable2 withBaseSimpleMergeable2","module":"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable","link":"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedSimpleMergeable2"},{"display_html":"<a href=\"#v:mrgIf\">mrgIf</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a m. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedBranching\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedBranching</a> mode m) =&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode -&gt; m a -&gt; m a -&gt; m a","name":"mrgIf","module":"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable","link":"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#v:mrgIf"},{"display_html":"<a href=\"#v:liftBaseMonad\">liftBaseMonad</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a m. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedBranching\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedBranching</a> mode m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; <a href=\"Grisette-Internal-Unified-BaseMonad.html#t:BaseMonad\" title=\"Grisette.Internal.Unified.BaseMonad\">BaseMonad</a> mode a -&gt; m a","name":"liftBaseMonad","module":"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable","link":"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#v:liftBaseMonad"},{"display_html":"<a href=\"#v:mrgIte\">mrgIte</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedSimpleMergeable\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedSimpleMergeable</a> mode a) =&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode -&gt; a -&gt; a -&gt; a","name":"mrgIte","module":"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable","link":"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#v:mrgIte"},{"display_html":"<a href=\"#v:mrgIte1\">mrgIte1</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) f a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedSimpleMergeable1\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedSimpleMergeable1</a> mode f, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedSimpleMergeable\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedSimpleMergeable</a> mode a) =&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode -&gt; f a -&gt; f a -&gt; f a","name":"mrgIte1","module":"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable","link":"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#v:mrgIte1"},{"display_html":"<a href=\"#v:liftMrgIte\">liftMrgIte</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) f a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedSimpleMergeable1\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedSimpleMergeable1</a> mode f) =&gt; (<a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode -&gt; a -&gt; a -&gt; a) -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode -&gt; f a -&gt; f a -&gt; f a","name":"liftMrgIte","module":"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable","link":"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#v:liftMrgIte"},{"display_html":"<a href=\"#v:mrgIte2\">mrgIte2</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) f a b. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedSimpleMergeable2\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedSimpleMergeable2</a> mode f, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedSimpleMergeable\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedSimpleMergeable</a> mode a, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedSimpleMergeable\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedSimpleMergeable</a> mode b) =&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode -&gt; f a b -&gt; f a b -&gt; f a b","name":"mrgIte2","module":"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable","link":"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#v:mrgIte2"},{"display_html":"<a href=\"#v:liftMrgIte2\">liftMrgIte2</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) f a b. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedSimpleMergeable2\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedSimpleMergeable2</a> mode f) =&gt; (<a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode -&gt; a -&gt; a -&gt; a) -&gt; (<a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode -&gt; b -&gt; b -&gt; b) -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode -&gt; f a b -&gt; f a b -&gt; f a b","name":"liftMrgIte2","module":"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable","link":"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#v:liftMrgIte2"},{"display_html":"<a href=\"#v:simpleMerge\">simpleMerge</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedSimpleMergeable\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedSimpleMergeable</a> mode a) =&gt; <a href=\"Grisette-Internal-Unified-BaseMonad.html#t:BaseMonad\" title=\"Grisette.Internal.Unified.BaseMonad\">BaseMonad</a> mode a -&gt; a","name":"simpleMerge","module":"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable","link":"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#v:simpleMerge"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:UnifiedPrim\">UnifiedPrim</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a = (<a href=\"Grisette-Internal-SymPrim-SymPrim.html#t:Prim\" title=\"Grisette.Internal.SymPrim.SymPrim\">Prim</a> a, <a href=\"Grisette-Internal-Unified-Class-UnifiedITEOp.html#t:UnifiedITEOp\" title=\"Grisette.Internal.Unified.Class.UnifiedITEOp\">UnifiedITEOp</a> mode a, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymEq.html#t:UnifiedSymEq\" title=\"Grisette.Internal.Unified.Class.UnifiedSymEq\">UnifiedSymEq</a> mode a, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd</a> mode a)","name":"UnifiedPrim","module":"Grisette.Internal.Unified.UnifiedPrim","link":"Grisette-Internal-Unified-UnifiedPrim.html#t:UnifiedPrim"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:UnifiedBasicPrim\">UnifiedBasicPrim</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a = (<a href=\"Grisette-Internal-Unified-UnifiedPrim.html#t:UnifiedPrim\" title=\"Grisette.Internal.Unified.UnifiedPrim\">UnifiedPrim</a> mode a, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedSimpleMergeable\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedSimpleMergeable</a> mode a, <a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:UnifiedConRep\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">UnifiedConRep</a> a, <a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:UnifiedSymRep\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">UnifiedSymRep</a> a, <a href=\"Grisette-Internal-Unified-Class-UnifiedSolvable.html#t:UnifiedSolvable\" title=\"Grisette.Internal.Unified.Class.UnifiedSolvable\">UnifiedSolvable</a> mode a (<a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:ConType\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">ConType</a> a), <a href=\"Grisette-Internal-Unified-BaseConstraint.html#t:ConSymConversion\" title=\"Grisette.Internal.Unified.BaseConstraint\">ConSymConversion</a> (<a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:ConType\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">ConType</a> a) (<a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:SymType\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">SymType</a> a) a)","name":"UnifiedBasicPrim","module":"Grisette.Internal.Unified.UnifiedPrim","link":"Grisette-Internal-Unified-UnifiedPrim.html#t:UnifiedBasicPrim"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:GetData\">GetData</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) v = (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> r -&gt; mode v","name":"GetData","module":"Grisette.Internal.Unified.UnifiedData","link":"Grisette-Internal-Unified-UnifiedData.html#t:GetData"},{"display_html":"<a href=\"#v:wrapData\">wrapData</a> :: UnifiedDataImpl mode v u =&gt; v -&gt; u","name":"wrapData","module":"Grisette.Internal.Unified.UnifiedData","link":"Grisette-Internal-Unified-UnifiedData.html#v:wrapData"},{"display_html":"<a href=\"#v:extractData\">extractData</a> :: (UnifiedDataImpl mode v u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> v, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedBranching\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedBranching</a> mode m) =&gt; u -&gt; m v","name":"extractData","module":"Grisette.Internal.Unified.UnifiedData","link":"Grisette-Internal-Unified-UnifiedData.html#v:extractData"},{"display_html":"<span class=\"keyword\">class</span> UnifiedDataImpl mode v (<a href=\"Grisette-Internal-Unified-UnifiedData.html#t:GetData\" title=\"Grisette.Internal.Unified.UnifiedData\">GetData</a> mode v) =&gt; <a href=\"#t:UnifiedData\">UnifiedData</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) v","name":"UnifiedData","module":"Grisette.Internal.Unified.UnifiedData","link":"Grisette-Internal-Unified-UnifiedData.html#t:UnifiedData"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> v. <a href=\"Grisette-Internal-Unified-UnifiedData.html#t:UnifiedData\" title=\"Grisette.Internal.Unified.UnifiedData\">UnifiedData</a> bool v, <span class=\"keyword\">forall</span> v. <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> v =&gt; UnifiedDataSimpleMergeable v) =&gt; <a href=\"#t:AllUnifiedData\">AllUnifiedData</a> (bool :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>)","name":"AllUnifiedData","module":"Grisette.Internal.Unified.UnifiedData","link":"Grisette-Internal-Unified-UnifiedData.html#t:AllUnifiedData"},{"display_html":"<a href=\"#v:makeUnifiedCtorWith\">makeUnifiedCtorWith</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>) -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeUnifiedCtorWith","module":"Grisette.Internal.TH.Ctor.UnifiedConstructor","link":"Grisette-Internal-TH-Ctor-UnifiedConstructor.html#v:makeUnifiedCtorWith"},{"display_html":"<a href=\"#v:makePrefixedUnifiedCtor\">makePrefixedUnifiedCtor</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makePrefixedUnifiedCtor","module":"Grisette.Internal.TH.Ctor.UnifiedConstructor","link":"Grisette-Internal-TH-Ctor-UnifiedConstructor.html#v:makePrefixedUnifiedCtor"},{"display_html":"<a href=\"#v:makeNamedUnifiedCtor\">makeNamedUnifiedCtor</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeNamedUnifiedCtor","module":"Grisette.Internal.TH.Ctor.UnifiedConstructor","link":"Grisette-Internal-TH-Ctor-UnifiedConstructor.html#v:makeNamedUnifiedCtor"},{"display_html":"<a href=\"#v:makeUnifiedCtor\">makeUnifiedCtor</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeUnifiedCtor","module":"Grisette.Internal.TH.Ctor.UnifiedConstructor","link":"Grisette-Internal-TH-Ctor-UnifiedConstructor.html#v:makeUnifiedCtor"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSafeFromFP\">UnifiedSafeFromFP</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a fp fprd (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSafeFromFP\">withBaseSafeFromFP</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeFromFP.html#t:SafeFromFP\" title=\"Grisette.Internal.Core.Data.Class.SafeFromFP\">SafeFromFP</a> e a fp fprd m =&gt; r) -&gt; r</li></ul>","name":"UnifiedSafeFromFP withBaseSafeFromFP","module":"Grisette.Internal.Unified.Class.UnifiedSafeFromFP","link":"Grisette-Internal-Unified-Class-UnifiedSafeFromFP.html#t:UnifiedSafeFromFP"},{"display_html":"<a href=\"#v:safeFromFP\">safeFromFP</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a fp fprd m. (<a href=\"Grisette-Internal-Unified-Class-UnifiedSafeFromFP.html#t:UnifiedSafeFromFP\" title=\"Grisette.Internal.Unified.Class.UnifiedSafeFromFP\">UnifiedSafeFromFP</a> mode e a fp fprd m, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m) =&gt; fprd -&gt; fp -&gt; m a","name":"safeFromFP","module":"Grisette.Internal.Unified.Class.UnifiedSafeFromFP","link":"Grisette-Internal-Unified-Class-UnifiedSafeFromFP.html#v:safeFromFP"},{"display_html":"<a href=\"#v:safeFdiv\">safeFdiv</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSafeFdiv.html#t:UnifiedSafeFdiv\" title=\"Grisette.Internal.Unified.Class.UnifiedSafeFdiv\">UnifiedSafeFdiv</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeFdiv","module":"Grisette.Internal.Unified.Class.UnifiedSafeFdiv","link":"Grisette-Internal-Unified-Class-UnifiedSafeFdiv.html#v:safeFdiv"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSafeFdiv\">UnifiedSafeFdiv</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseUnifiedSafeFdiv\">withBaseUnifiedSafeFdiv</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeFdiv.html#t:SafeFdiv\" title=\"Grisette.Internal.Core.Data.Class.SafeFdiv\">SafeFdiv</a> e a m =&gt; r) -&gt; r</li></ul>","name":"UnifiedSafeFdiv withBaseUnifiedSafeFdiv","module":"Grisette.Internal.Unified.Class.UnifiedSafeFdiv","link":"Grisette-Internal-Unified-Class-UnifiedSafeFdiv.html#t:UnifiedSafeFdiv"},{"display_html":"<a href=\"#v:safeBitCast\">safeBitCast</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a b m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSafeBitCast.html#t:UnifiedSafeBitCast\" title=\"Grisette.Internal.Unified.Class.UnifiedSafeBitCast\">UnifiedSafeBitCast</a> mode e a b m) =&gt; a -&gt; m b","name":"safeBitCast","module":"Grisette.Internal.Unified.Class.UnifiedSafeBitCast","link":"Grisette-Internal-Unified-Class-UnifiedSafeBitCast.html#v:safeBitCast"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSafeBitCast\">UnifiedSafeBitCast</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a b (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSafeBitCast\">withBaseSafeBitCast</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeBitCast.html#t:SafeBitCast\" title=\"Grisette.Internal.Core.Data.Class.SafeBitCast\">SafeBitCast</a> e a b m =&gt; r) -&gt; r</li></ul>","name":"UnifiedSafeBitCast withBaseSafeBitCast","module":"Grisette.Internal.Unified.Class.UnifiedSafeBitCast","link":"Grisette-Internal-Unified-Class-UnifiedSafeBitCast.html#t:UnifiedSafeBitCast"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:CBMCEither\">CBMCEither</a> a b = <a href=\"#v:CBMCEither\">CBMCEither</a> {<ul class=\"subs\"><li><a href=\"#v:runCBMCEither\">runCBMCEither</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> a b</li></ul>}","name":"CBMCEither CBMCEither runCBMCEither","module":"Grisette.Internal.Core.Control.Monad.CBMCExcept","link":"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:CBMCEither"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:CBMCExceptT\">CBMCExceptT</a> e (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) a = <a href=\"#v:CBMCExceptT\">CBMCExceptT</a> {<ul class=\"subs\"><li><a href=\"#v:runCBMCExceptT\">runCBMCExceptT</a> :: m (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:CBMCEither\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">CBMCEither</a> e a)</li></ul>}","name":"CBMCExceptT CBMCExceptT runCBMCExceptT","module":"Grisette.Internal.Core.Control.Monad.CBMCExcept","link":"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:CBMCExceptT"},{"display_html":"<a href=\"#v:cbmcExcept\">cbmcExcept</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e a. <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e a -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:CBMCExceptT\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">CBMCExceptT</a> e m a","name":"cbmcExcept","module":"Grisette.Internal.Core.Control.Monad.CBMCExcept","link":"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#v:cbmcExcept"},{"display_html":"<a href=\"#v:mapCBMCExceptT\">mapCBMCExceptT</a> :: (m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e a) -&gt; n (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e' b)) -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:CBMCExceptT\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">CBMCExceptT</a> e m a -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:CBMCExceptT\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">CBMCExceptT</a> e' n b","name":"mapCBMCExceptT","module":"Grisette.Internal.Core.Control.Monad.CBMCExcept","link":"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#v:mapCBMCExceptT"},{"display_html":"<a href=\"#v:withCBMCExceptT\">withCBMCExceptT</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e e' a. <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> m =&gt; (e -&gt; e') -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:CBMCExceptT\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">CBMCExceptT</a> e m a -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:CBMCExceptT\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">CBMCExceptT</a> e' m a","name":"withCBMCExceptT","module":"Grisette.Internal.Core.Control.Monad.CBMCExcept","link":"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#v:withCBMCExceptT"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"#t:MonadError\">MonadError</a> e (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) | m -&gt; e <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:throwError\">throwError</a> :: e -&gt; m a</li><li><a href=\"#v:catchError\">catchError</a> :: m a -&gt; (e -&gt; m a) -&gt; m a</li></ul>","name":"MonadError throwError catchError","module":"Grisette.Internal.Core.Control.Monad.CBMCExcept","link":"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a =&gt; <a href=\"#t:GenSymConstrained\">GenSymConstrained</a> spec a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:freshConstrained\">freshConstrained</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m) =&gt; e -&gt; spec -&gt; m (<a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a)</li></ul>","name":"GenSymConstrained freshConstrained $dmfreshConstrained","module":"Grisette.Experimental.GenSymConstrained","link":"Grisette-Experimental-GenSymConstrained.html#t:GenSymConstrained"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a =&gt; <a href=\"#t:GenSymSimpleConstrained\">GenSymSimpleConstrained</a> spec a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:simpleFreshConstrained\">simpleFreshConstrained</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m) =&gt; e -&gt; spec -&gt; m a</li></ul>","name":"GenSymSimpleConstrained simpleFreshConstrained","module":"Grisette.Experimental.GenSymConstrained","link":"Grisette-Experimental-GenSymConstrained.html#t:GenSymSimpleConstrained"},{"display_html":"<a href=\"#v:genSymConstrained\">genSymConstrained</a> :: (<a href=\"Grisette-Experimental-GenSymConstrained.html#t:GenSymConstrained\" title=\"Grisette.Experimental.GenSymConstrained\">GenSymConstrained</a> spec a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e) =&gt; e -&gt; spec -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> e <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> (<a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a)","name":"genSymConstrained","module":"Grisette.Experimental.GenSymConstrained","link":"Grisette-Experimental-GenSymConstrained.html#v:genSymConstrained"},{"display_html":"<a href=\"#v:genSymSimpleConstrained\">genSymSimpleConstrained</a> :: (<a href=\"Grisette-Experimental-GenSymConstrained.html#t:GenSymSimpleConstrained\" title=\"Grisette.Experimental.GenSymConstrained\">GenSymSimpleConstrained</a> spec a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e) =&gt; e -&gt; spec -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> e <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a","name":"genSymSimpleConstrained","module":"Grisette.Experimental.GenSymConstrained","link":"Grisette-Experimental-GenSymConstrained.html#v:genSymSimpleConstrained"},{"display_html":"<a href=\"#v:derivedFreshConstrainedNoSpec\">derivedFreshConstrainedNoSpec</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, GenSymConstrainedNoSpec (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a), <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m) =&gt; e -&gt; () -&gt; m (<a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a)","name":"derivedFreshConstrainedNoSpec","module":"Grisette.Experimental.GenSymConstrained","link":"Grisette-Experimental-GenSymConstrained.html#v:derivedFreshConstrainedNoSpec"},{"display_html":"<a href=\"#v:derivedSimpleFreshConstrainedNoSpec\">derivedSimpleFreshConstrainedNoSpec</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, GenSymSimpleConstrainedNoSpec (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a), <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; e -&gt; () -&gt; m a","name":"derivedSimpleFreshConstrainedNoSpec","module":"Grisette.Experimental.GenSymConstrained","link":"Grisette-Experimental-GenSymConstrained.html#v:derivedSimpleFreshConstrainedNoSpec"},{"display_html":"<a href=\"#v:derivedSimpleFreshConstrainedSameShape\">derivedSimpleFreshConstrainedSameShape</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, GenSymConstrainedSameShape (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a), <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m) =&gt; e -&gt; a -&gt; m a","name":"derivedSimpleFreshConstrainedSameShape","module":"Grisette.Experimental.GenSymConstrained","link":"Grisette-Experimental-GenSymConstrained.html#v:derivedSimpleFreshConstrainedSameShape"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SymOrdUpperBound\">SymOrdUpperBound</a> a spec = <a href=\"#v:SymOrdUpperBound\">SymOrdUpperBound</a> a spec","name":"SymOrdUpperBound SymOrdUpperBound","module":"Grisette.Experimental.GenSymConstrained","link":"Grisette-Experimental-GenSymConstrained.html#t:SymOrdUpperBound"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SymOrdLowerBound\">SymOrdLowerBound</a> a spec = <a href=\"#v:SymOrdLowerBound\">SymOrdLowerBound</a> a spec","name":"SymOrdLowerBound SymOrdLowerBound","module":"Grisette.Experimental.GenSymConstrained","link":"Grisette-Experimental-GenSymConstrained.html#t:SymOrdLowerBound"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SymOrdBound\">SymOrdBound</a> a spec = <a href=\"#v:SymOrdBound\">SymOrdBound</a> a a spec","name":"SymOrdBound SymOrdBound","module":"Grisette.Experimental.GenSymConstrained","link":"Grisette-Experimental-GenSymConstrained.html#t:SymOrdBound"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a =&gt; <a href=\"#t:GenSymConstrained\">GenSymConstrained</a> spec a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:freshConstrained\">freshConstrained</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m) =&gt; e -&gt; spec -&gt; m (<a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a)</li></ul>","name":"GenSymConstrained freshConstrained $dmfreshConstrained","module":"Grisette.Experimental","link":"Grisette-Experimental.html#t:GenSymConstrained"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a =&gt; <a href=\"#t:GenSymSimpleConstrained\">GenSymSimpleConstrained</a> spec a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:simpleFreshConstrained\">simpleFreshConstrained</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m) =&gt; e -&gt; spec -&gt; m a</li></ul>","name":"GenSymSimpleConstrained simpleFreshConstrained","module":"Grisette.Experimental","link":"Grisette-Experimental.html#t:GenSymSimpleConstrained"},{"display_html":"<a href=\"#v:genSymConstrained\">genSymConstrained</a> :: (<a href=\"Grisette-Experimental.html#t:GenSymConstrained\" title=\"Grisette.Experimental\">GenSymConstrained</a> spec a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e) =&gt; e -&gt; spec -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> e <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> (<a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a)","name":"genSymConstrained","module":"Grisette.Experimental","link":"Grisette-Experimental.html#v:genSymConstrained"},{"display_html":"<a href=\"#v:genSymSimpleConstrained\">genSymSimpleConstrained</a> :: (<a href=\"Grisette-Experimental.html#t:GenSymSimpleConstrained\" title=\"Grisette.Experimental\">GenSymSimpleConstrained</a> spec a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e) =&gt; e -&gt; spec -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> e <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a","name":"genSymSimpleConstrained","module":"Grisette.Experimental","link":"Grisette-Experimental.html#v:genSymSimpleConstrained"},{"display_html":"<a href=\"#v:derivedSimpleFreshConstrainedNoSpec\">derivedSimpleFreshConstrainedNoSpec</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, GenSymSimpleConstrainedNoSpec (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a), <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; e -&gt; () -&gt; m a","name":"derivedSimpleFreshConstrainedNoSpec","module":"Grisette.Experimental","link":"Grisette-Experimental.html#v:derivedSimpleFreshConstrainedNoSpec"},{"display_html":"<a href=\"#v:derivedSimpleFreshConstrainedSameShape\">derivedSimpleFreshConstrainedSameShape</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, GenSymConstrainedSameShape (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a), <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m) =&gt; e -&gt; a -&gt; m a","name":"derivedSimpleFreshConstrainedSameShape","module":"Grisette.Experimental","link":"Grisette-Experimental.html#v:derivedSimpleFreshConstrainedSameShape"},{"display_html":"<a href=\"#v:derivedFreshConstrainedNoSpec\">derivedFreshConstrainedNoSpec</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, GenSymConstrainedNoSpec (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a), <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m) =&gt; e -&gt; () -&gt; m (<a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> a)","name":"derivedFreshConstrainedNoSpec","module":"Grisette.Experimental","link":"Grisette-Experimental.html#v:derivedFreshConstrainedNoSpec"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SymOrdUpperBound\">SymOrdUpperBound</a> a spec = <a href=\"#v:SymOrdUpperBound\">SymOrdUpperBound</a> a spec","name":"SymOrdUpperBound SymOrdUpperBound","module":"Grisette.Experimental","link":"Grisette-Experimental.html#t:SymOrdUpperBound"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SymOrdLowerBound\">SymOrdLowerBound</a> a spec = <a href=\"#v:SymOrdLowerBound\">SymOrdLowerBound</a> a spec","name":"SymOrdLowerBound SymOrdLowerBound","module":"Grisette.Experimental","link":"Grisette-Experimental.html#t:SymOrdLowerBound"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SymOrdBound\">SymOrdBound</a> a spec = <a href=\"#v:SymOrdBound\">SymOrdBound</a> a a spec","name":"SymOrdBound SymOrdBound","module":"Grisette.Experimental","link":"Grisette-Experimental.html#t:SymOrdBound"},{"display_html":"<a href=\"#v:mrgLift\">mrgLift</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> (t m), <a href=\"https://hackage.haskell.org/package/transformers-0.6.1.1/docs/Control-Monad-Trans-Class.html#t:MonadTrans\" title=\"Control.Monad.Trans.Class\">MonadTrans</a> t, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; m a -&gt; t m a","name":"mrgLift","module":"Grisette.Lib.Control.Monad.Trans.Class","link":"Grisette-Lib-Control-Monad-Trans-Class.html#v:mrgLift"},{"display_html":"module <a href=\"Grisette-Lib-Control-Monad-Trans-Class.html\">Grisette.Lib.Control.Monad.Trans.Class</a>","name":"","module":"Grisette.Lib.Control.Monad.Trans","link":""},{"display_html":"<a href=\"#v:mrgExcept\">mrgExcept</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e a. (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e a -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> e m a","name":"mrgExcept","module":"Grisette.Lib.Control.Monad.Trans.Except","link":"Grisette-Lib-Control-Monad-Trans-Except.html#v:mrgExcept"},{"display_html":"<a href=\"#v:mrgRunExceptT\">mrgRunExceptT</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> e m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e a)","name":"mrgRunExceptT","module":"Grisette.Lib.Control.Monad.Trans.Except","link":"Grisette-Lib-Control-Monad-Trans-Except.html#v:mrgRunExceptT"},{"display_html":"<a href=\"#v:mrgWithExceptT\">mrgWithExceptT</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) a e e'. (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e') =&gt; (e -&gt; e') -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> e m a -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> e' m a","name":"mrgWithExceptT","module":"Grisette.Lib.Control.Monad.Trans.Except","link":"Grisette-Lib-Control-Monad-Trans-Except.html#v:mrgWithExceptT"},{"display_html":"<a href=\"#v:mrgThrowE\">mrgThrowE</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e a. (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; e -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> e m a","name":"mrgThrowE","module":"Grisette.Lib.Control.Monad.Trans.Except","link":"Grisette-Lib-Control-Monad-Trans-Except.html#v:mrgThrowE"},{"display_html":"<a href=\"#v:mrgCatchE\">mrgCatchE</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e a. (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> e m a -&gt; (e -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> e m a) -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> e m a","name":"mrgCatchE","module":"Grisette.Lib.Control.Monad.Trans.Except","link":"Grisette-Lib-Control-Monad-Trans-Except.html#v:mrgCatchE"},{"display_html":"<a href=\"#v:mrgTrue\">mrgTrue</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; m <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"mrgTrue","module":"Grisette.Lib.Data.Bool","link":"Grisette-Lib-Data-Bool.html#v:mrgTrue"},{"display_html":"<a href=\"#v:mrgFalse\">mrgFalse</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; m <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"mrgFalse","module":"Grisette.Lib.Data.Bool","link":"Grisette-Lib-Data-Bool.html#v:mrgFalse"},{"display_html":"<a href=\"#v:mrgLeft\">mrgLeft</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> a b), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> a b)","name":"mrgLeft","module":"Grisette.Lib.Data.Either","link":"Grisette-Lib-Data-Either.html#v:mrgLeft"},{"display_html":"<a href=\"#v:mrgRight\">mrgRight</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> a b), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; b -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> a b)","name":"mrgRight","module":"Grisette.Lib.Data.Either","link":"Grisette-Lib-Data-Either.html#v:mrgRight"},{"display_html":"<a href=\"#v:mrgInR\">mrgInR</a> :: <span class=\"keyword\">forall</span> k (f :: k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) g (a :: k) m. (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Functor-Sum.html#t:Sum\" title=\"Data.Functor.Sum\">Sum</a> f g a), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; g a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Functor-Sum.html#t:Sum\" title=\"Data.Functor.Sum\">Sum</a> f g a)","name":"mrgInR","module":"Grisette.Lib.Data.Functor.Sum","link":"Grisette-Lib-Data-Functor-Sum.html#v:mrgInR"},{"display_html":"<a href=\"#v:mrgInL\">mrgInL</a> :: <span class=\"keyword\">forall</span> k f (g :: k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (a :: k) m. (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Functor-Sum.html#t:Sum\" title=\"Data.Functor.Sum\">Sum</a> f g a), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; f a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Functor-Sum.html#t:Sum\" title=\"Data.Functor.Sum\">Sum</a> f g a)","name":"mrgInL","module":"Grisette.Lib.Data.Functor.Sum","link":"Grisette-Lib-Data-Functor-Sum.html#v:mrgInL"},{"display_html":"<a href=\"#v:mrgNothing\">mrgNothing</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> a), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> a)","name":"mrgNothing","module":"Grisette.Lib.Data.Maybe","link":"Grisette-Lib-Data-Maybe.html#v:mrgNothing"},{"display_html":"<a href=\"#v:mrgJust\">mrgJust</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> a), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> a)","name":"mrgJust","module":"Grisette.Lib.Data.Maybe","link":"Grisette-Lib-Data-Maybe.html#v:mrgJust"},{"display_html":"<a href=\"#v:mrgUnit\">mrgUnit</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; m ()","name":"mrgUnit","module":"Grisette.Lib.Data.Tuple","link":"Grisette-Lib-Data-Tuple.html#v:mrgUnit"},{"display_html":"<a href=\"#v:mrgTuple2\">mrgTuple2</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (a, b), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; a -&gt; b -&gt; m (a, b)","name":"mrgTuple2","module":"Grisette.Lib.Data.Tuple","link":"Grisette-Lib-Data-Tuple.html#v:mrgTuple2"},{"display_html":"<a href=\"#v:mrgTuple3\">mrgTuple3</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (a, b, c), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; a -&gt; b -&gt; c -&gt; m (a, b, c)","name":"mrgTuple3","module":"Grisette.Lib.Data.Tuple","link":"Grisette-Lib-Data-Tuple.html#v:mrgTuple3"},{"display_html":"<a href=\"#v:mrgTuple4\">mrgTuple4</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (a, b, c, d), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; a -&gt; b -&gt; c -&gt; d -&gt; m (a, b, c, d)","name":"mrgTuple4","module":"Grisette.Lib.Data.Tuple","link":"Grisette-Lib-Data-Tuple.html#v:mrgTuple4"},{"display_html":"<a href=\"#v:mrgTuple5\">mrgTuple5</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (a, b, c, d, e), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; a -&gt; b -&gt; c -&gt; d -&gt; e -&gt; m (a, b, c, d, e)","name":"mrgTuple5","module":"Grisette.Lib.Data.Tuple","link":"Grisette-Lib-Data-Tuple.html#v:mrgTuple5"},{"display_html":"<a href=\"#v:mrgTuple6\">mrgTuple6</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (a, b, c, d, e, f), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; a -&gt; b -&gt; c -&gt; d -&gt; e -&gt; f -&gt; m (a, b, c, d, e, f)","name":"mrgTuple6","module":"Grisette.Lib.Data.Tuple","link":"Grisette-Lib-Data-Tuple.html#v:mrgTuple6"},{"display_html":"<a href=\"#v:mrgTuple7\">mrgTuple7</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (a, b, c, d, e, f, g), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; a -&gt; b -&gt; c -&gt; d -&gt; e -&gt; f -&gt; g -&gt; m (a, b, c, d, e, f, g)","name":"mrgTuple7","module":"Grisette.Lib.Data.Tuple","link":"Grisette-Lib-Data-Tuple.html#v:mrgTuple7"},{"display_html":"<a href=\"#v:mrgTuple8\">mrgTuple8</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (a, b, c, d, e, f, g, h), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; a -&gt; b -&gt; c -&gt; d -&gt; e -&gt; f -&gt; g -&gt; h -&gt; m (a, b, c, d, e, f, g, h)","name":"mrgTuple8","module":"Grisette.Lib.Data.Tuple","link":"Grisette-Lib-Data-Tuple.html#v:mrgTuple8"},{"display_html":"<a href=\"#v:makeGrisetteADT\">makeGrisetteADT</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeGrisetteADT","module":"Grisette.TH","link":"Grisette-TH.html#v:makeGrisetteADT"},{"display_html":"<a href=\"#v:makeGrisetteADT1\">makeGrisetteADT1</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeGrisetteADT1","module":"Grisette.TH","link":"Grisette-TH.html#v:makeGrisetteADT1"},{"display_html":"<a href=\"#v:makeGrisetteADT2\">makeGrisetteADT2</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeGrisetteADT2","module":"Grisette.TH","link":"Grisette-TH.html#v:makeGrisetteADT2"},{"display_html":"<a href=\"#v:makeGrisetteBasicADT\">makeGrisetteBasicADT</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeGrisetteBasicADT","module":"Grisette.TH","link":"Grisette-TH.html#v:makeGrisetteBasicADT"},{"display_html":"<a href=\"#v:makeGrisetteBasicADT1\">makeGrisetteBasicADT1</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeGrisetteBasicADT1","module":"Grisette.TH","link":"Grisette-TH.html#v:makeGrisetteBasicADT1"},{"display_html":"<a href=\"#v:makeGrisetteBasicADT2\">makeGrisetteBasicADT2</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeGrisetteBasicADT2","module":"Grisette.TH","link":"Grisette-TH.html#v:makeGrisetteBasicADT2"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:EvalModeConfig\">EvalModeConfig</a><ul class=\"subs\"><li>= <a href=\"#v:EvalModeConstraints\">EvalModeConstraints</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]</li><li>| <a href=\"#v:EvalModeSpecified\">EvalModeSpecified</a> <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a></li></ul>","name":"EvalModeConfig EvalModeConstraints EvalModeSpecified","module":"Grisette.TH","link":"Grisette-TH.html#t:EvalModeConfig"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DeriveConfig\">DeriveConfig</a> = <a href=\"#v:DeriveConfig\">DeriveConfig</a> {<ul class=\"subs\"><li><a href=\"#v:evalModeConfig\">evalModeConfig</a> :: [(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, <a href=\"Grisette-TH.html#t:EvalModeConfig\" title=\"Grisette.TH\">EvalModeConfig</a>)]</li><li><a href=\"#v:bitSizePositions\">bitSizePositions</a> :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>]</li><li><a href=\"#v:fpBitSizePositions\">fpBitSizePositions</a> :: [(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>)]</li><li><a href=\"#v:unconstrainedPositions\">unconstrainedPositions</a> :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>]</li><li><a href=\"#v:needExtraMergeableUnderEvalMode\">needExtraMergeableUnderEvalMode</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:needExtraMergeableWithConcretizedEvalMode\">needExtraMergeableWithConcretizedEvalMode</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:useNoStrategy\">useNoStrategy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:useSerialForCerealAndBinary\">useSerialForCerealAndBinary</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li></ul>}","name":"DeriveConfig DeriveConfig unconstrainedPositions bitSizePositions evalModeConfig fpBitSizePositions needExtraMergeableUnderEvalMode needExtraMergeableWithConcretizedEvalMode useSerialForCerealAndBinary useNoStrategy","module":"Grisette.TH","link":"Grisette-TH.html#t:DeriveConfig"},{"display_html":"<a href=\"#v:derive\">derive</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"derive","module":"Grisette.TH","link":"Grisette-TH.html#v:derive"},{"display_html":"<a href=\"#v:deriveWith\">deriveWith</a> :: <a href=\"Grisette-TH.html#t:DeriveConfig\" title=\"Grisette.TH\">DeriveConfig</a> -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveWith","module":"Grisette.TH","link":"Grisette-TH.html#v:deriveWith"},{"display_html":"<a href=\"#v:allClasses0\">allClasses0</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"allClasses0","module":"Grisette.TH","link":"Grisette-TH.html#v:allClasses0"},{"display_html":"<a href=\"#v:allClasses01\">allClasses01</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"allClasses01","module":"Grisette.TH","link":"Grisette-TH.html#v:allClasses01"},{"display_html":"<a href=\"#v:allClasses012\">allClasses012</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"allClasses012","module":"Grisette.TH","link":"Grisette-TH.html#v:allClasses012"},{"display_html":"<a href=\"#v:basicClasses0\">basicClasses0</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"basicClasses0","module":"Grisette.TH","link":"Grisette-TH.html#v:basicClasses0"},{"display_html":"<a href=\"#v:basicClasses1\">basicClasses1</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"basicClasses1","module":"Grisette.TH","link":"Grisette-TH.html#v:basicClasses1"},{"display_html":"<a href=\"#v:basicClasses2\">basicClasses2</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"basicClasses2","module":"Grisette.TH","link":"Grisette-TH.html#v:basicClasses2"},{"display_html":"<a href=\"#v:basicClasses01\">basicClasses01</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"basicClasses01","module":"Grisette.TH","link":"Grisette-TH.html#v:basicClasses01"},{"display_html":"<a href=\"#v:basicClasses012\">basicClasses012</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"basicClasses012","module":"Grisette.TH","link":"Grisette-TH.html#v:basicClasses012"},{"display_html":"<a href=\"#v:noExistentialClasses0\">noExistentialClasses0</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"noExistentialClasses0","module":"Grisette.TH","link":"Grisette-TH.html#v:noExistentialClasses0"},{"display_html":"<a href=\"#v:concreteOrdClasses0\">concreteOrdClasses0</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"concreteOrdClasses0","module":"Grisette.TH","link":"Grisette-TH.html#v:concreteOrdClasses0"},{"display_html":"<a href=\"#v:noExistentialClasses1\">noExistentialClasses1</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"noExistentialClasses1","module":"Grisette.TH","link":"Grisette-TH.html#v:noExistentialClasses1"},{"display_html":"<a href=\"#v:concreteOrdClasses1\">concreteOrdClasses1</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"concreteOrdClasses1","module":"Grisette.TH","link":"Grisette-TH.html#v:concreteOrdClasses1"},{"display_html":"<a href=\"#v:noExistentialClasses2\">noExistentialClasses2</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"noExistentialClasses2","module":"Grisette.TH","link":"Grisette-TH.html#v:noExistentialClasses2"},{"display_html":"<a href=\"#v:concreteOrdClasses2\">concreteOrdClasses2</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"concreteOrdClasses2","module":"Grisette.TH","link":"Grisette-TH.html#v:concreteOrdClasses2"},{"display_html":"<a href=\"#v:showClasses\">showClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"showClasses","module":"Grisette.TH","link":"Grisette-TH.html#v:showClasses"},{"display_html":"<a href=\"#v:pprintClasses\">pprintClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"pprintClasses","module":"Grisette.TH","link":"Grisette-TH.html#v:pprintClasses"},{"display_html":"<a href=\"#v:evalSymClasses\">evalSymClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"evalSymClasses","module":"Grisette.TH","link":"Grisette-TH.html#v:evalSymClasses"},{"display_html":"<a href=\"#v:extractSymClasses\">extractSymClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"extractSymClasses","module":"Grisette.TH","link":"Grisette-TH.html#v:extractSymClasses"},{"display_html":"<a href=\"#v:substSymClasses\">substSymClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"substSymClasses","module":"Grisette.TH","link":"Grisette-TH.html#v:substSymClasses"},{"display_html":"<a href=\"#v:allSymsClasses\">allSymsClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"allSymsClasses","module":"Grisette.TH","link":"Grisette-TH.html#v:allSymsClasses"},{"display_html":"<a href=\"#v:eqClasses\">eqClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"eqClasses","module":"Grisette.TH","link":"Grisette-TH.html#v:eqClasses"},{"display_html":"<a href=\"#v:ordClasses\">ordClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"ordClasses","module":"Grisette.TH","link":"Grisette-TH.html#v:ordClasses"},{"display_html":"<a href=\"#v:symOrdClasses\">symOrdClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"symOrdClasses","module":"Grisette.TH","link":"Grisette-TH.html#v:symOrdClasses"},{"display_html":"<a href=\"#v:symEqClasses\">symEqClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"symEqClasses","module":"Grisette.TH","link":"Grisette-TH.html#v:symEqClasses"},{"display_html":"<a href=\"#v:unifiedSymOrdClasses\">unifiedSymOrdClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"unifiedSymOrdClasses","module":"Grisette.TH","link":"Grisette-TH.html#v:unifiedSymOrdClasses"},{"display_html":"<a href=\"#v:unifiedSymEqClasses\">unifiedSymEqClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"unifiedSymEqClasses","module":"Grisette.TH","link":"Grisette-TH.html#v:unifiedSymEqClasses"},{"display_html":"<a href=\"#v:mergeableClasses\">mergeableClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"mergeableClasses","module":"Grisette.TH","link":"Grisette-TH.html#v:mergeableClasses"},{"display_html":"<a href=\"#v:nfDataClasses\">nfDataClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"nfDataClasses","module":"Grisette.TH","link":"Grisette-TH.html#v:nfDataClasses"},{"display_html":"<a href=\"#v:hashableClasses\">hashableClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"hashableClasses","module":"Grisette.TH","link":"Grisette-TH.html#v:hashableClasses"},{"display_html":"<a href=\"#v:toSymClasses\">toSymClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"toSymClasses","module":"Grisette.TH","link":"Grisette-TH.html#v:toSymClasses"},{"display_html":"<a href=\"#v:toConClasses\">toConClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"toConClasses","module":"Grisette.TH","link":"Grisette-TH.html#v:toConClasses"},{"display_html":"<a href=\"#v:serialClasses\">serialClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"serialClasses","module":"Grisette.TH","link":"Grisette-TH.html#v:serialClasses"},{"display_html":"<a href=\"#v:simpleMergeableClasses\">simpleMergeableClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"simpleMergeableClasses","module":"Grisette.TH","link":"Grisette-TH.html#v:simpleMergeableClasses"},{"display_html":"<a href=\"#v:unifiedSimpleMergeableClasses\">unifiedSimpleMergeableClasses</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"unifiedSimpleMergeableClasses","module":"Grisette.TH","link":"Grisette-TH.html#v:unifiedSimpleMergeableClasses"},{"display_html":"<a href=\"#v:filterExactNumArgs\">filterExactNumArgs</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"filterExactNumArgs","module":"Grisette.TH","link":"Grisette-TH.html#v:filterExactNumArgs"},{"display_html":"<a href=\"#v:filterLeqNumArgs\">filterLeqNumArgs</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]","name":"filterLeqNumArgs","module":"Grisette.TH","link":"Grisette-TH.html#v:filterLeqNumArgs"},{"display_html":"<a href=\"#v:makePrefixedSmartCtor\">makePrefixedSmartCtor</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makePrefixedSmartCtor","module":"Grisette.TH","link":"Grisette-TH.html#v:makePrefixedSmartCtor"},{"display_html":"<a href=\"#v:makeNamedSmartCtor\">makeNamedSmartCtor</a> :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeNamedSmartCtor","module":"Grisette.TH","link":"Grisette-TH.html#v:makeNamedSmartCtor"},{"display_html":"<a href=\"#v:makeSmartCtor\">makeSmartCtor</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeSmartCtor","module":"Grisette.TH","link":"Grisette-TH.html#v:makeSmartCtor"},{"display_html":"<a href=\"#v:makeSmartCtorWith\">makeSmartCtorWith</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>) -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeSmartCtorWith","module":"Grisette.TH","link":"Grisette-TH.html#v:makeSmartCtorWith"},{"display_html":"<a href=\"#v:makePrefixedUnifiedCtor\">makePrefixedUnifiedCtor</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makePrefixedUnifiedCtor","module":"Grisette.TH","link":"Grisette-TH.html#v:makePrefixedUnifiedCtor"},{"display_html":"<a href=\"#v:makeNamedUnifiedCtor\">makeNamedUnifiedCtor</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeNamedUnifiedCtor","module":"Grisette.TH","link":"Grisette-TH.html#v:makeNamedUnifiedCtor"},{"display_html":"<a href=\"#v:makeUnifiedCtor\">makeUnifiedCtor</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeUnifiedCtor","module":"Grisette.TH","link":"Grisette-TH.html#v:makeUnifiedCtor"},{"display_html":"<a href=\"#v:makeUnifiedCtorWith\">makeUnifiedCtorWith</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>] -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>) -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"makeUnifiedCtorWith","module":"Grisette.TH","link":"Grisette-TH.html#v:makeUnifiedCtorWith"},{"display_html":"<a href=\"#v:mrgFmap\">mrgFmap</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; (a -&gt; b) -&gt; f a -&gt; f b","name":"mrgFmap","module":"Grisette.Unified.Lib.Data.Functor","link":"Grisette-Unified-Lib-Data-Functor.html#v:mrgFmap"},{"display_html":"<a href=\"#v:.-60--36-\">(.&lt;$)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; b -&gt; f a -&gt; f b","name":".<$","module":"Grisette.Unified.Lib.Data.Functor","link":"Grisette-Unified-Lib-Data-Functor.html#v:.-60--36-"},{"display_html":"<a href=\"#v:.-36--62-\">(.$&gt;)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; f a -&gt; b -&gt; f b","name":".$>","module":"Grisette.Unified.Lib.Data.Functor","link":"Grisette-Unified-Lib-Data-Functor.html#v:.-36--62-"},{"display_html":"<a href=\"#v:.-60--36--62-\">(.&lt;$&gt;)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; (a -&gt; b) -&gt; f a -&gt; f b","name":".<$>","module":"Grisette.Unified.Lib.Data.Functor","link":"Grisette-Unified-Lib-Data-Functor.html#v:.-60--36--62-"},{"display_html":"<a href=\"#v:.-60--38--62-\">(.&lt;&amp;&gt;)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; f a -&gt; (a -&gt; b) -&gt; f b","name":".<&>","module":"Grisette.Unified.Lib.Data.Functor","link":"Grisette-Unified-Lib-Data-Functor.html#v:.-60--38--62-"},{"display_html":"<a href=\"#v:mrgUnzip\">mrgUnzip</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; f (a, b) -&gt; (f a, f b)","name":"mrgUnzip","module":"Grisette.Unified.Lib.Data.Functor","link":"Grisette-Unified-Lib-Data-Functor.html#v:mrgUnzip"},{"display_html":"<a href=\"#v:mrgVoid\">mrgVoid</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; f a -&gt; f ()","name":"mrgVoid","module":"Grisette.Unified.Lib.Data.Functor","link":"Grisette-Unified-Lib-Data-Functor.html#v:mrgVoid"},{"display_html":"<a href=\"#v:mrgFmap\">mrgFmap</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; (a -&gt; b) -&gt; f a -&gt; f b","name":"mrgFmap","module":"Grisette.Lib.Data.Functor","link":"Grisette-Lib-Data-Functor.html#v:mrgFmap"},{"display_html":"<a href=\"#v:.-60--36-\">(.&lt;$)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; b -&gt; f a -&gt; f b","name":".<$","module":"Grisette.Lib.Data.Functor","link":"Grisette-Lib-Data-Functor.html#v:.-60--36-"},{"display_html":"<a href=\"#v:.-36--62-\">(.$&gt;)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; f a -&gt; b -&gt; f b","name":".$>","module":"Grisette.Lib.Data.Functor","link":"Grisette-Lib-Data-Functor.html#v:.-36--62-"},{"display_html":"<a href=\"#v:.-60--36--62-\">(.&lt;$&gt;)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; (a -&gt; b) -&gt; f a -&gt; f b","name":".<$>","module":"Grisette.Lib.Data.Functor","link":"Grisette-Lib-Data-Functor.html#v:.-60--36--62-"},{"display_html":"<a href=\"#v:.-60--38--62-\">(.&lt;&amp;&gt;)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; f a -&gt; (a -&gt; b) -&gt; f b","name":".<&>","module":"Grisette.Lib.Data.Functor","link":"Grisette-Lib-Data-Functor.html#v:.-60--38--62-"},{"display_html":"<a href=\"#v:mrgUnzip\">mrgUnzip</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; f (a, b) -&gt; (f a, f b)","name":"mrgUnzip","module":"Grisette.Lib.Data.Functor","link":"Grisette-Lib-Data-Functor.html#v:mrgUnzip"},{"display_html":"<a href=\"#v:mrgVoid\">mrgVoid</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; f a -&gt; f ()","name":"mrgVoid","module":"Grisette.Lib.Data.Functor","link":"Grisette-Lib-Data-Functor.html#v:mrgVoid"},{"display_html":"<a href=\"#v:mrgPureWithStrategy\">mrgPureWithStrategy</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a -&gt; a -&gt; m a","name":"mrgPureWithStrategy","module":"Grisette.Unified.Lib.Control.Applicative","link":"Grisette-Unified-Lib-Control-Applicative.html#v:mrgPureWithStrategy"},{"display_html":"<a href=\"#v:mrgPure\">mrgPure</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; a -&gt; m a","name":"mrgPure","module":"Grisette.Unified.Lib.Control.Applicative","link":"Grisette-Unified-Lib-Control-Applicative.html#v:mrgPure"},{"display_html":"<a href=\"#v:.-60--42--62-\">(.&lt;*&gt;)</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; f (a -&gt; b) -&gt; f a -&gt; f b","name":".<*>","module":"Grisette.Unified.Lib.Control.Applicative","link":"Grisette-Unified-Lib-Control-Applicative.html#v:.-60--42--62-"},{"display_html":"<a href=\"#v:mrgLiftA2\">mrgLiftA2</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c) =&gt; (a -&gt; b -&gt; c) -&gt; f a -&gt; f b -&gt; f c","name":"mrgLiftA2","module":"Grisette.Unified.Lib.Control.Applicative","link":"Grisette-Unified-Lib-Control-Applicative.html#v:mrgLiftA2"},{"display_html":"<a href=\"#v:.-42--62-\">(.*&gt;)</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; f a -&gt; f b -&gt; f b","name":".*>","module":"Grisette.Unified.Lib.Control.Applicative","link":"Grisette-Unified-Lib-Control-Applicative.html#v:.-42--62-"},{"display_html":"<a href=\"#v:.-60--42-\">(.&lt;*)</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; f a -&gt; f b -&gt; f a","name":".<*","module":"Grisette.Unified.Lib.Control.Applicative","link":"Grisette-Unified-Lib-Control-Applicative.html#v:.-60--42-"},{"display_html":"<a href=\"#v:mrgEmpty\">mrgEmpty</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Alternative\" title=\"Control.Applicative\">Alternative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; f a","name":"mrgEmpty","module":"Grisette.Unified.Lib.Control.Applicative","link":"Grisette-Unified-Lib-Control-Applicative.html#v:mrgEmpty"},{"display_html":"<a href=\"#v:.-60--124--62-\">(.&lt;|&gt;)</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Alternative\" title=\"Control.Applicative\">Alternative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; f a -&gt; f a -&gt; f a","name":".<|>","module":"Grisette.Unified.Lib.Control.Applicative","link":"Grisette-Unified-Lib-Control-Applicative.html#v:.-60--124--62-"},{"display_html":"<a href=\"#v:mrgSome\">mrgSome</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Alternative\" title=\"Control.Applicative\">Alternative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; f a -&gt; f [a]","name":"mrgSome","module":"Grisette.Unified.Lib.Control.Applicative","link":"Grisette-Unified-Lib-Control-Applicative.html#v:mrgSome"},{"display_html":"<a href=\"#v:mrgMany\">mrgMany</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Alternative\" title=\"Control.Applicative\">Alternative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; f a -&gt; f [a]","name":"mrgMany","module":"Grisette.Unified.Lib.Control.Applicative","link":"Grisette-Unified-Lib-Control-Applicative.html#v:mrgMany"},{"display_html":"<a href=\"#v:.-60--36--62-\">(.&lt;$&gt;)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; (a -&gt; b) -&gt; f a -&gt; f b","name":".<$>","module":"Grisette.Unified.Lib.Control.Applicative","link":"Grisette-Unified-Lib-Control-Applicative.html#v:.-60--36--62-"},{"display_html":"<a href=\"#v:.-60--36-\">(.&lt;$)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; b -&gt; f a -&gt; f b","name":".<$","module":"Grisette.Unified.Lib.Control.Applicative","link":"Grisette-Unified-Lib-Control-Applicative.html#v:.-60--36-"},{"display_html":"<a href=\"#v:.-60--42--42--62-\">(.&lt;**&gt;)</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; f a -&gt; f (a -&gt; b) -&gt; f b","name":".<**>","module":"Grisette.Unified.Lib.Control.Applicative","link":"Grisette-Unified-Lib-Control-Applicative.html#v:.-60--42--42--62-"},{"display_html":"<a href=\"#v:mrgLiftA\">mrgLiftA</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; (a -&gt; b) -&gt; f a -&gt; f b","name":"mrgLiftA","module":"Grisette.Unified.Lib.Control.Applicative","link":"Grisette-Unified-Lib-Control-Applicative.html#v:mrgLiftA"},{"display_html":"<a href=\"#v:mrgLiftA3\">mrgLiftA3</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> d) =&gt; (a -&gt; b -&gt; c -&gt; d) -&gt; f a -&gt; f b -&gt; f c -&gt; f d","name":"mrgLiftA3","module":"Grisette.Unified.Lib.Control.Applicative","link":"Grisette-Unified-Lib-Control-Applicative.html#v:mrgLiftA3"},{"display_html":"<a href=\"#v:mrgOptional\">mrgOptional</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Alternative\" title=\"Control.Applicative\">Alternative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; f a -&gt; f (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> a)","name":"mrgOptional","module":"Grisette.Unified.Lib.Control.Applicative","link":"Grisette-Unified-Lib-Control-Applicative.html#v:mrgOptional"},{"display_html":"<a href=\"#v:mrgAsum\">mrgAsum</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Alternative\" title=\"Control.Applicative\">Alternative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; t (f a) -&gt; f a","name":"mrgAsum","module":"Grisette.Unified.Lib.Control.Applicative","link":"Grisette-Unified-Lib-Control-Applicative.html#v:mrgAsum"},{"display_html":"<a href=\"#v:mrgPureWithStrategy\">mrgPureWithStrategy</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a -&gt; a -&gt; m a","name":"mrgPureWithStrategy","module":"Grisette.Lib.Control.Applicative","link":"Grisette-Lib-Control-Applicative.html#v:mrgPureWithStrategy"},{"display_html":"<a href=\"#v:mrgPure\">mrgPure</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; a -&gt; m a","name":"mrgPure","module":"Grisette.Lib.Control.Applicative","link":"Grisette-Lib-Control-Applicative.html#v:mrgPure"},{"display_html":"<a href=\"#v:.-60--42--62-\">(.&lt;*&gt;)</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; f (a -&gt; b) -&gt; f a -&gt; f b","name":".<*>","module":"Grisette.Lib.Control.Applicative","link":"Grisette-Lib-Control-Applicative.html#v:.-60--42--62-"},{"display_html":"<a href=\"#v:mrgLiftA2\">mrgLiftA2</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c) =&gt; (a -&gt; b -&gt; c) -&gt; f a -&gt; f b -&gt; f c","name":"mrgLiftA2","module":"Grisette.Lib.Control.Applicative","link":"Grisette-Lib-Control-Applicative.html#v:mrgLiftA2"},{"display_html":"<a href=\"#v:.-42--62-\">(.*&gt;)</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; f a -&gt; f b -&gt; f b","name":".*>","module":"Grisette.Lib.Control.Applicative","link":"Grisette-Lib-Control-Applicative.html#v:.-42--62-"},{"display_html":"<a href=\"#v:.-60--42-\">(.&lt;*)</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; f a -&gt; f b -&gt; f a","name":".<*","module":"Grisette.Lib.Control.Applicative","link":"Grisette-Lib-Control-Applicative.html#v:.-60--42-"},{"display_html":"<a href=\"#v:mrgEmpty\">mrgEmpty</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Alternative\" title=\"Control.Applicative\">Alternative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; f a","name":"mrgEmpty","module":"Grisette.Lib.Control.Applicative","link":"Grisette-Lib-Control-Applicative.html#v:mrgEmpty"},{"display_html":"<a href=\"#v:.-60--124--62-\">(.&lt;|&gt;)</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Alternative\" title=\"Control.Applicative\">Alternative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; f a -&gt; f a -&gt; f a","name":".<|>","module":"Grisette.Lib.Control.Applicative","link":"Grisette-Lib-Control-Applicative.html#v:.-60--124--62-"},{"display_html":"<a href=\"#v:mrgSome\">mrgSome</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Alternative\" title=\"Control.Applicative\">Alternative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; f a -&gt; f [a]","name":"mrgSome","module":"Grisette.Lib.Control.Applicative","link":"Grisette-Lib-Control-Applicative.html#v:mrgSome"},{"display_html":"<a href=\"#v:mrgMany\">mrgMany</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Alternative\" title=\"Control.Applicative\">Alternative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; f a -&gt; f [a]","name":"mrgMany","module":"Grisette.Lib.Control.Applicative","link":"Grisette-Lib-Control-Applicative.html#v:mrgMany"},{"display_html":"<a href=\"#v:.-60--36--62-\">(.&lt;$&gt;)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; (a -&gt; b) -&gt; f a -&gt; f b","name":".<$>","module":"Grisette.Lib.Control.Applicative","link":"Grisette-Lib-Control-Applicative.html#v:.-60--36--62-"},{"display_html":"<a href=\"#v:.-60--36-\">(.&lt;$)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; b -&gt; f a -&gt; f b","name":".<$","module":"Grisette.Lib.Control.Applicative","link":"Grisette-Lib-Control-Applicative.html#v:.-60--36-"},{"display_html":"<a href=\"#v:.-60--42--42--62-\">(.&lt;**&gt;)</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; f a -&gt; f (a -&gt; b) -&gt; f b","name":".<**>","module":"Grisette.Lib.Control.Applicative","link":"Grisette-Lib-Control-Applicative.html#v:.-60--42--42--62-"},{"display_html":"<a href=\"#v:mrgLiftA\">mrgLiftA</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; (a -&gt; b) -&gt; f a -&gt; f b","name":"mrgLiftA","module":"Grisette.Lib.Control.Applicative","link":"Grisette-Lib-Control-Applicative.html#v:mrgLiftA"},{"display_html":"<a href=\"#v:mrgLiftA3\">mrgLiftA3</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> d) =&gt; (a -&gt; b -&gt; c -&gt; d) -&gt; f a -&gt; f b -&gt; f c -&gt; f d","name":"mrgLiftA3","module":"Grisette.Lib.Control.Applicative","link":"Grisette-Lib-Control-Applicative.html#v:mrgLiftA3"},{"display_html":"<a href=\"#v:mrgOptional\">mrgOptional</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Alternative\" title=\"Control.Applicative\">Alternative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; f a -&gt; f (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> a)","name":"mrgOptional","module":"Grisette.Lib.Control.Applicative","link":"Grisette-Lib-Control-Applicative.html#v:mrgOptional"},{"display_html":"<a href=\"#v:mrgAsum\">mrgAsum</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Alternative\" title=\"Control.Applicative\">Alternative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; t (f a) -&gt; f a","name":"mrgAsum","module":"Grisette.Lib.Control.Applicative","link":"Grisette-Lib-Control-Applicative.html#v:mrgAsum"},{"display_html":"<a href=\"#v:mrgTraverse\">mrgTraverse</a> :: <span class=\"keyword\">forall</span> a b t f. (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable1\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable1</a> t, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> f, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Traversable.html#t:Traversable\" title=\"Data.Traversable\">Traversable</a> t) =&gt; (a -&gt; f b) -&gt; t a -&gt; f (t b)","name":"mrgTraverse","module":"Grisette.Lib.Data.Traversable","link":"Grisette-Lib-Data-Traversable.html#v:mrgTraverse"},{"display_html":"<a href=\"#v:mrgSequenceA\">mrgSequenceA</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable1\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable1</a> t, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Traversable.html#t:Traversable\" title=\"Data.Traversable\">Traversable</a> t) =&gt; t (f a) -&gt; f (t a)","name":"mrgSequenceA","module":"Grisette.Lib.Data.Traversable","link":"Grisette-Lib-Data-Traversable.html#v:mrgSequenceA"},{"display_html":"<a href=\"#v:mrgMapM\">mrgMapM</a> :: <span class=\"keyword\">forall</span> a b t f. (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable1\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable1</a> t, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> f, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Traversable.html#t:Traversable\" title=\"Data.Traversable\">Traversable</a> t) =&gt; (a -&gt; f b) -&gt; t a -&gt; f (t b)","name":"mrgMapM","module":"Grisette.Lib.Data.Traversable","link":"Grisette-Lib-Data-Traversable.html#v:mrgMapM"},{"display_html":"<a href=\"#v:mrgSequence\">mrgSequence</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable1\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable1</a> t, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> f, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Traversable.html#t:Traversable\" title=\"Data.Traversable\">Traversable</a> t) =&gt; t (f a) -&gt; f (t a)","name":"mrgSequence","module":"Grisette.Lib.Data.Traversable","link":"Grisette-Lib-Data-Traversable.html#v:mrgSequence"},{"display_html":"<a href=\"#v:mrgFor\">mrgFor</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable1\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable1</a> t, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Traversable.html#t:Traversable\" title=\"Data.Traversable\">Traversable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m) =&gt; t a -&gt; (a -&gt; m b) -&gt; m (t b)","name":"mrgFor","module":"Grisette.Lib.Data.Traversable","link":"Grisette-Lib-Data-Traversable.html#v:mrgFor"},{"display_html":"<a href=\"#v:mrgForM\">mrgForM</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable1\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable1</a> t, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Traversable.html#t:Traversable\" title=\"Data.Traversable\">Traversable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m) =&gt; t a -&gt; (a -&gt; m b) -&gt; m (t b)","name":"mrgForM","module":"Grisette.Lib.Data.Traversable","link":"Grisette-Lib-Data-Traversable.html#v:mrgForM"},{"display_html":"<a href=\"#v:mrgMapAccumM\">mrgMapAccumM</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Traversable.html#t:Traversable\" title=\"Data.Traversable\">Traversable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable1\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable1</a> t) =&gt; (s -&gt; a -&gt; m (s, b)) -&gt; s -&gt; t a -&gt; m (s, t b)","name":"mrgMapAccumM","module":"Grisette.Lib.Data.Traversable","link":"Grisette-Lib-Data-Traversable.html#v:mrgMapAccumM"},{"display_html":"<a href=\"#v:mrgForAccumM\">mrgForAccumM</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Traversable.html#t:Traversable\" title=\"Data.Traversable\">Traversable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable1\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable1</a> t) =&gt; s -&gt; t a -&gt; (s -&gt; a -&gt; m (s, b)) -&gt; m (s, t b)","name":"mrgForAccumM","module":"Grisette.Lib.Data.Traversable","link":"Grisette-Lib-Data-Traversable.html#v:mrgForAccumM"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ArithException\">ArithException</a><ul class=\"subs\"><li>= <a href=\"#v:Overflow\">Overflow</a></li><li>| <a href=\"#v:Underflow\">Underflow</a></li><li>| <a href=\"#v:DivideByZero\">DivideByZero</a></li></ul>","name":"ArithException Overflow Underflow DivideByZero","module":"Grisette.Internal.Core.Data.Class.SafeDiv","link":"Grisette-Internal-Core-Data-Class-SafeDiv.html#t:ArithException"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SafeDiv.html#t:DivOr\" title=\"Grisette.Internal.Core.Data.Class.SafeDiv\">DivOr</a> a) =&gt; <a href=\"#t:SafeDiv\">SafeDiv</a> e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:safeDiv\">safeDiv</a> :: a -&gt; a -&gt; m a</li><li><a href=\"#v:safeMod\">safeMod</a> :: a -&gt; a -&gt; m a</li><li><a href=\"#v:safeDivMod\">safeDivMod</a> :: a -&gt; a -&gt; m (a, a)</li><li><a href=\"#v:safeQuot\">safeQuot</a> :: a -&gt; a -&gt; m a</li><li><a href=\"#v:safeRem\">safeRem</a> :: a -&gt; a -&gt; m a</li><li><a href=\"#v:safeQuotRem\">safeQuotRem</a> :: a -&gt; a -&gt; m (a, a)</li></ul>","name":"SafeDiv safeDiv safeDivMod safeMod safeQuot safeQuotRem safeRem $dmsafeDiv $dmsafeDivMod $dmsafeMod $dmsafeQuot $dmsafeQuotRem $dmsafeRem","module":"Grisette.Internal.Core.Data.Class.SafeDiv","link":"Grisette-Internal-Core-Data-Class-SafeDiv.html#t:SafeDiv"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:DivOr\">DivOr</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:divOr\">divOr</a> :: a -&gt; a -&gt; a -&gt; a</li><li><a href=\"#v:modOr\">modOr</a> :: a -&gt; a -&gt; a -&gt; a</li><li><a href=\"#v:divModOr\">divModOr</a> :: (a, a) -&gt; a -&gt; a -&gt; (a, a)</li><li><a href=\"#v:quotOr\">quotOr</a> :: a -&gt; a -&gt; a -&gt; a</li><li><a href=\"#v:remOr\">remOr</a> :: a -&gt; a -&gt; a -&gt; a</li><li><a href=\"#v:quotRemOr\">quotRemOr</a> :: (a, a) -&gt; a -&gt; a -&gt; (a, a)</li></ul>","name":"DivOr divModOr divOr modOr quotOr quotRemOr remOr","module":"Grisette.Internal.Core.Data.Class.SafeDiv","link":"Grisette-Internal-Core-Data-Class-SafeDiv.html#t:DivOr"},{"display_html":"<a href=\"#v:divOrZero\">divOrZero</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeDiv.html#t:DivOr\" title=\"Grisette.Internal.Core.Data.Class.SafeDiv\">DivOr</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; a -&gt; a -&gt; a","name":"divOrZero","module":"Grisette.Internal.Core.Data.Class.SafeDiv","link":"Grisette-Internal-Core-Data-Class-SafeDiv.html#v:divOrZero"},{"display_html":"<a href=\"#v:modOrDividend\">modOrDividend</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeDiv.html#t:DivOr\" title=\"Grisette.Internal.Core.Data.Class.SafeDiv\">DivOr</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; a -&gt; a -&gt; a","name":"modOrDividend","module":"Grisette.Internal.Core.Data.Class.SafeDiv","link":"Grisette-Internal-Core-Data-Class-SafeDiv.html#v:modOrDividend"},{"display_html":"<a href=\"#v:quotOrZero\">quotOrZero</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeDiv.html#t:DivOr\" title=\"Grisette.Internal.Core.Data.Class.SafeDiv\">DivOr</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; a -&gt; a -&gt; a","name":"quotOrZero","module":"Grisette.Internal.Core.Data.Class.SafeDiv","link":"Grisette-Internal-Core-Data-Class-SafeDiv.html#v:quotOrZero"},{"display_html":"<a href=\"#v:remOrDividend\">remOrDividend</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeDiv.html#t:DivOr\" title=\"Grisette.Internal.Core.Data.Class.SafeDiv\">DivOr</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; a -&gt; a -&gt; a","name":"remOrDividend","module":"Grisette.Internal.Core.Data.Class.SafeDiv","link":"Grisette-Internal-Core-Data-Class-SafeDiv.html#v:remOrDividend"},{"display_html":"<a href=\"#v:divModOrZeroDividend\">divModOrZeroDividend</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeDiv.html#t:DivOr\" title=\"Grisette.Internal.Core.Data.Class.SafeDiv\">DivOr</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; a -&gt; a -&gt; (a, a)","name":"divModOrZeroDividend","module":"Grisette.Internal.Core.Data.Class.SafeDiv","link":"Grisette-Internal-Core-Data-Class-SafeDiv.html#v:divModOrZeroDividend"},{"display_html":"<a href=\"#v:quotRemOrZeroDividend\">quotRemOrZeroDividend</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeDiv.html#t:DivOr\" title=\"Grisette.Internal.Core.Data.Class.SafeDiv\">DivOr</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; a -&gt; a -&gt; (a, a)","name":"quotRemOrZeroDividend","module":"Grisette.Internal.Core.Data.Class.SafeDiv","link":"Grisette-Internal-Core-Data-Class-SafeDiv.html#v:quotRemOrZeroDividend"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeBV\">SomeBV</a> (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:SomeBV\">SomeBV</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; bv n -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv</li><li><a href=\"#v:SomeBVLit\">SomeBVLit</a> :: <span class=\"keyword\">forall</span> (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). SomeBVLit -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv</li></ul>","name":"SomeBV SomeBV SomeBVLit","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeBVException\">SomeBVException</a><ul class=\"subs\"><li>= <a href=\"#v:BitwidthMismatch\">BitwidthMismatch</a></li><li>| <a href=\"#v:UndeterminedBitwidth\">UndeterminedBitwidth</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>","name":"SomeBVException BitwidthMismatch UndeterminedBitwidth","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBVException"},{"display_html":"<a href=\"#v:unsafeSomeBV\">unsafeSomeBV</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; (<span class=\"keyword\">forall</span> (proxy :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; proxy n -&gt; bv n) -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv","name":"unsafeSomeBV","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#v:unsafeSomeBV"},{"display_html":"<a href=\"#v:conBV\">conBV</a> :: <span class=\"keyword\">forall</span> (cbv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv n) (bv n), <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv 1) (bv 1)) =&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> cbv -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv","name":"conBV","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#v:conBV"},{"display_html":"<a href=\"#v:conBVView\">conBVView</a> :: <span class=\"keyword\">forall</span> (cbv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv n) (bv n), <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv 1) (bv 1)) =&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> cbv)","name":"conBVView","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#v:conBVView"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ConBV\">ConBV</a> :: (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv n) (bv n), <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv 1) (bv 1)) =&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> cbv -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv","name":"ConBV","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#v:ConBV"},{"display_html":"<a href=\"#v:symBV\">symBV</a> :: <span class=\"keyword\">forall</span> (cbv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv n) (bv n), <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv 1) (bv 1)) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Symbol\" title=\"Grisette.Internal.Core.Data.Symbol\">Symbol</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv","name":"symBV","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#v:symBV"},{"display_html":"<a href=\"#v:ssymBV\">ssymBV</a> :: <span class=\"keyword\">forall</span> (cbv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv n) (bv n), <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv 1) (bv 1)) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv","name":"ssymBV","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#v:ssymBV"},{"display_html":"<a href=\"#v:isymBV\">isymBV</a> :: <span class=\"keyword\">forall</span> (cbv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv n) (bv n), <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv 1) (bv 1)) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv","name":"isymBV","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#v:isymBV"},{"display_html":"<a href=\"#v:arbitraryBV\">arbitraryBV</a> :: <span class=\"keyword\">forall</span> (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"https://hackage.haskell.org/package/QuickCheck-2.14.3/docs/Test-QuickCheck-Arbitrary.html#t:Arbitrary\" title=\"Test.QuickCheck.Arbitrary\">Arbitrary</a> (bv n)) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/QuickCheck-2.14.3/docs/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> (<a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv)","name":"arbitraryBV","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#v:arbitraryBV"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:SomeIntN\">SomeIntN</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-SymPrim-BV.html#t:IntN\" title=\"Grisette.Internal.SymPrim.BV\">IntN</a> n -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeIntN\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeIntN</a>","name":"SomeIntN","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#v:SomeIntN"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SomeIntN\">SomeIntN</a> = <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> <a href=\"Grisette-Internal-SymPrim-BV.html#t:IntN\" title=\"Grisette.Internal.SymPrim.BV\">IntN</a>","name":"SomeIntN","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#t:SomeIntN"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:SomeWordN\">SomeWordN</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-SymPrim-BV.html#t:WordN\" title=\"Grisette.Internal.SymPrim.BV\">WordN</a> n -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeWordN\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeWordN</a>","name":"SomeWordN","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#v:SomeWordN"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SomeWordN\">SomeWordN</a> = <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> <a href=\"Grisette-Internal-SymPrim-BV.html#t:WordN\" title=\"Grisette.Internal.SymPrim.BV\">WordN</a>","name":"SomeWordN","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#t:SomeWordN"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:SomeSymIntN\">SomeSymIntN</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBV.html#t:SymIntN\" title=\"Grisette.Internal.SymPrim.SymBV\">SymIntN</a> n -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeSymIntN\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeSymIntN</a>","name":"SomeSymIntN","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#v:SomeSymIntN"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SomeSymIntN\">SomeSymIntN</a> = <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> <a href=\"Grisette-Internal-SymPrim-SymBV.html#t:SymIntN\" title=\"Grisette.Internal.SymPrim.SymBV\">SymIntN</a>","name":"SomeSymIntN","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#t:SomeSymIntN"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:SomeSymWordN\">SomeSymWordN</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBV.html#t:SymWordN\" title=\"Grisette.Internal.SymPrim.SymBV\">SymWordN</a> n -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeSymWordN\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeSymWordN</a>","name":"SomeSymWordN","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#v:SomeSymWordN"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SomeSymWordN\">SomeSymWordN</a> = <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> <a href=\"Grisette-Internal-SymPrim-SymBV.html#t:SymWordN\" title=\"Grisette.Internal.SymPrim.SymBV\">SymWordN</a>","name":"SomeSymWordN","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#t:SomeSymWordN"},{"display_html":"<a href=\"#v:unarySomeBV\">unarySomeBV</a> :: (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; bv n -&gt; r) -&gt; (SomeBVLit -&gt; r) -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv -&gt; r","name":"unarySomeBV","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#v:unarySomeBV"},{"display_html":"<a href=\"#v:unarySomeBVR1\">unarySomeBVR1</a> :: (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; bv n -&gt; bv n) -&gt; (SomeBVLit -&gt; SomeBVLit) -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv","name":"unarySomeBVR1","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#v:unarySomeBVR1"},{"display_html":"<a href=\"#v:binSomeBV\">binSomeBV</a> :: (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> (bv n), MaySomeBV bv) =&gt; (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; bv n -&gt; bv n -&gt; r) -&gt; (SomeBVLit -&gt; SomeBVLit -&gt; r) -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv -&gt; r","name":"binSomeBV","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#v:binSomeBV"},{"display_html":"<a href=\"#v:binSomeBVR1\">binSomeBVR1</a> :: (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> (bv n), MaySomeBV bv) =&gt; (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; bv n -&gt; bv n -&gt; bv n) -&gt; (SomeBVLit -&gt; SomeBVLit -&gt; SomeBVLit) -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv","name":"binSomeBVR1","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#v:binSomeBVR1"},{"display_html":"<a href=\"#v:binSomeBVR2\">binSomeBVR2</a> :: (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> (bv n), MaySomeBV bv) =&gt; (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; bv n -&gt; bv n -&gt; (bv n, bv n)) -&gt; (SomeBVLit -&gt; SomeBVLit -&gt; (SomeBVLit, SomeBVLit)) -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv -&gt; (<a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv, <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv)","name":"binSomeBVR2","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#v:binSomeBVR2"},{"display_html":"<a href=\"#v:binSomeBVSafe\">binSomeBVSafe</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBVException\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBVException</a> e) m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> r, <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> (bv n), MaySomeBV bv) =&gt; (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; bv n -&gt; bv n -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> e m r) -&gt; (SomeBVLit -&gt; SomeBVLit -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBVException\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBVException</a> e) m r) -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv -&gt; m r","name":"binSomeBVSafe","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#v:binSomeBVSafe"},{"display_html":"<a href=\"#v:binSomeBVSafeR1\">binSomeBVSafeR1</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBVException\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBVException</a> e) m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e, <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (bv n), <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> (bv n), MaySomeBV bv) =&gt; (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; bv n -&gt; bv n -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> e m (bv n)) -&gt; (SomeBVLit -&gt; SomeBVLit -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBVException\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBVException</a> e) m SomeBVLit) -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv -&gt; m (<a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv)","name":"binSomeBVSafeR1","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#v:binSomeBVSafeR1"},{"display_html":"<a href=\"#v:binSomeBVSafeR2\">binSomeBVSafeR2</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBVException\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBVException</a> e) m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e, <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (bv n), <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> (bv n), MaySomeBV bv) =&gt; (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; bv n -&gt; bv n -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> e m (bv n, bv n)) -&gt; (SomeBVLit -&gt; SomeBVLit -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBVException\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBVException</a> e) m (SomeBVLit, SomeBVLit)) -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv -&gt; <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv -&gt; m (<a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv, <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> bv)","name":"binSomeBVSafeR2","module":"Grisette.Internal.SymPrim.SomeBV","link":"Grisette-Internal-SymPrim-SomeBV.html#v:binSomeBVSafeR2"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:IntN\">IntN</a> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>)","name":"IntN","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:IntN"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:IntN8\">IntN8</a> = <a href=\"Grisette-SymPrim.html#t:IntN\" title=\"Grisette.SymPrim\">IntN</a> 8","name":"IntN8","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:IntN8"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:IntN16\">IntN16</a> = <a href=\"Grisette-SymPrim.html#t:IntN\" title=\"Grisette.SymPrim\">IntN</a> 16","name":"IntN16","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:IntN16"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:IntN32\">IntN32</a> = <a href=\"Grisette-SymPrim.html#t:IntN\" title=\"Grisette.SymPrim\">IntN</a> 32","name":"IntN32","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:IntN32"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:IntN64\">IntN64</a> = <a href=\"Grisette-SymPrim.html#t:IntN\" title=\"Grisette.SymPrim\">IntN</a> 64","name":"IntN64","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:IntN64"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WordN\">WordN</a> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>)","name":"WordN","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:WordN"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:WordN8\">WordN8</a> = <a href=\"Grisette-SymPrim.html#t:WordN\" title=\"Grisette.SymPrim\">WordN</a> 8","name":"WordN8","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:WordN8"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:WordN16\">WordN16</a> = <a href=\"Grisette-SymPrim.html#t:WordN\" title=\"Grisette.SymPrim\">WordN</a> 16","name":"WordN16","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:WordN16"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:WordN32\">WordN32</a> = <a href=\"Grisette-SymPrim.html#t:WordN\" title=\"Grisette.SymPrim\">WordN</a> 32","name":"WordN32","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:WordN32"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:WordN64\">WordN64</a> = <a href=\"Grisette-SymPrim.html#t:WordN\" title=\"Grisette.SymPrim\">WordN</a> 64","name":"WordN64","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:WordN64"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeBV\">SomeBV</a> (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:SomeBV\">SomeBV</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; bv n -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv</li><li><a href=\"#v:SomeBVLit\">SomeBVLit</a> :: <span class=\"keyword\">forall</span> (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). SomeBVLit -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv</li></ul>","name":"SomeBV SomeBV SomeBVLit","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SomeBV"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeBVException\">SomeBVException</a><ul class=\"subs\"><li>= <a href=\"#v:BitwidthMismatch\">BitwidthMismatch</a></li><li>| <a href=\"#v:UndeterminedBitwidth\">UndeterminedBitwidth</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>","name":"SomeBVException BitwidthMismatch UndeterminedBitwidth","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SomeBVException"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:SomeIntN\">SomeIntN</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-SymPrim.html#t:IntN\" title=\"Grisette.SymPrim\">IntN</a> n -&gt; <a href=\"Grisette-SymPrim.html#t:SomeIntN\" title=\"Grisette.SymPrim\">SomeIntN</a>","name":"SomeIntN","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:SomeIntN"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SomeIntN\">SomeIntN</a> = <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> <a href=\"Grisette-SymPrim.html#t:IntN\" title=\"Grisette.SymPrim\">IntN</a>","name":"SomeIntN","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SomeIntN"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:SomeWordN\">SomeWordN</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-SymPrim.html#t:WordN\" title=\"Grisette.SymPrim\">WordN</a> n -&gt; <a href=\"Grisette-SymPrim.html#t:SomeWordN\" title=\"Grisette.SymPrim\">SomeWordN</a>","name":"SomeWordN","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:SomeWordN"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SomeWordN\">SomeWordN</a> = <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> <a href=\"Grisette-SymPrim.html#t:WordN\" title=\"Grisette.SymPrim\">WordN</a>","name":"SomeWordN","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SomeWordN"},{"display_html":"<a href=\"#v:conBV\">conBV</a> :: <span class=\"keyword\">forall</span> (cbv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv n) (bv n), <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv 1) (bv 1)) =&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> cbv -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv","name":"conBV","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:conBV"},{"display_html":"<a href=\"#v:conBVView\">conBVView</a> :: <span class=\"keyword\">forall</span> (cbv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv n) (bv n), <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv 1) (bv 1)) =&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> cbv)","name":"conBVView","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:conBVView"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ConBV\">ConBV</a> :: (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv n) (bv n), <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv 1) (bv 1)) =&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> cbv -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv","name":"ConBV","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:ConBV"},{"display_html":"<a href=\"#v:symBV\">symBV</a> :: <span class=\"keyword\">forall</span> (cbv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv n) (bv n), <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv 1) (bv 1)) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Symbol\" title=\"Grisette.Internal.Core.Data.Symbol\">Symbol</a> -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv","name":"symBV","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:symBV"},{"display_html":"<a href=\"#v:ssymBV\">ssymBV</a> :: <span class=\"keyword\">forall</span> (cbv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv n) (bv n), <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv 1) (bv 1)) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv","name":"ssymBV","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:ssymBV"},{"display_html":"<a href=\"#v:isymBV\">isymBV</a> :: <span class=\"keyword\">forall</span> (cbv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv n) (bv n), <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (cbv 1) (bv 1)) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Identifier\" title=\"Grisette.Internal.Core.Data.Symbol\">Identifier</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv","name":"isymBV","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:isymBV"},{"display_html":"<a href=\"#v:arbitraryBV\">arbitraryBV</a> :: <span class=\"keyword\">forall</span> (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"https://hackage.haskell.org/package/QuickCheck-2.14.3/docs/Test-QuickCheck-Arbitrary.html#t:Arbitrary\" title=\"Test.QuickCheck.Arbitrary\">Arbitrary</a> (bv n)) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/QuickCheck-2.14.3/docs/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> (<a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv)","name":"arbitraryBV","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:arbitraryBV"},{"display_html":"<a href=\"#v:unsafeSomeBV\">unsafeSomeBV</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; (<span class=\"keyword\">forall</span> (proxy :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; proxy n -&gt; bv n) -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv","name":"unsafeSomeBV","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:unsafeSomeBV"},{"display_html":"<a href=\"#v:unarySomeBV\">unarySomeBV</a> :: (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; bv n -&gt; r) -&gt; (SomeBVLit -&gt; r) -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv -&gt; r","name":"unarySomeBV","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:unarySomeBV"},{"display_html":"<a href=\"#v:unarySomeBVR1\">unarySomeBVR1</a> :: (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; bv n -&gt; bv n) -&gt; (SomeBVLit -&gt; SomeBVLit) -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv","name":"unarySomeBVR1","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:unarySomeBVR1"},{"display_html":"<a href=\"#v:binSomeBV\">binSomeBV</a> :: (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> (bv n), MaySomeBV bv) =&gt; (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; bv n -&gt; bv n -&gt; r) -&gt; (SomeBVLit -&gt; SomeBVLit -&gt; r) -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv -&gt; r","name":"binSomeBV","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:binSomeBV"},{"display_html":"<a href=\"#v:binSomeBVR1\">binSomeBVR1</a> :: (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> (bv n), MaySomeBV bv) =&gt; (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; bv n -&gt; bv n -&gt; bv n) -&gt; (SomeBVLit -&gt; SomeBVLit -&gt; SomeBVLit) -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv","name":"binSomeBVR1","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:binSomeBVR1"},{"display_html":"<a href=\"#v:binSomeBVR2\">binSomeBVR2</a> :: (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> (bv n), MaySomeBV bv) =&gt; (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; bv n -&gt; bv n -&gt; (bv n, bv n)) -&gt; (SomeBVLit -&gt; SomeBVLit -&gt; (SomeBVLit, SomeBVLit)) -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv -&gt; (<a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv, <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv)","name":"binSomeBVR2","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:binSomeBVR2"},{"display_html":"<a href=\"#v:binSomeBVSafe\">binSomeBVSafe</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-SymPrim.html#t:SomeBVException\" title=\"Grisette.SymPrim\">SomeBVException</a> e) m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> r, <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> (bv n), MaySomeBV bv) =&gt; (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; bv n -&gt; bv n -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> e m r) -&gt; (SomeBVLit -&gt; SomeBVLit -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-SymPrim.html#t:SomeBVException\" title=\"Grisette.SymPrim\">SomeBVException</a> e) m r) -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv -&gt; m r","name":"binSomeBVSafe","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:binSomeBVSafe"},{"display_html":"<a href=\"#v:binSomeBVSafeR1\">binSomeBVSafeR1</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-SymPrim.html#t:SomeBVException\" title=\"Grisette.SymPrim\">SomeBVException</a> e) m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e, <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (bv n), <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> (bv n), MaySomeBV bv) =&gt; (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; bv n -&gt; bv n -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> e m (bv n)) -&gt; (SomeBVLit -&gt; SomeBVLit -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-SymPrim.html#t:SomeBVException\" title=\"Grisette.SymPrim\">SomeBVException</a> e) m SomeBVLit) -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv -&gt; m (<a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv)","name":"binSomeBVSafeR1","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:binSomeBVSafeR1"},{"display_html":"<a href=\"#v:binSomeBVSafeR2\">binSomeBVSafeR2</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-SymPrim.html#t:SomeBVException\" title=\"Grisette.SymPrim\">SomeBVException</a> e) m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e, <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (bv n), <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> (bv n), MaySomeBV bv) =&gt; (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; bv n -&gt; bv n -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> e m (bv n, bv n)) -&gt; (SomeBVLit -&gt; SomeBVLit -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-SymPrim.html#t:SomeBVException\" title=\"Grisette.SymPrim\">SomeBVException</a> e) m (SomeBVLit, SomeBVLit)) -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv -&gt; <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv -&gt; m (<a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv, <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> bv)","name":"binSomeBVSafeR2","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:binSomeBVSafeR2"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ValidFP\">ValidFP</a> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) = <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV.html#t:ValidFloat\" title=\"Data.SBV\">ValidFloat</a> eb sb","name":"ValidFP","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:ValidFP"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FP\">FP</a> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>)","name":"FP","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:FP"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FP16\">FP16</a> = <a href=\"Grisette-SymPrim.html#t:FP\" title=\"Grisette.SymPrim\">FP</a> 5 11","name":"FP16","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:FP16"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FP32\">FP32</a> = <a href=\"Grisette-SymPrim.html#t:FP\" title=\"Grisette.SymPrim\">FP</a> 8 24","name":"FP32","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:FP32"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FP64\">FP64</a> = <a href=\"Grisette-SymPrim.html#t:FP\" title=\"Grisette.SymPrim\">FP</a> 11 53","name":"FP64","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:FP64"},{"display_html":"<a href=\"#v:withValidFPProofs\">withValidFPProofs</a> :: <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) r. <a href=\"Grisette-SymPrim.html#t:ValidFP\" title=\"Grisette.SymPrim\">ValidFP</a> eb sb =&gt; ((<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> (eb <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> sb), <a href=\"https://hackage.haskell.org/package/sbv-11.0/docs/Data-SBV-Trans.html#t:BVIsNonZero\" title=\"Data.SBV.Trans\">BVIsNonZero</a> (eb <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> sb), 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> (eb <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> sb), 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> eb, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> sb) =&gt; r) -&gt; r","name":"withValidFPProofs","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:withValidFPProofs"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FPRoundingMode\">FPRoundingMode</a><ul class=\"subs\"><li>= <a href=\"#v:RNE\">RNE</a></li><li>| <a href=\"#v:RNA\">RNA</a></li><li>| <a href=\"#v:RTP\">RTP</a></li><li>| <a href=\"#v:RTN\">RTN</a></li><li>| <a href=\"#v:RTZ\">RTZ</a></li></ul>","name":"FPRoundingMode RNA RNE RTN RTP RTZ","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:FPRoundingMode"},{"display_html":"<a href=\"#v:allFPRoundingMode\">allFPRoundingMode</a> :: [<a href=\"Grisette-SymPrim.html#t:FPRoundingMode\" title=\"Grisette.SymPrim\">FPRoundingMode</a>]","name":"allFPRoundingMode","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:allFPRoundingMode"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AlgReal\">AlgReal</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:AlgExactRational\">AlgExactRational</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Rational\" title=\"Prelude\">Rational</a> -&gt; <a href=\"Grisette-SymPrim.html#t:AlgReal\" title=\"Grisette.SymPrim\">AlgReal</a></li><li><a href=\"#v:AlgInexactRational\">AlgInexactRational</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Rational\" title=\"Prelude\">Rational</a> -&gt; <a href=\"Grisette-SymPrim.html#t:AlgReal\" title=\"Grisette.SymPrim\">AlgReal</a></li><li><a href=\"#v:AlgPolyRoot\">AlgPolyRoot</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integer\" title=\"Prelude\">Integer</a> -&gt; <a href=\"Grisette-SymPrim.html#t:AlgRealPoly\" title=\"Grisette.SymPrim\">AlgRealPoly</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"Grisette-SymPrim.html#t:AlgReal\" title=\"Grisette.SymPrim\">AlgReal</a></li><li><a href=\"#v:AlgInterval\">AlgInterval</a> :: <a href=\"Grisette-SymPrim.html#t:RealPoint\" title=\"Grisette.SymPrim\">RealPoint</a> -&gt; <a href=\"Grisette-SymPrim.html#t:RealPoint\" title=\"Grisette.SymPrim\">RealPoint</a> -&gt; <a href=\"Grisette-SymPrim.html#t:AlgReal\" title=\"Grisette.SymPrim\">AlgReal</a></li></ul>","name":"AlgReal AlgPolyRoot AlgInterval AlgExactRational AlgInexactRational","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:AlgReal"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:AlgRealPoly\">AlgRealPoly</a> = <a href=\"#v:AlgRealPoly\">AlgRealPoly</a> [(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integer\" title=\"Prelude\">Integer</a>, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integer\" title=\"Prelude\">Integer</a>)]","name":"AlgRealPoly AlgRealPoly","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:AlgRealPoly"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:RealPoint\">RealPoint</a><ul class=\"subs\"><li>= <a href=\"#v:OpenPoint\">OpenPoint</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Rational\" title=\"Prelude\">Rational</a></li><li>| <a href=\"#v:ClosedPoint\">ClosedPoint</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Rational\" title=\"Prelude\">Rational</a></li></ul>","name":"RealPoint OpenPoint ClosedPoint","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:RealPoint"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UnsupportedAlgRealOperation\">UnsupportedAlgRealOperation</a> = <a href=\"#v:UnsupportedAlgRealOperation\">UnsupportedAlgRealOperation</a> {<ul class=\"subs\"><li><a href=\"#v:op\">op</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li><li><a href=\"#v:msg\">msg</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li></ul>}","name":"UnsupportedAlgRealOperation UnsupportedAlgRealOperation msg op","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:UnsupportedAlgRealOperation"},{"display_html":"<span class=\"keyword\">data</span> a <a href=\"#t:-61--45--62-\">=-&gt;</a> b = <a href=\"#v:TabularFun\">TabularFun</a> {<ul class=\"subs\"><li><a href=\"#v:funcTable\">funcTable</a> :: [(a, b)]</li><li><a href=\"#v:defaultFuncValue\">defaultFuncValue</a> :: b</li></ul>}","name":"=-> TabularFun funcTable defaultFuncValue","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:-61--45--62-"},{"display_html":"<span class=\"keyword\">data</span> a <a href=\"#t:-45--45--62-\">--&gt;</a> b","name":"-->","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:-45--45--62-"},{"display_html":"<a href=\"#v:-45--45--62-\">(--&gt;)</a> :: (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedNonFuncPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedNonFuncPrim</a> ca, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> cb, <a href=\"Grisette-SymPrim.html#t:LinkedRep\" title=\"Grisette.SymPrim\">LinkedRep</a> cb sb) =&gt; <a href=\"Grisette-SymPrim.html#t:TypedConstantSymbol\" title=\"Grisette.SymPrim\">TypedConstantSymbol</a> ca -&gt; sb -&gt; ca <a href=\"Grisette-SymPrim.html#t:-45--45--62-\" title=\"Grisette.SymPrim\">--&gt;</a> cb","name":"-->","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:-45--45--62-"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:SymBool\">SymBool</a> = <a href=\"#v:SymBool\">SymBool</a> (<a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>)","name":"SymBool SymBool","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymBool"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:SymInteger\">SymInteger</a> = <a href=\"#v:SymInteger\">SymInteger</a> (<a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integer\" title=\"Prelude\">Integer</a>)","name":"SymInteger SymInteger","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymInteger"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:SymWordN\">SymWordN</a> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) = <a href=\"#v:SymWordN\">SymWordN</a> (<a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> (<a href=\"Grisette-SymPrim.html#t:WordN\" title=\"Grisette.SymPrim\">WordN</a> n))","name":"SymWordN SymWordN","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymWordN"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymWordN8\">SymWordN8</a> = <a href=\"Grisette-SymPrim.html#t:SymWordN\" title=\"Grisette.SymPrim\">SymWordN</a> 8","name":"SymWordN8","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymWordN8"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymWordN16\">SymWordN16</a> = <a href=\"Grisette-SymPrim.html#t:SymWordN\" title=\"Grisette.SymPrim\">SymWordN</a> 16","name":"SymWordN16","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymWordN16"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymWordN32\">SymWordN32</a> = <a href=\"Grisette-SymPrim.html#t:SymWordN\" title=\"Grisette.SymPrim\">SymWordN</a> 32","name":"SymWordN32","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymWordN32"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymWordN64\">SymWordN64</a> = <a href=\"Grisette-SymPrim.html#t:SymWordN\" title=\"Grisette.SymPrim\">SymWordN</a> 64","name":"SymWordN64","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymWordN64"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:SymIntN\">SymIntN</a> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) = <a href=\"#v:SymIntN\">SymIntN</a> (<a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> (<a href=\"Grisette-SymPrim.html#t:IntN\" title=\"Grisette.SymPrim\">IntN</a> n))","name":"SymIntN SymIntN","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymIntN"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymIntN8\">SymIntN8</a> = <a href=\"Grisette-SymPrim.html#t:SymIntN\" title=\"Grisette.SymPrim\">SymIntN</a> 8","name":"SymIntN8","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymIntN8"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymIntN16\">SymIntN16</a> = <a href=\"Grisette-SymPrim.html#t:SymIntN\" title=\"Grisette.SymPrim\">SymIntN</a> 16","name":"SymIntN16","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymIntN16"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymIntN32\">SymIntN32</a> = <a href=\"Grisette-SymPrim.html#t:SymIntN\" title=\"Grisette.SymPrim\">SymIntN</a> 32","name":"SymIntN32","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymIntN32"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymIntN64\">SymIntN64</a> = <a href=\"Grisette-SymPrim.html#t:SymIntN\" title=\"Grisette.SymPrim\">SymIntN</a> 64","name":"SymIntN64","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymIntN64"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SomeSymIntN\">SomeSymIntN</a> = <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> <a href=\"Grisette-SymPrim.html#t:SymIntN\" title=\"Grisette.SymPrim\">SymIntN</a>","name":"SomeSymIntN","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SomeSymIntN"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SomeSymWordN\">SomeSymWordN</a> = <a href=\"Grisette-SymPrim.html#t:SomeBV\" title=\"Grisette.SymPrim\">SomeBV</a> <a href=\"Grisette-SymPrim.html#t:SymWordN\" title=\"Grisette.SymPrim\">SymWordN</a>","name":"SomeSymWordN","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SomeSymWordN"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:SomeSymIntN\">SomeSymIntN</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-SymPrim.html#t:SymIntN\" title=\"Grisette.SymPrim\">SymIntN</a> n -&gt; <a href=\"Grisette-SymPrim.html#t:SomeSymIntN\" title=\"Grisette.SymPrim\">SomeSymIntN</a>","name":"SomeSymIntN","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:SomeSymIntN"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:SomeSymWordN\">SomeSymWordN</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-SymPrim.html#t:SymWordN\" title=\"Grisette.SymPrim\">SymWordN</a> n -&gt; <a href=\"Grisette-SymPrim.html#t:SomeSymWordN\" title=\"Grisette.SymPrim\">SomeSymWordN</a>","name":"SomeSymWordN","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:SomeSymWordN"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:SymFP\">SymFP</a> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) = <a href=\"#v:SymFP\">SymFP</a> (<a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> (<a href=\"Grisette-SymPrim.html#t:FP\" title=\"Grisette.SymPrim\">FP</a> eb sb))","name":"SymFP SymFP","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymFP"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:SymFPRoundingMode\">SymFPRoundingMode</a> = <a href=\"#v:SymFPRoundingMode\">SymFPRoundingMode</a> (<a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> <a href=\"Grisette-SymPrim.html#t:FPRoundingMode\" title=\"Grisette.SymPrim\">FPRoundingMode</a>)","name":"SymFPRoundingMode SymFPRoundingMode","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymFPRoundingMode"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymFP16\">SymFP16</a> = <a href=\"Grisette-SymPrim.html#t:SymFP\" title=\"Grisette.SymPrim\">SymFP</a> 5 11","name":"SymFP16","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymFP16"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymFP32\">SymFP32</a> = <a href=\"Grisette-SymPrim.html#t:SymFP\" title=\"Grisette.SymPrim\">SymFP</a> 8 24","name":"SymFP32","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymFP32"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymFP64\">SymFP64</a> = <a href=\"Grisette-SymPrim.html#t:SymFP\" title=\"Grisette.SymPrim\">SymFP</a> 11 53","name":"SymFP64","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymFP64"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:SymAlgReal\">SymAlgReal</a> = <a href=\"#v:SymAlgReal\">SymAlgReal</a> (<a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> <a href=\"Grisette-SymPrim.html#t:AlgReal\" title=\"Grisette.SymPrim\">AlgReal</a>)","name":"SymAlgReal SymAlgReal","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymAlgReal"},{"display_html":"<span class=\"keyword\">data</span> sa <a href=\"#t:-61--126--62-\">=~&gt;</a> sb <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:SymTabularFun\">SymTabularFun</a> :: <span class=\"keyword\">forall</span> ca sa cb sb. (<a href=\"Grisette-SymPrim.html#t:LinkedRep\" title=\"Grisette.SymPrim\">LinkedRep</a> ca sa, <a href=\"Grisette-SymPrim.html#t:LinkedRep\" title=\"Grisette.SymPrim\">LinkedRep</a> cb sb, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> (ca <a href=\"Grisette-SymPrim.html#t:-61--45--62-\" title=\"Grisette.SymPrim\">=-&gt;</a> cb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedNonFuncPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedNonFuncPrim</a> ca) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> (ca <a href=\"Grisette-SymPrim.html#t:-61--45--62-\" title=\"Grisette.SymPrim\">=-&gt;</a> cb) -&gt; sa <a href=\"Grisette-SymPrim.html#t:-61--126--62-\" title=\"Grisette.SymPrim\">=~&gt;</a> sb</li></ul>","name":"=~> SymTabularFun","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:-61--126--62-"},{"display_html":"<span class=\"keyword\">data</span> sa <a href=\"#t:-45--126--62-\">-~&gt;</a> sb <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:SymGeneralFun\">SymGeneralFun</a> :: <span class=\"keyword\">forall</span> ca sa cb sb. (<a href=\"Grisette-SymPrim.html#t:LinkedRep\" title=\"Grisette.SymPrim\">LinkedRep</a> ca sa, <a href=\"Grisette-SymPrim.html#t:LinkedRep\" title=\"Grisette.SymPrim\">LinkedRep</a> cb sb, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> (ca <a href=\"Grisette-SymPrim.html#t:-45--45--62-\" title=\"Grisette.SymPrim\">--&gt;</a> cb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedNonFuncPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedNonFuncPrim</a> ca) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> (ca <a href=\"Grisette-SymPrim.html#t:-45--45--62-\" title=\"Grisette.SymPrim\">--&gt;</a> cb) -&gt; sa <a href=\"Grisette-SymPrim.html#t:-45--126--62-\" title=\"Grisette.SymPrim\">-~&gt;</a> sb</li></ul>","name":"-~> SymGeneralFun","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:-45--126--62-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Prim\">Prim</a> a = (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Show\" title=\"Prelude\">Show</a> a, <a href=\"https://hackage.haskell.org/package/binary-0.8.9.2/docs/Data-Binary.html#t:Binary\" title=\"Data.Binary\">Binary</a> a, <a href=\"https://hackage.haskell.org/package/bytes-0.17.3/docs/Data-Bytes-Serial.html#t:Serial\" title=\"Data.Bytes.Serial\">Serial</a> a, <a href=\"https://hackage.haskell.org/package/cereal-0.5.8.3/docs/Data-Serialize.html#t:Serialize\" title=\"Data.Serialize\">Serialize</a> a, <a href=\"https://hackage.haskell.org/package/deepseq-1.5.0.0/docs/Control-DeepSeq.html#t:NFData\" title=\"Control.DeepSeq\">NFData</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SubstSym.html#t:SubstSym\" title=\"Grisette.Internal.Core.Data.Class.SubstSym\">SubstSym</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> a, <a href=\"Grisette-SymPrim.html#t:AllSyms\" title=\"Grisette.SymPrim\">AllSyms</a> a, <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> a, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Lift\" title=\"Language.Haskell.TH.Syntax\">Lift</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> a)","name":"Prim","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:Prim"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SymPrim\">SymPrim</a> a = (<a href=\"Grisette-SymPrim.html#t:Prim\" title=\"Grisette.SymPrim\">Prim</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ITEOp.html#t:ITEOp\" title=\"Grisette.Internal.Core.Data.Class.ITEOp\">ITEOp</a> a, <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:GenSymSimple\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">GenSymSimple</a> a a)","name":"SymPrim","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymPrim"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:BasicSymPrim\">BasicSymPrim</a> a = (<a href=\"Grisette-SymPrim.html#t:SymPrim\" title=\"Grisette.SymPrim\">SymPrim</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:GenSymSimple\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">GenSymSimple</a> () a, <a href=\"Grisette-Internal-Core-Data-Class-Solvable.html#t:Solvable\" title=\"Grisette.Internal.Core.Data.Class.Solvable\">Solvable</a> (<a href=\"Grisette-SymPrim.html#t:ConType\" title=\"Grisette.SymPrim\">ConType</a> a) a, <a href=\"Grisette-SymPrim.html#t:ConRep\" title=\"Grisette.SymPrim\">ConRep</a> a, <a href=\"Grisette-SymPrim.html#t:LinkedRep\" title=\"Grisette.SymPrim\">LinkedRep</a> (<a href=\"Grisette-SymPrim.html#t:ConType\" title=\"Grisette.SymPrim\">ConType</a> a) a, <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon</a> a (<a href=\"Grisette-SymPrim.html#t:ConType\" title=\"Grisette.SymPrim\">ConType</a> a), <a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">ToSym</a> (<a href=\"Grisette-SymPrim.html#t:ConType\" title=\"Grisette.SymPrim\">ConType</a> a) a, <a href=\"Grisette-Internal-Core-Data-Class-Function.html#t:Apply\" title=\"Grisette.Internal.Core.Data.Class.Function\">Apply</a> a, a <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"Grisette-Internal-Core-Data-Class-Function.html#t:FunType\" title=\"Grisette.Internal.Core.Data.Class.Function\">FunType</a> a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedNonFuncPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedNonFuncPrim</a> (<a href=\"Grisette-SymPrim.html#t:ConType\" title=\"Grisette.SymPrim\">ConType</a> a))","name":"BasicSymPrim","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:BasicSymPrim"},{"display_html":"<a href=\"#v:forallSet\">forallSet</a> :: <a href=\"Grisette-SymPrim.html#t:ConstantSymbolSet\" title=\"Grisette.SymPrim\">ConstantSymbolSet</a> -&gt; <a href=\"Grisette-SymPrim.html#t:SymBool\" title=\"Grisette.SymPrim\">SymBool</a> -&gt; <a href=\"Grisette-SymPrim.html#t:SymBool\" title=\"Grisette.SymPrim\">SymBool</a>","name":"forallSet","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:forallSet"},{"display_html":"<a href=\"#v:forallSym\">forallSym</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> a) =&gt; a -&gt; <a href=\"Grisette-SymPrim.html#t:SymBool\" title=\"Grisette.SymPrim\">SymBool</a> -&gt; <a href=\"Grisette-SymPrim.html#t:SymBool\" title=\"Grisette.SymPrim\">SymBool</a>","name":"forallSym","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:forallSym"},{"display_html":"<a href=\"#v:forallFresh\">forallFresh</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> v, <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m, <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:GenSym\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">GenSym</a> spec v, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; spec -&gt; (v -&gt; <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:FreshT\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">FreshT</a> <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"Grisette-SymPrim.html#t:SymBool\" title=\"Grisette.SymPrim\">SymBool</a>) -&gt; m <a href=\"Grisette-SymPrim.html#t:SymBool\" title=\"Grisette.SymPrim\">SymBool</a>","name":"forallFresh","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:forallFresh"},{"display_html":"<a href=\"#v:existsSet\">existsSet</a> :: <a href=\"Grisette-SymPrim.html#t:ConstantSymbolSet\" title=\"Grisette.SymPrim\">ConstantSymbolSet</a> -&gt; <a href=\"Grisette-SymPrim.html#t:SymBool\" title=\"Grisette.SymPrim\">SymBool</a> -&gt; <a href=\"Grisette-SymPrim.html#t:SymBool\" title=\"Grisette.SymPrim\">SymBool</a>","name":"existsSet","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:existsSet"},{"display_html":"<a href=\"#v:existsSym\">existsSym</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> a) =&gt; a -&gt; <a href=\"Grisette-SymPrim.html#t:SymBool\" title=\"Grisette.SymPrim\">SymBool</a> -&gt; <a href=\"Grisette-SymPrim.html#t:SymBool\" title=\"Grisette.SymPrim\">SymBool</a>","name":"existsSym","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:existsSym"},{"display_html":"<a href=\"#v:existsFresh\">existsFresh</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> v, <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:MonadFresh\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">MonadFresh</a> m, <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:GenSym\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">GenSym</a> spec v, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; spec -&gt; (v -&gt; <a href=\"Grisette-Internal-Core-Data-Class-GenSym.html#t:FreshT\" title=\"Grisette.Internal.Core.Data.Class.GenSym\">FreshT</a> <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"Grisette-SymPrim.html#t:SymBool\" title=\"Grisette.SymPrim\">SymBool</a>) -&gt; m <a href=\"Grisette-SymPrim.html#t:SymBool\" title=\"Grisette.SymPrim\">SymBool</a>","name":"existsFresh","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:existsFresh"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Lift\" title=\"Language.Haskell.TH.Syntax\">Lift</a> t, <a href=\"https://hackage.haskell.org/package/deepseq-1.5.0.0/docs/Control-DeepSeq.html#t:NFData\" title=\"Control.DeepSeq\">NFData</a> t, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedPrimConstraint\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedPrimConstraint</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SBVRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SBVRep</a> t) =&gt; <a href=\"#t:SupportedPrim\">SupportedPrim</a> t","name":"SupportedPrim","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SupportedPrim"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> con =&gt; <a href=\"#t:SymRep\">SymRep</a> con <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:SymType\">SymType</a> con</li></ul>","name":"SymRep SymType","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymRep"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ConRep\">ConRep</a> sym <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:ConType\">ConType</a> sym</li></ul>","name":"ConRep ConType","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:ConRep"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-SymPrim.html#t:ConRep\" title=\"Grisette.SymPrim\">ConRep</a> sym, <a href=\"Grisette-SymPrim.html#t:SymRep\" title=\"Grisette.SymPrim\">SymRep</a> con, sym <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"Grisette-SymPrim.html#t:SymType\" title=\"Grisette.SymPrim\">SymType</a> con, con <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"Grisette-SymPrim.html#t:ConType\" title=\"Grisette.SymPrim\">ConType</a> sym) =&gt; <a href=\"#t:LinkedRep\">LinkedRep</a> con sym | con -&gt; sym, sym -&gt; con <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:underlyingTerm\">underlyingTerm</a> :: sym -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> con</li><li><a href=\"#v:wrapTerm\">wrapTerm</a> :: <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> con -&gt; sym</li></ul>","name":"LinkedRep underlyingTerm wrapTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:LinkedRep"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeSym\">SomeSym</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:SomeSym\">SomeSym</a> :: <span class=\"keyword\">forall</span> con sym. <a href=\"Grisette-SymPrim.html#t:LinkedRep\" title=\"Grisette.SymPrim\">LinkedRep</a> con sym =&gt; sym -&gt; <a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a></li></ul>","name":"SomeSym SomeSym","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SomeSym"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:AllSyms\">AllSyms</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:allSymsS\">allSymsS</a> :: a -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>] -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>]</li><li><a href=\"#v:allSyms\">allSyms</a> :: a -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>]</li></ul>","name":"AllSyms allSyms allSymsS $dmallSyms $dmallSymsS","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:AllSyms"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-SymPrim.html#t:AllSyms\" title=\"Grisette.SymPrim\">AllSyms</a> a =&gt; <a href=\"Grisette-SymPrim.html#t:AllSyms\" title=\"Grisette.SymPrim\">AllSyms</a> (f a)) =&gt; <a href=\"#t:AllSyms1\">AllSyms1</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftAllSymsS\">liftAllSymsS</a> :: (a -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>] -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>]) -&gt; f a -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>] -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>]</li></ul>","name":"AllSyms1 liftAllSymsS","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:AllSyms1"},{"display_html":"<a href=\"#v:allSymsS1\">allSymsS1</a> :: (<a href=\"Grisette-SymPrim.html#t:AllSyms1\" title=\"Grisette.SymPrim\">AllSyms1</a> f, <a href=\"Grisette-SymPrim.html#t:AllSyms\" title=\"Grisette.SymPrim\">AllSyms</a> a) =&gt; f a -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>] -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>]","name":"allSymsS1","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:allSymsS1"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-SymPrim.html#t:AllSyms\" title=\"Grisette.SymPrim\">AllSyms</a> a =&gt; <a href=\"Grisette-SymPrim.html#t:AllSyms1\" title=\"Grisette.SymPrim\">AllSyms1</a> (f a)) =&gt; <a href=\"#t:AllSyms2\">AllSyms2</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftAllSymsS2\">liftAllSymsS2</a> :: (a -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>] -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>]) -&gt; (b -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>] -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>]) -&gt; f a b -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>] -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>]</li></ul>","name":"AllSyms2 liftAllSymsS2","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:AllSyms2"},{"display_html":"<a href=\"#v:allSymsS2\">allSymsS2</a> :: (<a href=\"Grisette-SymPrim.html#t:AllSyms2\" title=\"Grisette.SymPrim\">AllSyms2</a> f, <a href=\"Grisette-SymPrim.html#t:AllSyms\" title=\"Grisette.SymPrim\">AllSyms</a> a, <a href=\"Grisette-SymPrim.html#t:AllSyms\" title=\"Grisette.SymPrim\">AllSyms</a> b) =&gt; f a b -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>] -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>]","name":"allSymsS2","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:allSymsS2"},{"display_html":"<a href=\"#v:allSymsSize\">allSymsSize</a> :: <a href=\"Grisette-SymPrim.html#t:AllSyms\" title=\"Grisette.SymPrim\">AllSyms</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"allSymsSize","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:allSymsSize"},{"display_html":"<a href=\"#v:symSize\">symSize</a> :: <a href=\"Grisette-SymPrim.html#t:LinkedRep\" title=\"Grisette.SymPrim\">LinkedRep</a> con sym =&gt; sym -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"symSize","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:symSize"},{"display_html":"<a href=\"#v:symsSize\">symsSize</a> :: <a href=\"Grisette-SymPrim.html#t:LinkedRep\" title=\"Grisette.SymPrim\">LinkedRep</a> con sym =&gt; [sym] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"symsSize","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:symsSize"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:AllSymsArgs\">AllSymsArgs</a> arity a","name":"AllSymsArgs AllSymsArgs0 AllSymsArgs1","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:AllSymsArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GAllSyms\">GAllSyms</a> arity (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:gallSymsS\">gallSymsS</a> :: <a href=\"Grisette-SymPrim.html#t:AllSymsArgs\" title=\"Grisette.SymPrim\">AllSymsArgs</a> arity a -&gt; f a -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>] -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>]</li></ul>","name":"GAllSyms gallSymsS","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:GAllSyms"},{"display_html":"<a href=\"#v:genericAllSymsS\">genericAllSymsS</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"Grisette-SymPrim.html#t:GAllSyms\" title=\"Grisette.SymPrim\">GAllSyms</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a)) =&gt; a -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>] -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>]","name":"genericAllSymsS","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:genericAllSymsS"},{"display_html":"<a href=\"#v:genericLiftAllSymsS\">genericLiftAllSymsS</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f, <a href=\"Grisette-SymPrim.html#t:GAllSyms\" title=\"Grisette.SymPrim\">GAllSyms</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f)) =&gt; (a -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>] -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>]) -&gt; f a -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>] -&gt; [<a href=\"Grisette-SymPrim.html#t:SomeSym\" title=\"Grisette.SymPrim\">SomeSym</a>]","name":"genericLiftAllSymsS","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:genericLiftAllSymsS"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SymbolKind\">SymbolKind</a><ul class=\"subs\"><li>= <a href=\"#v:ConstantKind\">ConstantKind</a></li><li>| <a href=\"#v:AnyKind\">AnyKind</a></li></ul>","name":"SymbolKind AnyKind ConstantKind","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymbolKind"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IsSymbolKind\">IsSymbolKind</a> (knd :: <a href=\"Grisette-SymPrim.html#t:SymbolKind\" title=\"Grisette.SymPrim\">SymbolKind</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:SymbolKindConstraint\">SymbolKindConstraint</a> (knd :: <a href=\"Grisette-SymPrim.html#t:SymbolKind\" title=\"Grisette.SymPrim\">SymbolKind</a>) :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a></li><li><a href=\"#v:decideSymbolKind\">decideSymbolKind</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> (knd <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t::-126--126-:\" title=\"Data.Type.Equality\">:~~:</a> '<a href=\"Grisette-SymPrim.html#v:ConstantKind\" title=\"Grisette.SymPrim\">ConstantKind</a>) (knd <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t::-126--126-:\" title=\"Data.Type.Equality\">:~~:</a> '<a href=\"Grisette-SymPrim.html#v:AnyKind\" title=\"Grisette.SymPrim\">AnyKind</a>)</li><li><a href=\"#v:withSymbolKindConstraint\">withSymbolKindConstraint</a> :: <a href=\"Grisette-SymPrim.html#t:TypedSymbol\" title=\"Grisette.SymPrim\">TypedSymbol</a> knd t -&gt; (<a href=\"Grisette-SymPrim.html#t:SymbolKindConstraint\" title=\"Grisette.SymPrim\">SymbolKindConstraint</a> knd t =&gt; a) -&gt; a</li></ul>","name":"IsSymbolKind decideSymbolKind SymbolKindConstraint withSymbolKindConstraint","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:IsSymbolKind"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TypedSymbol\">TypedSymbol</a> (knd :: <a href=\"Grisette-SymPrim.html#t:SymbolKind\" title=\"Grisette.SymPrim\">SymbolKind</a>) t <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TypedSymbol\">TypedSymbol</a> :: <span class=\"keyword\">forall</span> t (knd :: <a href=\"Grisette-SymPrim.html#t:SymbolKind\" title=\"Grisette.SymPrim\">SymbolKind</a>). (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-SymPrim.html#t:SymbolKindConstraint\" title=\"Grisette.SymPrim\">SymbolKindConstraint</a> knd t, <a href=\"Grisette-SymPrim.html#t:IsSymbolKind\" title=\"Grisette.SymPrim\">IsSymbolKind</a> knd) =&gt; {..} -&gt; <a href=\"Grisette-SymPrim.html#t:TypedSymbol\" title=\"Grisette.SymPrim\">TypedSymbol</a> knd t</li></ul>","name":"TypedSymbol TypedSymbol unTypedSymbol","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:TypedSymbol"},{"display_html":"<a href=\"#v:typedAnySymbol\">typedAnySymbol</a> :: <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t =&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Symbol\" title=\"Grisette.Internal.Core.Data.Symbol\">Symbol</a> -&gt; <a href=\"Grisette-SymPrim.html#t:TypedSymbol\" title=\"Grisette.SymPrim\">TypedSymbol</a> '<a href=\"Grisette-SymPrim.html#v:AnyKind\" title=\"Grisette.SymPrim\">AnyKind</a> t","name":"typedAnySymbol","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:typedAnySymbol"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TypedAnySymbol\">TypedAnySymbol</a> = <a href=\"Grisette-SymPrim.html#t:TypedSymbol\" title=\"Grisette.SymPrim\">TypedSymbol</a> '<a href=\"Grisette-SymPrim.html#v:AnyKind\" title=\"Grisette.SymPrim\">AnyKind</a>","name":"TypedAnySymbol","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:TypedAnySymbol"},{"display_html":"<a href=\"#v:typedConstantSymbol\">typedConstantSymbol</a> :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedNonFuncPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedNonFuncPrim</a> t =&gt; <a href=\"Grisette-Internal-Core-Data-Symbol.html#t:Symbol\" title=\"Grisette.Internal.Core.Data.Symbol\">Symbol</a> -&gt; <a href=\"Grisette-SymPrim.html#t:TypedSymbol\" title=\"Grisette.SymPrim\">TypedSymbol</a> '<a href=\"Grisette-SymPrim.html#v:ConstantKind\" title=\"Grisette.SymPrim\">ConstantKind</a> t","name":"typedConstantSymbol","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:typedConstantSymbol"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TypedConstantSymbol\">TypedConstantSymbol</a> = <a href=\"Grisette-SymPrim.html#t:TypedSymbol\" title=\"Grisette.SymPrim\">TypedSymbol</a> '<a href=\"Grisette-SymPrim.html#v:ConstantKind\" title=\"Grisette.SymPrim\">ConstantKind</a>","name":"TypedConstantSymbol","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:TypedConstantSymbol"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeTypedSymbol\">SomeTypedSymbol</a> (knd :: <a href=\"Grisette-SymPrim.html#t:SymbolKind\" title=\"Grisette.SymPrim\">SymbolKind</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:SomeTypedSymbol\">SomeTypedSymbol</a> :: <span class=\"keyword\">forall</span> (knd :: <a href=\"Grisette-SymPrim.html#t:SymbolKind\" title=\"Grisette.SymPrim\">SymbolKind</a>) t. <a href=\"Grisette-SymPrim.html#t:TypedSymbol\" title=\"Grisette.SymPrim\">TypedSymbol</a> knd t -&gt; <a href=\"Grisette-SymPrim.html#t:SomeTypedSymbol\" title=\"Grisette.SymPrim\">SomeTypedSymbol</a> knd</li></ul>","name":"SomeTypedSymbol SomeTypedSymbol","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SomeTypedSymbol"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SomeTypedAnySymbol\">SomeTypedAnySymbol</a> = <a href=\"Grisette-SymPrim.html#t:SomeTypedSymbol\" title=\"Grisette.SymPrim\">SomeTypedSymbol</a> '<a href=\"Grisette-SymPrim.html#v:AnyKind\" title=\"Grisette.SymPrim\">AnyKind</a>","name":"SomeTypedAnySymbol","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SomeTypedAnySymbol"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SomeTypedConstantSymbol\">SomeTypedConstantSymbol</a> = <a href=\"Grisette-SymPrim.html#t:SomeTypedSymbol\" title=\"Grisette.SymPrim\">SomeTypedSymbol</a> '<a href=\"Grisette-SymPrim.html#v:ConstantKind\" title=\"Grisette.SymPrim\">ConstantKind</a>","name":"SomeTypedConstantSymbol","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SomeTypedConstantSymbol"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SymbolSet\">SymbolSet</a> (knd :: <a href=\"Grisette-SymPrim.html#t:SymbolKind\" title=\"Grisette.SymPrim\">SymbolKind</a>)","name":"SymbolSet","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SymbolSet"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:AnySymbolSet\">AnySymbolSet</a> = <a href=\"Grisette-SymPrim.html#t:SymbolSet\" title=\"Grisette.SymPrim\">SymbolSet</a> '<a href=\"Grisette-SymPrim.html#v:AnyKind\" title=\"Grisette.SymPrim\">AnyKind</a>","name":"AnySymbolSet","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:AnySymbolSet"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ConstantSymbolSet\">ConstantSymbolSet</a> = <a href=\"Grisette-SymPrim.html#t:SymbolSet\" title=\"Grisette.SymPrim\">SymbolSet</a> '<a href=\"Grisette-SymPrim.html#v:ConstantKind\" title=\"Grisette.SymPrim\">ConstantKind</a>","name":"ConstantSymbolSet","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:ConstantSymbolSet"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Model\">Model</a>","name":"Model","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:Model"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ModelValuePair\">ModelValuePair</a> t = (<a href=\"Grisette-SymPrim.html#t:TypedAnySymbol\" title=\"Grisette.SymPrim\">TypedAnySymbol</a> t) <a href=\"#v:::-61-\">::=</a> t","name":"ModelValuePair ::=","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:ModelValuePair"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ModelSymPair\">ModelSymPair</a> ct st <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v::-61-\">(:=)</a> :: <span class=\"keyword\">forall</span> ct st. <a href=\"Grisette-SymPrim.html#t:LinkedRep\" title=\"Grisette.SymPrim\">LinkedRep</a> ct st =&gt; st -&gt; ct -&gt; <a href=\"Grisette-SymPrim.html#t:ModelSymPair\" title=\"Grisette.SymPrim\">ModelSymPair</a> ct st</li></ul>","name":"ModelSymPair :=","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:ModelSymPair"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Term\">Term</a> t","name":"Term","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:Term"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeTerm\">SomeTerm</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:SomeTerm\">SomeTerm</a> :: <span class=\"keyword\">forall</span> a. <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> a =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> a -&gt; <a href=\"Grisette-SymPrim.html#t:SomeTerm\" title=\"Grisette.SymPrim\">SomeTerm</a></li></ul>","name":"SomeTerm SomeTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#t:SomeTerm"},{"display_html":"<a href=\"#v:termSize\">termSize</a> :: <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"termSize","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:termSize"},{"display_html":"<a href=\"#v:someTermSize\">someTermSize</a> :: <a href=\"Grisette-SymPrim.html#t:SomeTerm\" title=\"Grisette.SymPrim\">SomeTerm</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"someTermSize","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:someTermSize"},{"display_html":"<a href=\"#v:termsSize\">termsSize</a> :: [<a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> a] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"termsSize","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:termsSize"},{"display_html":"<a href=\"#v:someTermsSize\">someTermsSize</a> :: [<a href=\"Grisette-SymPrim.html#t:SomeTerm\" title=\"Grisette.SymPrim\">SomeTerm</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"someTermsSize","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:someTermsSize"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:SupportedTerm\">SupportedTerm</a> :: () =&gt; <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"SupportedTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:SupportedTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:SupportedTypedSymbol\">SupportedTypedSymbol</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-SymPrim.html#t:SymbolKindConstraint\" title=\"Grisette.SymPrim\">SymbolKindConstraint</a> k t, <a href=\"Grisette-SymPrim.html#t:IsSymbolKind\" title=\"Grisette.SymPrim\">IsSymbolKind</a> k) =&gt; <a href=\"Grisette-SymPrim.html#t:TypedSymbol\" title=\"Grisette.SymPrim\">TypedSymbol</a> k t","name":"SupportedTypedSymbol","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:SupportedTypedSymbol"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:SupportedConstantTypedSymbol\">SupportedConstantTypedSymbol</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-SymPrim.html#t:SymbolKindConstraint\" title=\"Grisette.SymPrim\">SymbolKindConstraint</a> k t, <a href=\"Grisette-SymPrim.html#t:IsSymbolKind\" title=\"Grisette.SymPrim\">IsSymbolKind</a> k, k <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-SymPrim.html#v:ConstantKind\" title=\"Grisette.SymPrim\">ConstantKind</a>) =&gt; <a href=\"Grisette-SymPrim.html#t:TypedSymbol\" title=\"Grisette.SymPrim\">TypedSymbol</a> k t","name":"SupportedConstantTypedSymbol","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:SupportedConstantTypedSymbol"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ConTerm\">ConTerm</a> :: () =&gt; <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t =&gt; t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"ConTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:ConTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:SymTerm\">SymTerm</a> :: () =&gt; <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t =&gt; <a href=\"Grisette-SymPrim.html#t:TypedSymbol\" title=\"Grisette.SymPrim\">TypedSymbol</a> '<a href=\"Grisette-SymPrim.html#v:AnyKind\" title=\"Grisette.SymPrim\">AnyKind</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"SymTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:SymTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ForallTerm\">ForallTerm</a> :: <span class=\"keyword\">forall</span> r t. () =&gt; (r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedNonFuncPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedNonFuncPrim</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:TypedSymbol\" title=\"Grisette.SymPrim\">TypedSymbol</a> '<a href=\"Grisette-SymPrim.html#v:ConstantKind\" title=\"Grisette.SymPrim\">ConstantKind</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> r","name":"ForallTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:ForallTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ExistsTerm\">ExistsTerm</a> :: <span class=\"keyword\">forall</span> r t. () =&gt; (r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SupportedNonFuncPrim\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SupportedNonFuncPrim</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:TypedSymbol\" title=\"Grisette.SymPrim\">TypedSymbol</a> '<a href=\"Grisette-SymPrim.html#v:ConstantKind\" title=\"Grisette.SymPrim\">ConstantKind</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> r","name":"ExistsTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:ExistsTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:NotTerm\">NotTerm</a> :: () =&gt; r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> r","name":"NotTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:NotTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:OrTerm\">OrTerm</a> :: () =&gt; r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> r","name":"OrTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:OrTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:AndTerm\">AndTerm</a> :: () =&gt; r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> r","name":"AndTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:AndTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:EqTerm\">EqTerm</a> :: <span class=\"keyword\">forall</span> r t. () =&gt; (r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> r","name":"EqTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:EqTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:DistinctTerm\">DistinctTerm</a> :: <span class=\"keyword\">forall</span> r t. () =&gt; (r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-List-NonEmpty.html#t:NonEmpty\" title=\"Data.List.NonEmpty\">NonEmpty</a> (<a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t) -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> r","name":"DistinctTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:DistinctTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ITETerm\">ITETerm</a> :: () =&gt; <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"ITETerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:ITETerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:AddNumTerm\">AddNumTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"AddNumTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:AddNumTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:NegNumTerm\">NegNumTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"NegNumTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:NegNumTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:MulNumTerm\">MulNumTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"MulNumTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:MulNumTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:AbsNumTerm\">AbsNumTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"AbsNumTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:AbsNumTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:SignumNumTerm\">SignumNumTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalNumTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalNumTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"SignumNumTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:SignumNumTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:LtOrdTerm\">LtOrdTerm</a> :: <span class=\"keyword\">forall</span> r t. () =&gt; (r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalOrdTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalOrdTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> r","name":"LtOrdTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:LtOrdTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:LeOrdTerm\">LeOrdTerm</a> :: <span class=\"keyword\">forall</span> r t. () =&gt; (r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalOrdTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalOrdTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> r","name":"LeOrdTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:LeOrdTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:AndBitsTerm\">AndBitsTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitwiseTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"AndBitsTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:AndBitsTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:OrBitsTerm\">OrBitsTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitwiseTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"OrBitsTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:OrBitsTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:XorBitsTerm\">XorBitsTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitwiseTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"XorBitsTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:XorBitsTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ComplementBitsTerm\">ComplementBitsTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitwiseTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitwiseTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"ComplementBitsTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:ComplementBitsTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ShiftLeftTerm\">ShiftLeftTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalShiftTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalShiftTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"ShiftLeftTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:ShiftLeftTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:RotateLeftTerm\">RotateLeftTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalRotateTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalRotateTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"RotateLeftTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:RotateLeftTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ShiftRightTerm\">ShiftRightTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalShiftTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalShiftTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"ShiftRightTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:ShiftRightTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:RotateRightTerm\">RotateRightTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalRotateTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalRotateTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"RotateRightTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:RotateRightTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:BitCastTerm\">BitCastTerm</a> :: <span class=\"keyword\">forall</span> b a. () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> a, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> b, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitCastTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitCastTerm</a> a b) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> a -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> b","name":"BitCastTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:BitCastTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:BitCastOrTerm\">BitCastOrTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> a, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> b, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBitCastOrTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBitCastOrTerm</a> a b) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> b -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> a -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> b","name":"BitCastOrTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:BitCastOrTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:BVConcatTerm\">BVConcatTerm</a> :: <span class=\"keyword\">forall</span> ret bv (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r), 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r), <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> (bv l), <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> (bv r), <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> (bv (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r)), ret <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> bv (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r)) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> (bv l) -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> (bv r) -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> ret","name":"BVConcatTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:BVConcatTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:BVSelectTerm\">BVSelectTerm</a> :: <span class=\"keyword\">forall</span> ret bv (w :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (ix :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> ix, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> w, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> w, (ix <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> w) <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> (bv n), <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> (bv w), ret <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> bv w) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> ix -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> w -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> (bv n) -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> ret","name":"BVSelectTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:BVSelectTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:BVExtendTerm\">BVExtendTerm</a> :: <span class=\"keyword\">forall</span> ret bv (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalBVTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalBVTerm</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r, l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> (bv l), <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> (bv r), ret <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> bv r) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> r -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> (bv l) -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> ret","name":"BVExtendTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:BVExtendTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ApplyTerm\">ApplyTerm</a> :: <span class=\"keyword\">forall</span> b f a. () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalApplyTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalApplyTerm</a> f a b, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> f, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> a, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> b) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> f -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> a -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> b","name":"ApplyTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:ApplyTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:DivIntegralTerm\">DivIntegralTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"DivIntegralTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:DivIntegralTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ModIntegralTerm\">ModIntegralTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"ModIntegralTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:ModIntegralTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:QuotIntegralTerm\">QuotIntegralTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"QuotIntegralTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:QuotIntegralTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:RemIntegralTerm\">RemIntegralTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalDivModIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalDivModIntegralTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"RemIntegralTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:RemIntegralTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FPTraitTerm\">FPTraitTerm</a> :: <span class=\"keyword\">forall</span> r (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) fp. () =&gt; (r <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>, <a href=\"Grisette-SymPrim.html#t:ValidFP\" title=\"Grisette.SymPrim\">ValidFP</a> eb sb, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPTrait\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPTrait</a> -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> r","name":"FPTraitTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:FPTraitTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FdivTerm\">FdivTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFractionalTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFractionalTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"FdivTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:FdivTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:RecipTerm\">RecipTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFractionalTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFractionalTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"RecipTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:RecipTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FloatingUnaryTerm\">FloatingUnaryTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFloatingTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFloatingTerm</a> t) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FloatingUnaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FloatingUnaryOp</a> -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"FloatingUnaryTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:FloatingUnaryTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:PowerTerm\">PowerTerm</a> :: () =&gt; (<a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> t, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFloatingTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFloatingTerm</a> t) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> t","name":"PowerTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:PowerTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FPUnaryTerm\">FPUnaryTerm</a> :: <span class=\"keyword\">forall</span> ret fp (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (ret <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> fp eb sb, <a href=\"Grisette-SymPrim.html#t:ValidFP\" title=\"Grisette.SymPrim\">ValidFP</a> eb sb, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPUnaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPUnaryOp</a> -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> ret","name":"FPUnaryTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:FPUnaryTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FPBinaryTerm\">FPBinaryTerm</a> :: <span class=\"keyword\">forall</span> ret fp (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (ret <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> fp eb sb, <a href=\"Grisette-SymPrim.html#t:ValidFP\" title=\"Grisette.SymPrim\">ValidFP</a> eb sb, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPBinaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPBinaryOp</a> -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> ret","name":"FPBinaryTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:FPBinaryTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FPRoundingUnaryTerm\">FPRoundingUnaryTerm</a> :: <span class=\"keyword\">forall</span> ret fp (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (ret <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> fp eb sb, <a href=\"Grisette-SymPrim.html#t:ValidFP\" title=\"Grisette.SymPrim\">ValidFP</a> eb sb, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPRoundingUnaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPRoundingUnaryOp</a> -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> <a href=\"Grisette-SymPrim.html#t:FPRoundingMode\" title=\"Grisette.SymPrim\">FPRoundingMode</a> -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> ret","name":"FPRoundingUnaryTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:FPRoundingUnaryTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FPRoundingBinaryTerm\">FPRoundingBinaryTerm</a> :: <span class=\"keyword\">forall</span> ret fp (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (ret <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> fp eb sb, <a href=\"Grisette-SymPrim.html#t:ValidFP\" title=\"Grisette.SymPrim\">ValidFP</a> eb sb, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:FPRoundingBinaryOp\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">FPRoundingBinaryOp</a> -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> <a href=\"Grisette-SymPrim.html#t:FPRoundingMode\" title=\"Grisette.SymPrim\">FPRoundingMode</a> -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> ret","name":"FPRoundingBinaryTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:FPRoundingBinaryTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FPFMATerm\">FPFMATerm</a> :: <span class=\"keyword\">forall</span> ret fp (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (ret <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> fp eb sb, <a href=\"Grisette-SymPrim.html#t:ValidFP\" title=\"Grisette.SymPrim\">ValidFP</a> eb sb, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> (fp eb sb), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFPTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFPTerm</a> fp) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> <a href=\"Grisette-SymPrim.html#t:FPRoundingMode\" title=\"Grisette.SymPrim\">FPRoundingMode</a> -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> (fp eb sb) -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> ret","name":"FPFMATerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:FPFMATerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FromIntegralTerm\">FromIntegralTerm</a> :: <span class=\"keyword\">forall</span> b a. () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalFromIntegralTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalFromIntegralTerm</a> a b, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> a, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> b) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> a -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> b","name":"FromIntegralTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:FromIntegralTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FromFPOrTerm\">FromFPOrTerm</a> :: <span class=\"keyword\">forall</span> a (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalIEEEFPConvertibleTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalIEEEFPConvertibleTerm</a> a, <a href=\"Grisette-SymPrim.html#t:ValidFP\" title=\"Grisette.SymPrim\">ValidFP</a> eb sb, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> a) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> a -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> <a href=\"Grisette-SymPrim.html#t:FPRoundingMode\" title=\"Grisette.SymPrim\">FPRoundingMode</a> -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> (<a href=\"Grisette-SymPrim.html#t:FP\" title=\"Grisette.SymPrim\">FP</a> eb sb) -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> a","name":"FromFPOrTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:FromFPOrTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:ToFPTerm\">ToFPTerm</a> :: <span class=\"keyword\">forall</span> ret (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) a. () =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:PEvalIEEEFPConvertibleTerm\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">PEvalIEEEFPConvertibleTerm</a> a, <a href=\"Grisette-SymPrim.html#t:ValidFP\" title=\"Grisette.SymPrim\">ValidFP</a> eb sb, <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> (<a href=\"Grisette-SymPrim.html#t:FP\" title=\"Grisette.SymPrim\">FP</a> eb sb), <a href=\"Grisette-SymPrim.html#t:SupportedPrim\" title=\"Grisette.SymPrim\">SupportedPrim</a> a, ret <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"Grisette-SymPrim.html#t:FP\" title=\"Grisette.SymPrim\">FP</a> eb sb) =&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> <a href=\"Grisette-SymPrim.html#t:FPRoundingMode\" title=\"Grisette.SymPrim\">FPRoundingMode</a> -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> eb -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> sb -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> ret","name":"ToFPTerm","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:ToFPTerm"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:SubTerms\">SubTerms</a> :: [<a href=\"Grisette-SymPrim.html#t:SomeTerm\" title=\"Grisette.SymPrim\">SomeTerm</a>] -&gt; <a href=\"Grisette-SymPrim.html#t:Term\" title=\"Grisette.SymPrim\">Term</a> a","name":"SubTerms","module":"Grisette.SymPrim","link":"Grisette-SymPrim.html#v:SubTerms"},{"display_html":"<a href=\"#v:safeSymShiftL\">safeSymShiftL</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSafeSymShift.html#t:UnifiedSafeSymShift\" title=\"Grisette.Internal.Unified.Class.UnifiedSafeSymShift\">UnifiedSafeSymShift</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeSymShiftL","module":"Grisette.Internal.Unified.Class.UnifiedSafeSymShift","link":"Grisette-Internal-Unified-Class-UnifiedSafeSymShift.html#v:safeSymShiftL"},{"display_html":"<a href=\"#v:safeSymShiftR\">safeSymShiftR</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSafeSymShift.html#t:UnifiedSafeSymShift\" title=\"Grisette.Internal.Unified.Class.UnifiedSafeSymShift\">UnifiedSafeSymShift</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeSymShiftR","module":"Grisette.Internal.Unified.Class.UnifiedSafeSymShift","link":"Grisette-Internal-Unified-Class-UnifiedSafeSymShift.html#v:safeSymShiftR"},{"display_html":"<a href=\"#v:safeSymStrictShiftL\">safeSymStrictShiftL</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSafeSymShift.html#t:UnifiedSafeSymShift\" title=\"Grisette.Internal.Unified.Class.UnifiedSafeSymShift\">UnifiedSafeSymShift</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeSymStrictShiftL","module":"Grisette.Internal.Unified.Class.UnifiedSafeSymShift","link":"Grisette-Internal-Unified-Class-UnifiedSafeSymShift.html#v:safeSymStrictShiftL"},{"display_html":"<a href=\"#v:safeSymStrictShiftR\">safeSymStrictShiftR</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSafeSymShift.html#t:UnifiedSafeSymShift\" title=\"Grisette.Internal.Unified.Class.UnifiedSafeSymShift\">UnifiedSafeSymShift</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeSymStrictShiftR","module":"Grisette.Internal.Unified.Class.UnifiedSafeSymShift","link":"Grisette-Internal-Unified-Class-UnifiedSafeSymShift.html#v:safeSymStrictShiftR"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSafeSymShift\">UnifiedSafeSymShift</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSafeSymShift\">withBaseSafeSymShift</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeSymShift.html#t:SafeSymShift\" title=\"Grisette.Internal.Core.Data.Class.SafeSymShift\">SafeSymShift</a> e a m =&gt; r) -&gt; r</li></ul>","name":"UnifiedSafeSymShift withBaseSafeSymShift","module":"Grisette.Internal.Unified.Class.UnifiedSafeSymShift","link":"Grisette-Internal-Unified-Class-UnifiedSafeSymShift.html#t:UnifiedSafeSymShift"},{"display_html":"<a href=\"#v:safeSymRotateL\">safeSymRotateL</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSafeSymRotate.html#t:UnifiedSafeSymRotate\" title=\"Grisette.Internal.Unified.Class.UnifiedSafeSymRotate\">UnifiedSafeSymRotate</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeSymRotateL","module":"Grisette.Internal.Unified.Class.UnifiedSafeSymRotate","link":"Grisette-Internal-Unified-Class-UnifiedSafeSymRotate.html#v:safeSymRotateL"},{"display_html":"<a href=\"#v:safeSymRotateR\">safeSymRotateR</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSafeSymRotate.html#t:UnifiedSafeSymRotate\" title=\"Grisette.Internal.Unified.Class.UnifiedSafeSymRotate\">UnifiedSafeSymRotate</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeSymRotateR","module":"Grisette.Internal.Unified.Class.UnifiedSafeSymRotate","link":"Grisette-Internal-Unified-Class-UnifiedSafeSymRotate.html#v:safeSymRotateR"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSafeSymRotate\">UnifiedSafeSymRotate</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSafeSymRotate\">withBaseSafeSymRotate</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeSymRotate.html#t:SafeSymRotate\" title=\"Grisette.Internal.Core.Data.Class.SafeSymRotate\">SafeSymRotate</a> e a m =&gt; r) -&gt; r</li></ul>","name":"UnifiedSafeSymRotate withBaseSafeSymRotate","module":"Grisette.Internal.Unified.Class.UnifiedSafeSymRotate","link":"Grisette-Internal-Unified-Class-UnifiedSafeSymRotate.html#t:UnifiedSafeSymRotate"},{"display_html":"<a href=\"#v:safeAdd\">safeAdd</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSafeLinearArith.html#t:UnifiedSafeLinearArith\" title=\"Grisette.Internal.Unified.Class.UnifiedSafeLinearArith\">UnifiedSafeLinearArith</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeAdd","module":"Grisette.Internal.Unified.Class.UnifiedSafeLinearArith","link":"Grisette-Internal-Unified-Class-UnifiedSafeLinearArith.html#v:safeAdd"},{"display_html":"<a href=\"#v:safeNeg\">safeNeg</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSafeLinearArith.html#t:UnifiedSafeLinearArith\" title=\"Grisette.Internal.Unified.Class.UnifiedSafeLinearArith\">UnifiedSafeLinearArith</a> mode e a m) =&gt; a -&gt; m a","name":"safeNeg","module":"Grisette.Internal.Unified.Class.UnifiedSafeLinearArith","link":"Grisette-Internal-Unified-Class-UnifiedSafeLinearArith.html#v:safeNeg"},{"display_html":"<a href=\"#v:safeSub\">safeSub</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSafeLinearArith.html#t:UnifiedSafeLinearArith\" title=\"Grisette.Internal.Unified.Class.UnifiedSafeLinearArith\">UnifiedSafeLinearArith</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeSub","module":"Grisette.Internal.Unified.Class.UnifiedSafeLinearArith","link":"Grisette-Internal-Unified-Class-UnifiedSafeLinearArith.html#v:safeSub"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSafeLinearArith\">UnifiedSafeLinearArith</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSafeLinearArith\">withBaseSafeLinearArith</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeLinearArith.html#t:SafeLinearArith\" title=\"Grisette.Internal.Core.Data.Class.SafeLinearArith\">SafeLinearArith</a> e a m =&gt; r) -&gt; r</li></ul>","name":"UnifiedSafeLinearArith withBaseSafeLinearArith","module":"Grisette.Internal.Unified.Class.UnifiedSafeLinearArith","link":"Grisette-Internal-Unified-Class-UnifiedSafeLinearArith.html#t:UnifiedSafeLinearArith"},{"display_html":"<a href=\"#v:safeDiv\">safeDiv</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSafeDiv.html#t:UnifiedSafeDiv\" title=\"Grisette.Internal.Unified.Class.UnifiedSafeDiv\">UnifiedSafeDiv</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeDiv","module":"Grisette.Internal.Unified.Class.UnifiedSafeDiv","link":"Grisette-Internal-Unified-Class-UnifiedSafeDiv.html#v:safeDiv"},{"display_html":"<a href=\"#v:safeMod\">safeMod</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSafeDiv.html#t:UnifiedSafeDiv\" title=\"Grisette.Internal.Unified.Class.UnifiedSafeDiv\">UnifiedSafeDiv</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeMod","module":"Grisette.Internal.Unified.Class.UnifiedSafeDiv","link":"Grisette-Internal-Unified-Class-UnifiedSafeDiv.html#v:safeMod"},{"display_html":"<a href=\"#v:safeDivMod\">safeDivMod</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSafeDiv.html#t:UnifiedSafeDiv\" title=\"Grisette.Internal.Unified.Class.UnifiedSafeDiv\">UnifiedSafeDiv</a> mode e a m) =&gt; a -&gt; a -&gt; m (a, a)","name":"safeDivMod","module":"Grisette.Internal.Unified.Class.UnifiedSafeDiv","link":"Grisette-Internal-Unified-Class-UnifiedSafeDiv.html#v:safeDivMod"},{"display_html":"<a href=\"#v:safeQuot\">safeQuot</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSafeDiv.html#t:UnifiedSafeDiv\" title=\"Grisette.Internal.Unified.Class.UnifiedSafeDiv\">UnifiedSafeDiv</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeQuot","module":"Grisette.Internal.Unified.Class.UnifiedSafeDiv","link":"Grisette-Internal-Unified-Class-UnifiedSafeDiv.html#v:safeQuot"},{"display_html":"<a href=\"#v:safeRem\">safeRem</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSafeDiv.html#t:UnifiedSafeDiv\" title=\"Grisette.Internal.Unified.Class.UnifiedSafeDiv\">UnifiedSafeDiv</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeRem","module":"Grisette.Internal.Unified.Class.UnifiedSafeDiv","link":"Grisette-Internal-Unified-Class-UnifiedSafeDiv.html#v:safeRem"},{"display_html":"<a href=\"#v:safeQuotRem\">safeQuotRem</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSafeDiv.html#t:UnifiedSafeDiv\" title=\"Grisette.Internal.Unified.Class.UnifiedSafeDiv\">UnifiedSafeDiv</a> mode e a m) =&gt; a -&gt; a -&gt; m (a, a)","name":"safeQuotRem","module":"Grisette.Internal.Unified.Class.UnifiedSafeDiv","link":"Grisette-Internal-Unified-Class-UnifiedSafeDiv.html#v:safeQuotRem"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSafeDiv\">UnifiedSafeDiv</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSafeDiv\">withBaseSafeDiv</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeDiv.html#t:SafeDiv\" title=\"Grisette.Internal.Core.Data.Class.SafeDiv\">SafeDiv</a> e a m =&gt; r) -&gt; r</li></ul>","name":"UnifiedSafeDiv withBaseSafeDiv","module":"Grisette.Internal.Unified.Class.UnifiedSafeDiv","link":"Grisette-Internal-Unified-Class-UnifiedSafeDiv.html#t:UnifiedSafeDiv"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:GetInteger\">GetInteger</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) = (int :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> int -&gt; mode","name":"GetInteger","module":"Grisette.Internal.Unified.UnifiedInteger","link":"Grisette-Internal-Unified-UnifiedInteger.html#t:GetInteger"},{"display_html":"<span class=\"keyword\">class</span> UnifiedIntegerImpl mode (<a href=\"Grisette-Internal-Unified-UnifiedInteger.html#t:GetInteger\" title=\"Grisette.Internal.Unified.UnifiedInteger\">GetInteger</a> mode) =&gt; <a href=\"#t:UnifiedInteger\">UnifiedInteger</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>)","name":"UnifiedInteger","module":"Grisette.Internal.Unified.UnifiedInteger","link":"Grisette-Internal-Unified-UnifiedInteger.html#t:UnifiedInteger"},{"display_html":"<span class=\"keyword\">class</span> UnifiedAlgRealImpl mode (<a href=\"Grisette-Internal-Unified-UnifiedAlgReal.html#t:GetAlgReal\" title=\"Grisette.Internal.Unified.UnifiedAlgReal\">GetAlgReal</a> mode) =&gt; <a href=\"#t:UnifiedAlgReal\">UnifiedAlgReal</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>)","name":"UnifiedAlgReal","module":"Grisette.Internal.Unified.UnifiedAlgReal","link":"Grisette-Internal-Unified-UnifiedAlgReal.html#t:UnifiedAlgReal"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:GetAlgReal\">GetAlgReal</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) = (real :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> real -&gt; mode","name":"GetAlgReal","module":"Grisette.Internal.Unified.UnifiedAlgReal","link":"Grisette-Internal-Unified-UnifiedAlgReal.html#t:GetAlgReal"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:UnifiedConRep\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">UnifiedConRep</a> fp, <a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:UnifiedSymRep\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">UnifiedSymRep</a> fp, <a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:ConType\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">ConType</a> fp <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb, <a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:SymType\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">SymType</a> fp <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"Grisette-Internal-SymPrim-SymFP.html#t:SymFP\" title=\"Grisette.Internal.SymPrim.SymFP\">SymFP</a> eb sb, <a href=\"Grisette-Internal-Unified-UnifiedPrim.html#t:UnifiedBasicPrim\" title=\"Grisette.Internal.Unified.UnifiedPrim\">UnifiedBasicPrim</a> mode fp, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Numeric.html#t:Floating\" title=\"Numeric\">Floating</a> fp, <a href=\"Grisette-Internal-Core-Data-Class-SymIEEEFP.html#t:SymIEEEFPTraits\" title=\"Grisette.Internal.Core.Data.Class.SymIEEEFP\">SymIEEEFPTraits</a> fp, <a href=\"Grisette-Internal-Core-Data-Class-IEEEFP.html#t:IEEEFPConstants\" title=\"Grisette.Internal.Core.Data.Class.IEEEFP\">IEEEFPConstants</a> fp, <a href=\"Grisette-Internal-Core-Data-Class-IEEEFP.html#t:IEEEFPOp\" title=\"Grisette.Internal.Core.Data.Class.IEEEFP\">IEEEFPOp</a> fp, <a href=\"Grisette-Internal-Core-Data-Class-IEEEFP.html#t:IEEEFPRoundingOp\" title=\"Grisette.Internal.Core.Data.Class.IEEEFP\">IEEEFPRoundingOp</a> fp rd, <a href=\"Grisette-Internal-Unified-Class-UnifiedFromIntegral.html#t:UnifiedFromIntegral\" title=\"Grisette.Internal.Unified.Class.UnifiedFromIntegral\">UnifiedFromIntegral</a> mode (<a href=\"Grisette-Internal-Unified-UnifiedInteger.html#t:GetInteger\" title=\"Grisette.Internal.Unified.UnifiedInteger\">GetInteger</a> mode) fp, <a href=\"Grisette-Internal-Core-Data-Class-IEEEFP.html#t:IEEEFPToAlgReal\" title=\"Grisette.Internal.Core.Data.Class.IEEEFP\">IEEEFPToAlgReal</a> (<a href=\"Grisette-Internal-Unified-UnifiedAlgReal.html#t:GetAlgReal\" title=\"Grisette.Internal.Unified.UnifiedAlgReal\">GetAlgReal</a> mode) fp rd, <a href=\"Grisette-Internal-Core-Data-Class-IEEEFP.html#t:IEEEFPConvertible\" title=\"Grisette.Internal.Core.Data.Class.IEEEFP\">IEEEFPConvertible</a> (<a href=\"Grisette-Internal-Unified-UnifiedInteger.html#t:GetInteger\" title=\"Grisette.Internal.Unified.UnifiedInteger\">GetInteger</a> mode) fp rd, <a href=\"Grisette-Internal-Unified-BaseConstraint.html#t:ConSymConversion\" title=\"Grisette.Internal.Unified.BaseConstraint\">ConSymConversion</a> (<a href=\"Grisette-Internal-SymPrim-FP.html#t:FP\" title=\"Grisette.Internal.SymPrim.FP\">FP</a> eb sb) (<a href=\"Grisette-Internal-SymPrim-SymFP.html#t:SymFP\" title=\"Grisette.Internal.SymPrim.SymFP\">SymFP</a> eb sb) fp, fpn <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:GetFP\" title=\"Grisette.Internal.Unified.UnifiedFP\">GetFP</a> mode, fp <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> fpn eb sb, rd <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:GetFPRoundingMode\" title=\"Grisette.Internal.Unified.UnifiedFP\">GetFPRoundingMode</a> mode) =&gt; <a href=\"#t:UnifiedFPImpl\">UnifiedFPImpl</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) (fpn :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) fp rd | fpn eb sb -&gt; fp rd, fp -&gt; fpn eb sb rd, rd -&gt; fpn, rd eb sb -&gt; fp <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:GetFP\">GetFP</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) = (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> f -&gt; mode</li><li><span class=\"keyword\">type</span> <a href=\"#t:GetFPRoundingMode\">GetFPRoundingMode</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) = (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> r -&gt; mode</li></ul>","name":"UnifiedFPImpl GetFP GetFPRoundingMode","module":"Grisette.Internal.Unified.UnifiedFP","link":"Grisette-Internal-Unified-UnifiedFP.html#t:UnifiedFPImpl"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:UnifiedFPImpl\" title=\"Grisette.Internal.Unified.UnifiedFP\">UnifiedFPImpl</a> mode (<a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:GetFP\" title=\"Grisette.Internal.Unified.UnifiedFP\">GetFP</a> mode) eb sb (<a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:GetFP\" title=\"Grisette.Internal.Unified.UnifiedFP\">GetFP</a> mode eb sb) (<a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:GetFPRoundingMode\" title=\"Grisette.Internal.Unified.UnifiedFP\">GetFPRoundingMode</a> mode) =&gt; <a href=\"#t:UnifiedFP\">UnifiedFP</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>)","name":"UnifiedFP","module":"Grisette.Internal.Unified.UnifiedFP","link":"Grisette-Internal-Unified-UnifiedFP.html#t:UnifiedFP"},{"display_html":"<span class=\"keyword\">class</span> (SafeUnifiedFPImpl mode (<a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:GetFP\" title=\"Grisette.Internal.Unified.UnifiedFP\">GetFP</a> mode) eb sb (<a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:GetFP\" title=\"Grisette.Internal.Unified.UnifiedFP\">GetFP</a> mode eb sb) (<a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:GetFPRoundingMode\" title=\"Grisette.Internal.Unified.UnifiedFP\">GetFPRoundingMode</a> mode) m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSafeFromFP.html#t:UnifiedSafeFromFP\" title=\"Grisette.Internal.Unified.Class.UnifiedSafeFromFP\">UnifiedSafeFromFP</a> mode <a href=\"Grisette-Internal-SymPrim-FP.html#t:NotRepresentableFPError\" title=\"Grisette.Internal.SymPrim.FP\">NotRepresentableFPError</a> (<a href=\"Grisette-Internal-Unified-UnifiedInteger.html#t:GetInteger\" title=\"Grisette.Internal.Unified.UnifiedInteger\">GetInteger</a> mode) (<a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:GetFP\" title=\"Grisette.Internal.Unified.UnifiedFP\">GetFP</a> mode eb sb) (<a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:GetFPRoundingMode\" title=\"Grisette.Internal.Unified.UnifiedFP\">GetFPRoundingMode</a> mode) m) =&gt; <a href=\"#t:SafeUnifiedFP\">SafeUnifiedFP</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"SafeUnifiedFP","module":"Grisette.Internal.Unified.UnifiedFP","link":"Grisette-Internal-Unified-UnifiedFP.html#t:SafeUnifiedFP"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb =&gt; <a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:UnifiedFP\" title=\"Grisette.Internal.Unified.UnifiedFP\">UnifiedFP</a> mode eb sb, <span class=\"keyword\">forall</span> (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedBranching\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedBranching</a> mode m, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:NotRepresentableFPError\" title=\"Grisette.Internal.SymPrim.FP\">NotRepresentableFPError</a> m) =&gt; <a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:SafeUnifiedFP\" title=\"Grisette.Internal.Unified.UnifiedFP\">SafeUnifiedFP</a> mode eb sb m) =&gt; <a href=\"#t:AllUnifiedFP\">AllUnifiedFP</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>)","name":"AllUnifiedFP","module":"Grisette.Internal.Unified.UnifiedFP","link":"Grisette-Internal-Unified-UnifiedFP.html#t:AllUnifiedFP"},{"display_html":"<span class=\"keyword\">class</span> UnifiedFPFPConversionImpl mode (<a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:GetFP\" title=\"Grisette.Internal.Unified.UnifiedFP\">GetFP</a> mode) eb0 sb0 eb1 sb1 (<a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:GetFP\" title=\"Grisette.Internal.Unified.UnifiedFP\">GetFP</a> mode eb0 sb0) (<a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:GetFP\" title=\"Grisette.Internal.Unified.UnifiedFP\">GetFP</a> mode eb1 sb1) (<a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:GetFPRoundingMode\" title=\"Grisette.Internal.Unified.UnifiedFP\">GetFPRoundingMode</a> mode) =&gt; <a href=\"#t:UnifiedFPFPConversion\">UnifiedFPFPConversion</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) (eb0 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb0 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (eb1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>)","name":"UnifiedFPFPConversion","module":"Grisette.Internal.Unified.FPFPConversion","link":"Grisette-Internal-Unified-FPFPConversion.html#t:UnifiedFPFPConversion"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> (eb0 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb0 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (eb1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb0 sb0, <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb1 sb1) =&gt; <a href=\"Grisette-Internal-Unified-FPFPConversion.html#t:UnifiedFPFPConversion\" title=\"Grisette.Internal.Unified.FPFPConversion\">UnifiedFPFPConversion</a> mode eb0 sb0 eb1 sb1) =&gt; <a href=\"#t:AllUnifiedFPFPConversion\">AllUnifiedFPFPConversion</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>)","name":"AllUnifiedFPFPConversion","module":"Grisette.Internal.Unified.FPFPConversion","link":"Grisette-Internal-Unified-FPFPConversion.html#t:AllUnifiedFPFPConversion"},{"display_html":"<a href=\"#v:lsb\">lsb</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:Bits\" title=\"Data.Bits\">Bits</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"lsb","module":"Grisette.Internal.Core.Data.Class.SymFiniteBits","link":"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#v:lsb"},{"display_html":"<a href=\"#v:msb\">msb</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:FiniteBits\" title=\"Data.Bits\">FiniteBits</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"msb","module":"Grisette.Internal.Core.Data.Class.SymFiniteBits","link":"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#v:msb"},{"display_html":"<a href=\"#v:setBitTo\">setBitTo</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:Bits\" title=\"Data.Bits\">Bits</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; a","name":"setBitTo","module":"Grisette.Internal.Core.Data.Class.SymFiniteBits","link":"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#v:setBitTo"},{"display_html":"<a href=\"#v:bitBlast\">bitBlast</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:FiniteBits\" title=\"Data.Bits\">FiniteBits</a> a =&gt; a -&gt; [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>]","name":"bitBlast","module":"Grisette.Internal.Core.Data.Class.SymFiniteBits","link":"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#v:bitBlast"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:FiniteBits\" title=\"Data.Bits\">FiniteBits</a> a =&gt; <a href=\"#t:FromBits\">FromBits</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fromBits\">fromBits</a> :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>] -&gt; a</li></ul>","name":"FromBits fromBits $dmfromBits","module":"Grisette.Internal.Core.Data.Class.SymFiniteBits","link":"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#t:FromBits"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:FiniteBits\" title=\"Data.Bits\">FiniteBits</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ITEOp.html#t:ITEOp\" title=\"Grisette.Internal.Core.Data.Class.ITEOp\">ITEOp</a> a) =&gt; <a href=\"#t:SymFiniteBits\">SymFiniteBits</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:symTestBit\">symTestBit</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symSetBitTo\">symSetBitTo</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; a</li><li><a href=\"#v:symFromBits\">symFromBits</a> :: [<a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>] -&gt; a</li></ul>","name":"SymFiniteBits symTestBit symSetBitTo symFromBits $dmsymSetBitTo","module":"Grisette.Internal.Core.Data.Class.SymFiniteBits","link":"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#t:SymFiniteBits"},{"display_html":"<a href=\"#v:symBitBlast\">symBitBlast</a> :: <a href=\"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#t:SymFiniteBits\" title=\"Grisette.Internal.Core.Data.Class.SymFiniteBits\">SymFiniteBits</a> a =&gt; a -&gt; [<a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>]","name":"symBitBlast","module":"Grisette.Internal.Core.Data.Class.SymFiniteBits","link":"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#v:symBitBlast"},{"display_html":"<a href=\"#v:symLsb\">symLsb</a> :: <a href=\"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#t:SymFiniteBits\" title=\"Grisette.Internal.Core.Data.Class.SymFiniteBits\">SymFiniteBits</a> a =&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symLsb","module":"Grisette.Internal.Core.Data.Class.SymFiniteBits","link":"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#v:symLsb"},{"display_html":"<a href=\"#v:symMsb\">symMsb</a> :: <a href=\"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#t:SymFiniteBits\" title=\"Grisette.Internal.Core.Data.Class.SymFiniteBits\">SymFiniteBits</a> a =&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symMsb","module":"Grisette.Internal.Core.Data.Class.SymFiniteBits","link":"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#v:symMsb"},{"display_html":"<a href=\"#v:symPopCount\">symPopCount</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ITEOp.html#t:ITEOp\" title=\"Grisette.Internal.Core.Data.Class.ITEOp\">ITEOp</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#t:SymFiniteBits\" title=\"Grisette.Internal.Core.Data.Class.SymFiniteBits\">SymFiniteBits</a> a) =&gt; a -&gt; a","name":"symPopCount","module":"Grisette.Internal.Core.Data.Class.SymFiniteBits","link":"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#v:symPopCount"},{"display_html":"<a href=\"#v:symCountLeadingZeros\">symCountLeadingZeros</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ITEOp.html#t:ITEOp\" title=\"Grisette.Internal.Core.Data.Class.ITEOp\">ITEOp</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#t:SymFiniteBits\" title=\"Grisette.Internal.Core.Data.Class.SymFiniteBits\">SymFiniteBits</a> a) =&gt; a -&gt; a","name":"symCountLeadingZeros","module":"Grisette.Internal.Core.Data.Class.SymFiniteBits","link":"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#v:symCountLeadingZeros"},{"display_html":"<a href=\"#v:symCountTrailingZeros\">symCountTrailingZeros</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ITEOp.html#t:ITEOp\" title=\"Grisette.Internal.Core.Data.Class.ITEOp\">ITEOp</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#t:SymFiniteBits\" title=\"Grisette.Internal.Core.Data.Class.SymFiniteBits\">SymFiniteBits</a> a) =&gt; a -&gt; a","name":"symCountTrailingZeros","module":"Grisette.Internal.Core.Data.Class.SymFiniteBits","link":"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#v:symCountTrailingZeros"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedFiniteBits\">UnifiedFiniteBits</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseFiniteBits\">withBaseFiniteBits</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:IsConMode\" title=\"Grisette.Internal.Unified.EvalModeTag\">IsConMode</a> mode) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:FiniteBits\" title=\"Data.Bits\">FiniteBits</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#t:FromBits\" title=\"Grisette.Internal.Core.Data.Class.SymFiniteBits\">FromBits</a> a) (<a href=\"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#t:SymFiniteBits\" title=\"Grisette.Internal.Core.Data.Class.SymFiniteBits\">SymFiniteBits</a> a) =&gt; r) -&gt; r</li></ul>","name":"UnifiedFiniteBits withBaseFiniteBits","module":"Grisette.Internal.Unified.Class.UnifiedFiniteBits","link":"Grisette-Internal-Unified-Class-UnifiedFiniteBits.html#t:UnifiedFiniteBits"},{"display_html":"<a href=\"#v:symTestBit\">symTestBit</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedFiniteBits.html#t:UnifiedFiniteBits\" title=\"Grisette.Internal.Unified.Class.UnifiedFiniteBits\">UnifiedFiniteBits</a> mode a) =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode","name":"symTestBit","module":"Grisette.Internal.Unified.Class.UnifiedFiniteBits","link":"Grisette-Internal-Unified-Class-UnifiedFiniteBits.html#v:symTestBit"},{"display_html":"<a href=\"#v:symSetBitTo\">symSetBitTo</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedFiniteBits.html#t:UnifiedFiniteBits\" title=\"Grisette.Internal.Unified.Class.UnifiedFiniteBits\">UnifiedFiniteBits</a> mode a) =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode -&gt; a","name":"symSetBitTo","module":"Grisette.Internal.Unified.Class.UnifiedFiniteBits","link":"Grisette-Internal-Unified-Class-UnifiedFiniteBits.html#v:symSetBitTo"},{"display_html":"<a href=\"#v:symFromBits\">symFromBits</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedFiniteBits.html#t:UnifiedFiniteBits\" title=\"Grisette.Internal.Unified.Class.UnifiedFiniteBits\">UnifiedFiniteBits</a> mode a) =&gt; [<a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode] -&gt; a","name":"symFromBits","module":"Grisette.Internal.Unified.Class.UnifiedFiniteBits","link":"Grisette-Internal-Unified-Class-UnifiedFiniteBits.html#v:symFromBits"},{"display_html":"<a href=\"#v:symBitBlast\">symBitBlast</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedFiniteBits.html#t:UnifiedFiniteBits\" title=\"Grisette.Internal.Unified.Class.UnifiedFiniteBits\">UnifiedFiniteBits</a> mode a) =&gt; a -&gt; [<a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode]","name":"symBitBlast","module":"Grisette.Internal.Unified.Class.UnifiedFiniteBits","link":"Grisette-Internal-Unified-Class-UnifiedFiniteBits.html#v:symBitBlast"},{"display_html":"<a href=\"#v:symLsb\">symLsb</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedFiniteBits.html#t:UnifiedFiniteBits\" title=\"Grisette.Internal.Unified.Class.UnifiedFiniteBits\">UnifiedFiniteBits</a> mode a) =&gt; a -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode","name":"symLsb","module":"Grisette.Internal.Unified.Class.UnifiedFiniteBits","link":"Grisette-Internal-Unified-Class-UnifiedFiniteBits.html#v:symLsb"},{"display_html":"<a href=\"#v:symMsb\">symMsb</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedFiniteBits.html#t:UnifiedFiniteBits\" title=\"Grisette.Internal.Unified.Class.UnifiedFiniteBits\">UnifiedFiniteBits</a> mode a) =&gt; a -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode","name":"symMsb","module":"Grisette.Internal.Unified.Class.UnifiedFiniteBits","link":"Grisette-Internal-Unified-Class-UnifiedFiniteBits.html#v:symMsb"},{"display_html":"<a href=\"#v:symPopCount\">symPopCount</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedFiniteBits.html#t:UnifiedFiniteBits\" title=\"Grisette.Internal.Unified.Class.UnifiedFiniteBits\">UnifiedFiniteBits</a> mode a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a, <a href=\"Grisette-Internal-Unified-Class-UnifiedITEOp.html#t:UnifiedITEOp\" title=\"Grisette.Internal.Unified.Class.UnifiedITEOp\">UnifiedITEOp</a> mode a) =&gt; a -&gt; a","name":"symPopCount","module":"Grisette.Internal.Unified.Class.UnifiedFiniteBits","link":"Grisette-Internal-Unified-Class-UnifiedFiniteBits.html#v:symPopCount"},{"display_html":"<a href=\"#v:symCountLeadingZeros\">symCountLeadingZeros</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedFiniteBits.html#t:UnifiedFiniteBits\" title=\"Grisette.Internal.Unified.Class.UnifiedFiniteBits\">UnifiedFiniteBits</a> mode a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a, <a href=\"Grisette-Internal-Unified-Class-UnifiedITEOp.html#t:UnifiedITEOp\" title=\"Grisette.Internal.Unified.Class.UnifiedITEOp\">UnifiedITEOp</a> mode a) =&gt; a -&gt; a","name":"symCountLeadingZeros","module":"Grisette.Internal.Unified.Class.UnifiedFiniteBits","link":"Grisette-Internal-Unified-Class-UnifiedFiniteBits.html#v:symCountLeadingZeros"},{"display_html":"<a href=\"#v:symCountTrailingZeros\">symCountTrailingZeros</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a. (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedFiniteBits.html#t:UnifiedFiniteBits\" title=\"Grisette.Internal.Unified.Class.UnifiedFiniteBits\">UnifiedFiniteBits</a> mode a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a, <a href=\"Grisette-Internal-Unified-Class-UnifiedITEOp.html#t:UnifiedITEOp\" title=\"Grisette.Internal.Unified.Class.UnifiedITEOp\">UnifiedITEOp</a> mode a) =&gt; a -&gt; a","name":"symCountTrailingZeros","module":"Grisette.Internal.Unified.Class.UnifiedFiniteBits","link":"Grisette-Internal-Unified-Class-UnifiedFiniteBits.html#v:symCountTrailingZeros"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:UnifiedBVImpl\" title=\"Grisette.Internal.Unified.UnifiedBV\">UnifiedBVImpl</a> mode (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetWordN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetWordN</a> mode) (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetIntN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetIntN</a> mode) n (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetWordN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetWordN</a> mode n) (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetIntN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetIntN</a> mode n) =&gt; <a href=\"#t:UnifiedBV\">UnifiedBV</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>)","name":"UnifiedBV","module":"Grisette.Internal.Unified.UnifiedBV","link":"Grisette-Internal-Unified-UnifiedBV.html#t:UnifiedBV"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:UnifiedConRep\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">UnifiedConRep</a> word, <a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:UnifiedSymRep\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">UnifiedSymRep</a> int, <a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:ConType\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">ConType</a> word <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"Grisette-Internal-SymPrim-BV.html#t:WordN\" title=\"Grisette.Internal.SymPrim.BV\">WordN</a> n, <a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:SymType\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">SymType</a> word <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"Grisette-Internal-SymPrim-SymBV.html#t:SymWordN\" title=\"Grisette.Internal.SymPrim.SymBV\">SymWordN</a> n, <a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:ConType\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">ConType</a> int <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"Grisette-Internal-SymPrim-BV.html#t:IntN\" title=\"Grisette.Internal.SymPrim.BV\">IntN</a> n, <a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:SymType\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">SymType</a> int <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"Grisette-Internal-SymPrim-SymBV.html#t:SymIntN\" title=\"Grisette.Internal.SymPrim.SymBV\">SymIntN</a> n, <a href=\"Grisette-Internal-Unified-UnifiedPrim.html#t:UnifiedBasicPrim\" title=\"Grisette.Internal.Unified.UnifiedPrim\">UnifiedBasicPrim</a> mode word, <a href=\"Grisette-Internal-Unified-UnifiedPrim.html#t:UnifiedBasicPrim\" title=\"Grisette.Internal.Unified.UnifiedPrim\">UnifiedBasicPrim</a> mode int, BVConstraint mode word int, wordn <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetWordN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetWordN</a> mode, intn <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetIntN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetIntN</a> mode, word <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> wordn n, int <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> intn n, <a href=\"Grisette-Internal-Core-Data-Class-BitCast.html#t:BitCast\" title=\"Grisette.Internal.Core.Data.Class.BitCast\">BitCast</a> word int, <a href=\"Grisette-Internal-Core-Data-Class-BitCast.html#t:BitCast\" title=\"Grisette.Internal.Core.Data.Class.BitCast\">BitCast</a> int word, <a href=\"Grisette-Internal-Core-Data-Class-SafeDiv.html#t:DivOr\" title=\"Grisette.Internal.Core.Data.Class.SafeDiv\">DivOr</a> word, <a href=\"Grisette-Internal-Core-Data-Class-SafeDiv.html#t:DivOr\" title=\"Grisette.Internal.Core.Data.Class.SafeDiv\">DivOr</a> int, <a href=\"Grisette-Internal-Unified-Class-UnifiedFromIntegral.html#t:UnifiedFromIntegral\" title=\"Grisette.Internal.Unified.Class.UnifiedFromIntegral\">UnifiedFromIntegral</a> mode (<a href=\"Grisette-Internal-Unified-UnifiedInteger.html#t:GetInteger\" title=\"Grisette.Internal.Unified.UnifiedInteger\">GetInteger</a> mode) word, <a href=\"Grisette-Internal-Unified-Class-UnifiedFromIntegral.html#t:UnifiedFromIntegral\" title=\"Grisette.Internal.Unified.Class.UnifiedFromIntegral\">UnifiedFromIntegral</a> mode (<a href=\"Grisette-Internal-Unified-UnifiedInteger.html#t:GetInteger\" title=\"Grisette.Internal.Unified.UnifiedInteger\">GetInteger</a> mode) int, <a href=\"Grisette-Internal-Unified-Class-UnifiedFromIntegral.html#t:UnifiedFromIntegral\" title=\"Grisette.Internal.Unified.Class.UnifiedFromIntegral\">UnifiedFromIntegral</a> mode word (<a href=\"Grisette-Internal-Unified-UnifiedInteger.html#t:GetInteger\" title=\"Grisette.Internal.Unified.UnifiedInteger\">GetInteger</a> mode), <a href=\"Grisette-Internal-Unified-Class-UnifiedFromIntegral.html#t:UnifiedFromIntegral\" title=\"Grisette.Internal.Unified.Class.UnifiedFromIntegral\">UnifiedFromIntegral</a> mode word (<a href=\"Grisette-Internal-Unified-UnifiedAlgReal.html#t:GetAlgReal\" title=\"Grisette.Internal.Unified.UnifiedAlgReal\">GetAlgReal</a> mode), <a href=\"Grisette-Internal-Unified-Class-UnifiedFromIntegral.html#t:UnifiedFromIntegral\" title=\"Grisette.Internal.Unified.Class.UnifiedFromIntegral\">UnifiedFromIntegral</a> mode int (<a href=\"Grisette-Internal-Unified-UnifiedInteger.html#t:GetInteger\" title=\"Grisette.Internal.Unified.UnifiedInteger\">GetInteger</a> mode), <a href=\"Grisette-Internal-Unified-Class-UnifiedFromIntegral.html#t:UnifiedFromIntegral\" title=\"Grisette.Internal.Unified.Class.UnifiedFromIntegral\">UnifiedFromIntegral</a> mode int (<a href=\"Grisette-Internal-Unified-UnifiedAlgReal.html#t:GetAlgReal\" title=\"Grisette.Internal.Unified.UnifiedAlgReal\">GetAlgReal</a> mode), <a href=\"Grisette-Internal-Unified-BaseConstraint.html#t:ConSymConversion\" title=\"Grisette.Internal.Unified.BaseConstraint\">ConSymConversion</a> (<a href=\"Grisette-Internal-SymPrim-BV.html#t:WordN\" title=\"Grisette.Internal.SymPrim.BV\">WordN</a> n) (<a href=\"Grisette-Internal-SymPrim-SymBV.html#t:SymWordN\" title=\"Grisette.Internal.SymPrim.SymBV\">SymWordN</a> n) word, <a href=\"Grisette-Internal-Unified-BaseConstraint.html#t:ConSymConversion\" title=\"Grisette.Internal.Unified.BaseConstraint\">ConSymConversion</a> (<a href=\"Grisette-Internal-SymPrim-BV.html#t:IntN\" title=\"Grisette.Internal.SymPrim.BV\">IntN</a> n) (<a href=\"Grisette-Internal-SymPrim-SymBV.html#t:SymIntN\" title=\"Grisette.Internal.SymPrim.SymBV\">SymIntN</a> n) int) =&gt; <a href=\"#t:UnifiedBVImpl\">UnifiedBVImpl</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) (wordn :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (intn :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) word int | wordn -&gt; intn, intn -&gt; wordn, wordn n -&gt; word, word -&gt; wordn n, intn n -&gt; int, int -&gt; intn n <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:GetWordN\">GetWordN</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) = (w :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> w -&gt; mode</li><li><span class=\"keyword\">type</span> <a href=\"#t:GetIntN\">GetIntN</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) = (i :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> i -&gt; mode</li></ul>","name":"UnifiedBVImpl GetIntN GetWordN","module":"Grisette.Internal.Unified.UnifiedBV","link":"Grisette-Internal-Unified-UnifiedBV.html#t:UnifiedBVImpl"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedBranching\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedBranching</a> mode m, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> <a href=\"Grisette-Internal-Core-Data-Class-SafeLinearArith.html#t:ArithException\" title=\"Grisette.Internal.Core.Data.Class.SafeLinearArith\">ArithException</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:SafeUnifiedBV\" title=\"Grisette.Internal.Unified.UnifiedBV\">SafeUnifiedBV</a> mode n m, <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedBranching\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedBranching</a> mode m, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBVException\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBVException</a> <a href=\"Grisette-Internal-Core-Data-Class-SafeLinearArith.html#t:ArithException\" title=\"Grisette.Internal.Core.Data.Class.SafeLinearArith\">ArithException</a>) m) =&gt; <a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:SafeUnifiedSomeBV\" title=\"Grisette.Internal.Unified.UnifiedBV\">SafeUnifiedSomeBV</a> mode m, <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; <a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:UnifiedBV\" title=\"Grisette.Internal.Unified.UnifiedBV\">UnifiedBV</a> mode n, <a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:SomeBVPair\" title=\"Grisette.Internal.Unified.UnifiedBV\">SomeBVPair</a> mode (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetSomeWordN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetSomeWordN</a> mode) (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetSomeIntN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetSomeIntN</a> mode), <a href=\"Grisette-Internal-Core-Data-Class-BitVector.html#t:SizedBV\" title=\"Grisette.Internal.Core.Data.Class.BitVector\">SizedBV</a> (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetWordN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetWordN</a> mode), <a href=\"Grisette-Internal-Core-Data-Class-BitVector.html#t:SizedBV\" title=\"Grisette.Internal.Core.Data.Class.BitVector\">SizedBV</a> (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetIntN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetIntN</a> mode)) =&gt; <a href=\"#t:AllUnifiedBV\">AllUnifiedBV</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>)","name":"AllUnifiedBV","module":"Grisette.Internal.Unified.UnifiedBV","link":"Grisette-Internal-Unified-UnifiedBV.html#t:AllUnifiedBV"},{"display_html":"<span class=\"keyword\">class</span> SafeUnifiedBVImpl mode (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetWordN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetWordN</a> mode) (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetIntN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetIntN</a> mode) n (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetWordN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetWordN</a> mode n) (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetIntN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetIntN</a> mode n) m =&gt; <a href=\"#t:SafeUnifiedBV\">SafeUnifiedBV</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"SafeUnifiedBV","module":"Grisette.Internal.Unified.UnifiedBV","link":"Grisette-Internal-Unified-UnifiedBV.html#t:SafeUnifiedBV"},{"display_html":"<span class=\"keyword\">class</span> SafeUnifiedSomeBVImpl mode (<a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetWordN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetWordN</a> mode)) (<a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetIntN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetIntN</a> mode)) m =&gt; <a href=\"#t:SafeUnifiedSomeBV\">SafeUnifiedSomeBV</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"SafeUnifiedSomeBV","module":"Grisette.Internal.Unified.UnifiedBV","link":"Grisette-Internal-Unified-UnifiedBV.html#t:SafeUnifiedSomeBV"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:GetSomeWordN\">GetSomeWordN</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) = (sw :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> sw -&gt; mode <span class=\"keyword\">where ...</span>","name":"GetSomeWordN","module":"Grisette.Internal.Unified.UnifiedBV","link":"Grisette-Internal-Unified-UnifiedBV.html#t:GetSomeWordN"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:GetSomeIntN\">GetSomeIntN</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) = (sw :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> sw -&gt; mode <span class=\"keyword\">where ...</span>","name":"GetSomeIntN","module":"Grisette.Internal.Unified.UnifiedBV","link":"Grisette-Internal-Unified-UnifiedBV.html#t:GetSomeIntN"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SomeBVPair\">SomeBVPair</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) word int = (<a href=\"Grisette-Internal-Unified-UnifiedPrim.html#t:UnifiedPrim\" title=\"Grisette.Internal.Unified.UnifiedPrim\">UnifiedPrim</a> mode word, <a href=\"Grisette-Internal-Unified-UnifiedPrim.html#t:UnifiedPrim\" title=\"Grisette.Internal.Unified.UnifiedPrim\">UnifiedPrim</a> mode int, BVConstraint mode word int, <a href=\"Grisette-Internal-Core-Data-Class-BitVector.html#t:BV\" title=\"Grisette.Internal.Core.Data.Class.BitVector\">BV</a> word, <a href=\"Grisette-Internal-Core-Data-Class-BitVector.html#t:BV\" title=\"Grisette.Internal.Core.Data.Class.BitVector\">BV</a> int, <a href=\"Grisette-Internal-Core-Data-Class-SafeDiv.html#t:DivOr\" title=\"Grisette.Internal.Core.Data.Class.SafeDiv\">DivOr</a> word, <a href=\"Grisette-Internal-Core-Data-Class-SafeDiv.html#t:DivOr\" title=\"Grisette.Internal.Core.Data.Class.SafeDiv\">DivOr</a> int, <a href=\"Grisette-Internal-Unified-BaseConstraint.html#t:ConSymConversion\" title=\"Grisette.Internal.Unified.BaseConstraint\">ConSymConversion</a> <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeWordN\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeWordN</a> <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeSymWordN\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeSymWordN</a> word, <a href=\"Grisette-Internal-Unified-BaseConstraint.html#t:ConSymConversion\" title=\"Grisette.Internal.Unified.BaseConstraint\">ConSymConversion</a> <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeIntN\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeIntN</a> <a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeSymIntN\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeSymIntN</a> int)","name":"SomeBVPair","module":"Grisette.Internal.Unified.UnifiedBV","link":"Grisette-Internal-Unified-UnifiedBV.html#t:SomeBVPair"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:UnifiedFunConstraint\">UnifiedFunConstraint</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a b ca cb sa sb = (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Show\" title=\"Prelude\">Show</a> (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b), <a href=\"https://hackage.haskell.org/package/binary-0.8.9.2/docs/Data-Binary.html#t:Binary\" title=\"Data.Binary\">Binary</a> (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b), <a href=\"https://hackage.haskell.org/package/bytes-0.17.3/docs/Data-Bytes-Serial.html#t:Serial\" title=\"Data.Bytes.Serial\">Serial</a> (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b), <a href=\"https://hackage.haskell.org/package/cereal-0.5.8.3/docs/Data-Serialize.html#t:Serialize\" title=\"Data.Serialize\">Serialize</a> (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b), <a href=\"https://hackage.haskell.org/package/deepseq-1.5.0.0/docs/Control-DeepSeq.html#t:NFData\" title=\"Control.DeepSeq\">NFData</a> (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b), <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b), <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b), <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b), <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint</a> (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b), <a href=\"Grisette-Internal-Core-Data-Class-SubstSym.html#t:SubstSym\" title=\"Grisette.Internal.Core.Data.Class.SubstSym\">SubstSym</a> (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b), <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b), <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Lift\" title=\"Language.Haskell.TH.Syntax\">Lift</a> (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b), <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon</a> (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b) (ca <a href=\"Grisette-Internal-SymPrim-TabularFun.html#t:-61--45--62-\" title=\"Grisette.Internal.SymPrim.TabularFun\">=-&gt;</a> cb), <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon</a> (sa <a href=\"Grisette-Internal-SymPrim-SymTabularFun.html#t:-61--126--62-\" title=\"Grisette.Internal.SymPrim.SymTabularFun\">=~&gt;</a> sb) (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b), <a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">ToSym</a> (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b) (sa <a href=\"Grisette-Internal-SymPrim-SymTabularFun.html#t:-61--126--62-\" title=\"Grisette.Internal.SymPrim.SymTabularFun\">=~&gt;</a> sb), <a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">ToSym</a> (ca <a href=\"Grisette-Internal-SymPrim-TabularFun.html#t:-61--45--62-\" title=\"Grisette.Internal.SymPrim.TabularFun\">=-&gt;</a> cb) (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b), <a href=\"Grisette-Internal-Core-Data-Class-Function.html#t:Function\" title=\"Grisette.Internal.Core.Data.Class.Function\">Function</a> (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b) a b, <a href=\"Grisette-Internal-Core-Data-Class-Function.html#t:Apply\" title=\"Grisette.Internal.Core.Data.Class.Function\">Apply</a> (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b), <a href=\"Grisette-Internal-Core-Data-Class-Function.html#t:FunType\" title=\"Grisette.Internal.Core.Data.Class.Function\">FunType</a> (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b) <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> (a -&gt; b))","name":"UnifiedFunConstraint","module":"Grisette.Internal.Unified.UnifiedFun","link":"Grisette-Internal-Unified-UnifiedFun.html#t:UnifiedFunConstraint"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedFun\">UnifiedFun</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:GetFun\">GetFun</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) = (fun :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> fun -&gt; mode</li></ul>","name":"UnifiedFun GetFun","module":"Grisette.Internal.Unified.UnifiedFun","link":"Grisette-Internal-Unified-UnifiedFun.html#t:UnifiedFun"},{"display_html":"<a href=\"#v:unifiedFunInstanceName\">unifiedFunInstanceName</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; [<a href=\"Grisette-Internal-Unified-Theories.html#t:TheoryToUnify\" title=\"Grisette.Internal.Unified.Theories\">TheoryToUnify</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"unifiedFunInstanceName","module":"Grisette.Internal.Unified.UnifiedFun","link":"Grisette-Internal-Unified-UnifiedFun.html#v:unifiedFunInstanceName"},{"display_html":"<a href=\"#v:genUnifiedFunInstance\">genUnifiedFunInstance</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; [<a href=\"Grisette-Internal-Unified-Theories.html#t:TheoryToUnify\" title=\"Grisette.Internal.Unified.Theories\">TheoryToUnify</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:DecsQ\" title=\"Language.Haskell.TH.Lib\">DecsQ</a>","name":"genUnifiedFunInstance","module":"Grisette.Internal.Unified.UnifiedFun","link":"Grisette-Internal-Unified-UnifiedFun.html#v:genUnifiedFunInstance"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GetFun2\">GetFun2</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a b = <a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a b","name":"GetFun2","module":"Grisette.Internal.Unified.UnifiedFun","link":"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun2"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GetFun3\">GetFun3</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a b c = <a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode b c)","name":"GetFun3","module":"Grisette.Internal.Unified.UnifiedFun","link":"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun3"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GetFun4\">GetFun4</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a b c d = <a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode b (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode c d))","name":"GetFun4","module":"Grisette.Internal.Unified.UnifiedFun","link":"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun4"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GetFun5\">GetFun5</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a b c d e = <a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode b (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode c (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode d e)))","name":"GetFun5","module":"Grisette.Internal.Unified.UnifiedFun","link":"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun5"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GetFun6\">GetFun6</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a b c d e f = <a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode b (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode c (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode d (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode e f))))","name":"GetFun6","module":"Grisette.Internal.Unified.UnifiedFun","link":"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun6"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GetFun7\">GetFun7</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a b c d e f g = <a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode b (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode c (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode d (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode e (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode f g)))))","name":"GetFun7","module":"Grisette.Internal.Unified.UnifiedFun","link":"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun7"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GetFun8\">GetFun8</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a b c d e f g h = <a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode a (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode b (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode c (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode d (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode e (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode f (<a href=\"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun\" title=\"Grisette.Internal.Unified.UnifiedFun\">GetFun</a> mode g h))))))","name":"GetFun8","module":"Grisette.Internal.Unified.UnifiedFun","link":"Grisette-Internal-Unified-UnifiedFun.html#t:GetFun8"},{"display_html":"<span class=\"keyword\">class</span> (UnifiedBVBVConversionImpl mode (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetWordN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetWordN</a> mode) (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetWordN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetWordN</a> mode) n0 n1 (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetWordN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetWordN</a> mode n0) (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetWordN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetWordN</a> mode n1), UnifiedBVBVConversionImpl mode (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetWordN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetWordN</a> mode) (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetIntN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetIntN</a> mode) n0 n1 (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetWordN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetWordN</a> mode n0) (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetIntN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetIntN</a> mode n1), UnifiedBVBVConversionImpl mode (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetIntN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetIntN</a> mode) (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetWordN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetWordN</a> mode) n0 n1 (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetIntN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetIntN</a> mode n0) (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetWordN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetWordN</a> mode n1), UnifiedBVBVConversionImpl mode (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetIntN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetIntN</a> mode) (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetIntN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetIntN</a> mode) n0 n1 (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetIntN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetIntN</a> mode n0) (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetIntN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetIntN</a> mode n1)) =&gt; <a href=\"#t:UnifiedBVBVConversion\">UnifiedBVBVConversion</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) (n0 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>)","name":"UnifiedBVBVConversion","module":"Grisette.Internal.Unified.BVBVConversion","link":"Grisette-Internal-Unified-BVBVConversion.html#t:UnifiedBVBVConversion"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> (n0 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n0, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n1, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n0, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n1) =&gt; <a href=\"Grisette-Internal-Unified-BVBVConversion.html#t:UnifiedBVBVConversion\" title=\"Grisette.Internal.Unified.BVBVConversion\">UnifiedBVBVConversion</a> mode n0 n1) =&gt; <a href=\"#t:AllUnifiedBVBVConversion\">AllUnifiedBVBVConversion</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>)","name":"AllUnifiedBVBVConversion","module":"Grisette.Internal.Unified.BVBVConversion","link":"Grisette-Internal-Unified-BVBVConversion.html#t:AllUnifiedBVBVConversion"},{"display_html":"<span class=\"keyword\">class</span> UnifiedBVFPConversionImpl mode (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetWordN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetWordN</a> mode) (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetIntN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetIntN</a> mode) (<a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:GetFP\" title=\"Grisette.Internal.Unified.UnifiedFP\">GetFP</a> mode) n eb sb (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetWordN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetWordN</a> mode n) (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetIntN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetIntN</a> mode n) (<a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:GetFP\" title=\"Grisette.Internal.Unified.UnifiedFP\">GetFP</a> mode eb sb) (<a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:GetFPRoundingMode\" title=\"Grisette.Internal.Unified.UnifiedFP\">GetFPRoundingMode</a> mode) =&gt; <a href=\"#t:UnifiedBVFPConversion\">UnifiedBVFPConversion</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>)","name":"UnifiedBVFPConversion","module":"Grisette.Internal.Unified.BVFPConversion","link":"Grisette-Internal-Unified-BVFPConversion.html#t:UnifiedBVFPConversion"},{"display_html":"<span class=\"keyword\">class</span> SafeUnifiedBVFPConversionImpl mode (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetWordN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetWordN</a> mode) (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetIntN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetIntN</a> mode) (<a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:GetFP\" title=\"Grisette.Internal.Unified.UnifiedFP\">GetFP</a> mode) n eb sb (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetWordN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetWordN</a> mode n) (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:GetIntN\" title=\"Grisette.Internal.Unified.UnifiedBV\">GetIntN</a> mode n) (<a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:GetFP\" title=\"Grisette.Internal.Unified.UnifiedFP\">GetFP</a> mode eb sb) (<a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:GetFPRoundingMode\" title=\"Grisette.Internal.Unified.UnifiedFP\">GetFPRoundingMode</a> mode) m =&gt; <a href=\"#t:SafeUnifiedBVFPConversion\">SafeUnifiedBVFPConversion</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"SafeUnifiedBVFPConversion","module":"Grisette.Internal.Unified.BVFPConversion","link":"Grisette-Internal-Unified-BVFPConversion.html#t:SafeUnifiedBVFPConversion"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n, n <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> (eb <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> sb)) =&gt; <a href=\"Grisette-Internal-Unified-BVFPConversion.html#t:UnifiedBVFPConversion\" title=\"Grisette.Internal.Unified.BVFPConversion\">UnifiedBVFPConversion</a> mode n eb sb, <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedBranching\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedBranching</a> mode m, <a href=\"Grisette-Internal-SymPrim-FP.html#t:ValidFP\" title=\"Grisette.Internal.SymPrim.FP\">ValidFP</a> eb sb, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n, n <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> (eb <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> sb), <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> <a href=\"Grisette-Internal-SymPrim-FP.html#t:NotRepresentableFPError\" title=\"Grisette.Internal.SymPrim.FP\">NotRepresentableFPError</a> m) =&gt; <a href=\"Grisette-Internal-Unified-BVFPConversion.html#t:SafeUnifiedBVFPConversion\" title=\"Grisette.Internal.Unified.BVFPConversion\">SafeUnifiedBVFPConversion</a> mode n eb sb m) =&gt; <a href=\"#t:AllUnifiedBVFPConversion\">AllUnifiedBVFPConversion</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>)","name":"AllUnifiedBVFPConversion","module":"Grisette.Internal.Unified.BVFPConversion","link":"Grisette-Internal-Unified-BVFPConversion.html#t:AllUnifiedBVFPConversion"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Unified-Util.html#t:DecideEvalMode\" title=\"Grisette.Internal.Unified.Util\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:UnifiedBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">UnifiedBool</a> mode, <a href=\"Grisette-Internal-Unified-UnifiedPrim.html#t:UnifiedBasicPrim\" title=\"Grisette.Internal.Unified.UnifiedPrim\">UnifiedBasicPrim</a> mode (<a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> (<a href=\"Grisette-Internal-Unified-BaseMonad.html#t:BaseMonad\" title=\"Grisette.Internal.Unified.BaseMonad\">BaseMonad</a> mode), <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> (<a href=\"Grisette-Internal-Unified-BaseMonad.html#t:BaseMonad\" title=\"Grisette.Internal.Unified.BaseMonad\">BaseMonad</a> mode), <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedBranching\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedBranching</a> mode (<a href=\"Grisette-Internal-Unified-BaseMonad.html#t:BaseMonad\" title=\"Grisette.Internal.Unified.BaseMonad\">BaseMonad</a> mode), <a href=\"Grisette-Internal-Unified-UnifiedData.html#t:AllUnifiedData\" title=\"Grisette.Internal.Unified.UnifiedData\">AllUnifiedData</a> mode) =&gt; <a href=\"#t:EvalModeBase\">EvalModeBase</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>)","name":"EvalModeBase","module":"Grisette.Internal.Unified.EvalMode","link":"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBase"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:EvalModeInteger\">EvalModeInteger</a> = <a href=\"Grisette-Internal-Unified-UnifiedInteger.html#t:UnifiedInteger\" title=\"Grisette.Internal.Unified.UnifiedInteger\">UnifiedInteger</a>","name":"EvalModeInteger","module":"Grisette.Internal.Unified.EvalMode","link":"Grisette-Internal-Unified-EvalMode.html#t:EvalModeInteger"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:AllUnifiedBV\" title=\"Grisette.Internal.Unified.UnifiedBV\">AllUnifiedBV</a> mode, <a href=\"Grisette-Internal-Unified-BVBVConversion.html#t:AllUnifiedBVBVConversion\" title=\"Grisette.Internal.Unified.BVBVConversion\">AllUnifiedBVBVConversion</a> mode) =&gt; <a href=\"#t:EvalModeBV\">EvalModeBV</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>)","name":"EvalModeBV","module":"Grisette.Internal.Unified.EvalMode","link":"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBV"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:AllUnifiedFP\" title=\"Grisette.Internal.Unified.UnifiedFP\">AllUnifiedFP</a> mode, <a href=\"Grisette-Internal-Unified-FPFPConversion.html#t:AllUnifiedFPFPConversion\" title=\"Grisette.Internal.Unified.FPFPConversion\">AllUnifiedFPFPConversion</a> mode, <a href=\"Grisette-Internal-Unified-BVFPConversion.html#t:AllUnifiedBVFPConversion\" title=\"Grisette.Internal.Unified.BVFPConversion\">AllUnifiedBVFPConversion</a> mode) =&gt; <a href=\"#t:EvalModeFP\">EvalModeFP</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>)","name":"EvalModeFP","module":"Grisette.Internal.Unified.EvalMode","link":"Grisette-Internal-Unified-EvalMode.html#t:EvalModeFP"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:EvalModeAlgReal\">EvalModeAlgReal</a> = <a href=\"Grisette-Internal-Unified-UnifiedAlgReal.html#t:UnifiedAlgReal\" title=\"Grisette.Internal.Unified.UnifiedAlgReal\">UnifiedAlgReal</a>","name":"EvalModeAlgReal","module":"Grisette.Internal.Unified.EvalMode","link":"Grisette-Internal-Unified-EvalMode.html#t:EvalModeAlgReal"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBase\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeBase</a> mode, <a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeInteger\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeInteger</a> mode, <a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeAlgReal\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeAlgReal</a> mode, <a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBV\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeBV</a> mode, <a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeFP\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeFP</a> mode) =&gt; <a href=\"#t:EvalModeAll\">EvalModeAll</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>)","name":"EvalModeAll","module":"Grisette.Internal.Unified.EvalMode","link":"Grisette-Internal-Unified-EvalMode.html#t:EvalModeAll"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MonadEvalModeAll\">MonadEvalModeAll</a> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) = (<a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeAll\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeAll</a> mode, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedBranching\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedBranching</a> mode m)","name":"MonadEvalModeAll","module":"Grisette.Internal.Unified.EvalMode","link":"Grisette-Internal-Unified-EvalMode.html#t:MonadEvalModeAll"},{"display_html":"<a href=\"#v:genEvalMode\">genEvalMode</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; [<a href=\"Grisette-Internal-Unified-Theories.html#t:TheoryToUnify\" title=\"Grisette.Internal.Unified.Theories\">TheoryToUnify</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:DecsQ\" title=\"Language.Haskell.TH.Lib\">DecsQ</a>","name":"genEvalMode","module":"Grisette.Internal.Unified.EvalMode","link":"Grisette-Internal-Unified-EvalMode.html#v:genEvalMode"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:EvalModeTag\">EvalModeTag</a><ul class=\"subs\"><li>= <a href=\"#v:C\">C</a></li><li>| <a href=\"#v:S\">S</a></li></ul>","name":"EvalModeTag C S","module":"Grisette.Unified","link":"Grisette-Unified.html#t:EvalModeTag"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:IsConMode\">IsConMode</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) = (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) <span class=\"keyword\">|</span> r -&gt; mode <span class=\"keyword\">where ...</span>","name":"IsConMode","module":"Grisette.Unified","link":"Grisette-Unified.html#t:IsConMode"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:BaseMonad\">BaseMonad</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) = (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> r -&gt; mode <span class=\"keyword\">where ...</span>","name":"BaseMonad","module":"Grisette.Unified","link":"Grisette-Unified.html#t:BaseMonad"},{"display_html":"<a href=\"#v:genEvalMode\">genEvalMode</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; [<a href=\"Grisette-Unified.html#t:TheoryToUnify\" title=\"Grisette.Unified\">TheoryToUnify</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:DecsQ\" title=\"Language.Haskell.TH.Lib\">DecsQ</a>","name":"genEvalMode","module":"Grisette.Unified","link":"Grisette-Unified.html#v:genEvalMode"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TheoryToUnify\">TheoryToUnify</a><ul class=\"subs\"><li>= <a href=\"#v:UBool\">UBool</a></li><li>| <a href=\"#v:UIntN\">UIntN</a></li><li>| <a href=\"#v:UWordN\">UWordN</a></li><li>| <a href=\"#v:UInteger\">UInteger</a></li><li>| <a href=\"#v:UAlgReal\">UAlgReal</a></li><li>| <a href=\"#v:UFP\">UFP</a></li><li>| <a href=\"#v:UFun\">UFun</a> [<a href=\"Grisette-Unified.html#t:TheoryToUnify\" title=\"Grisette.Unified\">TheoryToUnify</a>]</li></ul>","name":"TheoryToUnify UAlgReal UBool UFP UFun UIntN UInteger UWordN","module":"Grisette.Unified","link":"Grisette-Unified.html#t:TheoryToUnify"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:UnifiedBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">UnifiedBool</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedBasicPrim\" title=\"Grisette.Unified\">UnifiedBasicPrim</a> mode (<a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> (<a href=\"Grisette-Unified.html#t:BaseMonad\" title=\"Grisette.Unified\">BaseMonad</a> mode), <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> (<a href=\"Grisette-Unified.html#t:BaseMonad\" title=\"Grisette.Unified\">BaseMonad</a> mode), <a href=\"Grisette-Unified.html#t:UnifiedBranching\" title=\"Grisette.Unified\">UnifiedBranching</a> mode (<a href=\"Grisette-Unified.html#t:BaseMonad\" title=\"Grisette.Unified\">BaseMonad</a> mode), <a href=\"Grisette-Internal-Unified-UnifiedData.html#t:AllUnifiedData\" title=\"Grisette.Internal.Unified.UnifiedData\">AllUnifiedData</a> mode) =&gt; <a href=\"#t:EvalModeBase\">EvalModeBase</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>)","name":"EvalModeBase","module":"Grisette.Unified","link":"Grisette-Unified.html#t:EvalModeBase"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:EvalModeInteger\">EvalModeInteger</a> = <a href=\"Grisette-Unified.html#t:UnifiedInteger\" title=\"Grisette.Unified\">UnifiedInteger</a>","name":"EvalModeInteger","module":"Grisette.Unified","link":"Grisette-Unified.html#t:EvalModeInteger"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:AllUnifiedBV\" title=\"Grisette.Internal.Unified.UnifiedBV\">AllUnifiedBV</a> mode, <a href=\"Grisette-Internal-Unified-BVBVConversion.html#t:AllUnifiedBVBVConversion\" title=\"Grisette.Internal.Unified.BVBVConversion\">AllUnifiedBVBVConversion</a> mode) =&gt; <a href=\"#t:EvalModeBV\">EvalModeBV</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>)","name":"EvalModeBV","module":"Grisette.Unified","link":"Grisette-Unified.html#t:EvalModeBV"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:AllUnifiedFP\" title=\"Grisette.Internal.Unified.UnifiedFP\">AllUnifiedFP</a> mode, <a href=\"Grisette-Internal-Unified-FPFPConversion.html#t:AllUnifiedFPFPConversion\" title=\"Grisette.Internal.Unified.FPFPConversion\">AllUnifiedFPFPConversion</a> mode, <a href=\"Grisette-Internal-Unified-BVFPConversion.html#t:AllUnifiedBVFPConversion\" title=\"Grisette.Internal.Unified.BVFPConversion\">AllUnifiedBVFPConversion</a> mode) =&gt; <a href=\"#t:EvalModeFP\">EvalModeFP</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>)","name":"EvalModeFP","module":"Grisette.Unified","link":"Grisette-Unified.html#t:EvalModeFP"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:EvalModeAlgReal\">EvalModeAlgReal</a> = <a href=\"Grisette-Unified.html#t:UnifiedAlgReal\" title=\"Grisette.Unified\">UnifiedAlgReal</a>","name":"EvalModeAlgReal","module":"Grisette.Unified","link":"Grisette-Unified.html#t:EvalModeAlgReal"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Unified.html#t:EvalModeBase\" title=\"Grisette.Unified\">EvalModeBase</a> mode, <a href=\"Grisette-Unified.html#t:EvalModeInteger\" title=\"Grisette.Unified\">EvalModeInteger</a> mode, <a href=\"Grisette-Unified.html#t:EvalModeAlgReal\" title=\"Grisette.Unified\">EvalModeAlgReal</a> mode, <a href=\"Grisette-Unified.html#t:EvalModeBV\" title=\"Grisette.Unified\">EvalModeBV</a> mode, <a href=\"Grisette-Unified.html#t:EvalModeFP\" title=\"Grisette.Unified\">EvalModeFP</a> mode) =&gt; <a href=\"#t:EvalModeAll\">EvalModeAll</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>)","name":"EvalModeAll","module":"Grisette.Unified","link":"Grisette-Unified.html#t:EvalModeAll"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MonadEvalModeAll\">MonadEvalModeAll</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) = (<a href=\"Grisette-Unified.html#t:EvalModeAll\" title=\"Grisette.Unified\">EvalModeAll</a> mode, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Unified.html#t:UnifiedBranching\" title=\"Grisette.Unified\">UnifiedBranching</a> mode m)","name":"MonadEvalModeAll","module":"Grisette.Unified","link":"Grisette-Unified.html#t:MonadEvalModeAll"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:DecideEvalMode\">DecideEvalMode</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:decideEvalMode\">decideEvalMode</a> :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a></li></ul>","name":"DecideEvalMode decideEvalMode","module":"Grisette.Unified","link":"Grisette-Unified.html#t:DecideEvalMode"},{"display_html":"<a href=\"#v:withMode\">withMode</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) r. <a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode =&gt; (mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-Unified.html#v:C\" title=\"Grisette.Unified\">C</a> =&gt; r) -&gt; (mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-Unified.html#v:S\" title=\"Grisette.Unified\">S</a> =&gt; r) -&gt; r","name":"withMode","module":"Grisette.Unified","link":"Grisette-Unified.html#v:withMode"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> c, <a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> s) =&gt; <a href=\"#t:EvalModeConvertible\">EvalModeConvertible</a> (c :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) (s :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withModeConvertible\">withModeConvertible</a> :: (c <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-Unified.html#v:C\" title=\"Grisette.Unified\">C</a> =&gt; r) -&gt; (s <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-Unified.html#v:S\" title=\"Grisette.Unified\">S</a> =&gt; r) -&gt; r</li><li><a href=\"#v:withModeConvertible-39-\">withModeConvertible'</a> :: ((c <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-Unified.html#v:C\" title=\"Grisette.Unified\">C</a>, s <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-Unified.html#v:C\" title=\"Grisette.Unified\">C</a>) =&gt; r) -&gt; ((c <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-Unified.html#v:C\" title=\"Grisette.Unified\">C</a>, s <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-Unified.html#v:S\" title=\"Grisette.Unified\">S</a>) =&gt; r) -&gt; ((c <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-Unified.html#v:S\" title=\"Grisette.Unified\">S</a>, s <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> '<a href=\"Grisette-Unified.html#v:S\" title=\"Grisette.Unified\">S</a>) =&gt; r) -&gt; r</li></ul>","name":"EvalModeConvertible withModeConvertible' withModeConvertible","module":"Grisette.Unified","link":"Grisette-Unified.html#t:EvalModeConvertible"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; <a href=\"#t:UnifiedBranching\">UnifiedBranching</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseBranching\">withBaseBranching</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Unified.html#t:IsConMode\" title=\"Grisette.Unified\">IsConMode</a> mode) (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> m) =&gt; r) -&gt; r</li></ul>","name":"UnifiedBranching withBaseBranching","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedBranching"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a =&gt; <a href=\"#t:UnifiedSimpleMergeable\">UnifiedSimpleMergeable</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSimpleMergeable\">withBaseSimpleMergeable</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Unified.html#t:IsConMode\" title=\"Grisette.Unified\">IsConMode</a> mode) () (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable</a> a) =&gt; r) -&gt; r</li></ul>","name":"UnifiedSimpleMergeable withBaseSimpleMergeable","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedSimpleMergeable"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSimpleMergeable1\">UnifiedSimpleMergeable1</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSimpleMergeable1\">withBaseSimpleMergeable1</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Unified.html#t:IsConMode\" title=\"Grisette.Unified\">IsConMode</a> mode) () (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable1\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable1</a> f) =&gt; r) -&gt; r</li></ul>","name":"UnifiedSimpleMergeable1 withBaseSimpleMergeable1","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedSimpleMergeable1"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSimpleMergeable2\">UnifiedSimpleMergeable2</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSimpleMergeable2\">withBaseSimpleMergeable2</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Unified.html#t:IsConMode\" title=\"Grisette.Unified\">IsConMode</a> mode) () (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SimpleMergeable2\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SimpleMergeable2</a> f) =&gt; r) -&gt; r</li></ul>","name":"UnifiedSimpleMergeable2 withBaseSimpleMergeable2","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedSimpleMergeable2"},{"display_html":"<a href=\"#v:mrgIf\">mrgIf</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a m. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Unified.html#t:UnifiedBranching\" title=\"Grisette.Unified\">UnifiedBranching</a> mode m) =&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode -&gt; m a -&gt; m a -&gt; m a","name":"mrgIf","module":"Grisette.Unified","link":"Grisette-Unified.html#v:mrgIf"},{"display_html":"<a href=\"#v:liftBaseMonad\">liftBaseMonad</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a m. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Unified.html#t:UnifiedBranching\" title=\"Grisette.Unified\">UnifiedBranching</a> mode m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; <a href=\"Grisette-Unified.html#t:BaseMonad\" title=\"Grisette.Unified\">BaseMonad</a> mode a -&gt; m a","name":"liftBaseMonad","module":"Grisette.Unified","link":"Grisette-Unified.html#v:liftBaseMonad"},{"display_html":"<a href=\"#v:mrgIte\">mrgIte</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSimpleMergeable\" title=\"Grisette.Unified\">UnifiedSimpleMergeable</a> mode a) =&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode -&gt; a -&gt; a -&gt; a","name":"mrgIte","module":"Grisette.Unified","link":"Grisette-Unified.html#v:mrgIte"},{"display_html":"<a href=\"#v:mrgIte1\">mrgIte1</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) f a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSimpleMergeable1\" title=\"Grisette.Unified\">UnifiedSimpleMergeable1</a> mode f, <a href=\"Grisette-Unified.html#t:UnifiedSimpleMergeable\" title=\"Grisette.Unified\">UnifiedSimpleMergeable</a> mode a) =&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode -&gt; f a -&gt; f a -&gt; f a","name":"mrgIte1","module":"Grisette.Unified","link":"Grisette-Unified.html#v:mrgIte1"},{"display_html":"<a href=\"#v:liftMrgIte\">liftMrgIte</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) f a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSimpleMergeable1\" title=\"Grisette.Unified\">UnifiedSimpleMergeable1</a> mode f) =&gt; (<a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode -&gt; a -&gt; a -&gt; a) -&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode -&gt; f a -&gt; f a -&gt; f a","name":"liftMrgIte","module":"Grisette.Unified","link":"Grisette-Unified.html#v:liftMrgIte"},{"display_html":"<a href=\"#v:mrgIte2\">mrgIte2</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) f a b. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSimpleMergeable2\" title=\"Grisette.Unified\">UnifiedSimpleMergeable2</a> mode f, <a href=\"Grisette-Unified.html#t:UnifiedSimpleMergeable\" title=\"Grisette.Unified\">UnifiedSimpleMergeable</a> mode a, <a href=\"Grisette-Unified.html#t:UnifiedSimpleMergeable\" title=\"Grisette.Unified\">UnifiedSimpleMergeable</a> mode b) =&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode -&gt; f a b -&gt; f a b -&gt; f a b","name":"mrgIte2","module":"Grisette.Unified","link":"Grisette-Unified.html#v:mrgIte2"},{"display_html":"<a href=\"#v:liftMrgIte2\">liftMrgIte2</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) f a b. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSimpleMergeable2\" title=\"Grisette.Unified\">UnifiedSimpleMergeable2</a> mode f) =&gt; (<a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode -&gt; a -&gt; a -&gt; a) -&gt; (<a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode -&gt; b -&gt; b -&gt; b) -&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode -&gt; f a b -&gt; f a b -&gt; f a b","name":"liftMrgIte2","module":"Grisette.Unified","link":"Grisette-Unified.html#v:liftMrgIte2"},{"display_html":"<a href=\"#v:simpleMerge\">simpleMerge</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSimpleMergeable\" title=\"Grisette.Unified\">UnifiedSimpleMergeable</a> mode a) =&gt; <a href=\"Grisette-Unified.html#t:BaseMonad\" title=\"Grisette.Unified\">BaseMonad</a> mode a -&gt; a","name":"simpleMerge","module":"Grisette.Unified","link":"Grisette-Unified.html#v:simpleMerge"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedITEOp\">UnifiedITEOp</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) v <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseITEOp\">withBaseITEOp</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Unified.html#t:IsConMode\" title=\"Grisette.Unified\">IsConMode</a> mode) () (<a href=\"Grisette-Internal-Core-Data-Class-ITEOp.html#t:ITEOp\" title=\"Grisette.Internal.Core.Data.Class.ITEOp\">ITEOp</a> v) =&gt; r) -&gt; r</li></ul>","name":"UnifiedITEOp withBaseITEOp","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedITEOp"},{"display_html":"<a href=\"#v:symIte\">symIte</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) v. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedITEOp\" title=\"Grisette.Unified\">UnifiedITEOp</a> mode v) =&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode -&gt; v -&gt; v -&gt; v","name":"symIte","module":"Grisette.Unified","link":"Grisette-Unified.html#v:symIte"},{"display_html":"<a href=\"#v:symIteMerge\">symIteMerge</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) v. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedITEOp\" title=\"Grisette.Unified\">UnifiedITEOp</a> mode v, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> v) =&gt; <a href=\"Grisette-Unified.html#t:BaseMonad\" title=\"Grisette.Unified\">BaseMonad</a> mode v -&gt; v","name":"symIteMerge","module":"Grisette.Unified","link":"Grisette-Unified.html#v:symIteMerge"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSymEq\">UnifiedSymEq</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSymEq\">withBaseSymEq</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Unified.html#t:IsConMode\" title=\"Grisette.Unified\">IsConMode</a> mode) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a) (<a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a) =&gt; r) -&gt; r</li></ul>","name":"UnifiedSymEq withBaseSymEq","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedSymEq"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Unified.html#t:UnifiedSymEq\" title=\"Grisette.Unified\">UnifiedSymEq</a> mode a =&gt; <a href=\"Grisette-Unified.html#t:UnifiedSymEq\" title=\"Grisette.Unified\">UnifiedSymEq</a> mode (f a)) =&gt; <a href=\"#t:UnifiedSymEq1\">UnifiedSymEq1</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSymEq1\">withBaseSymEq1</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Unified.html#t:IsConMode\" title=\"Grisette.Unified\">IsConMode</a> mode) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Functor-Classes.html#t:Eq1\" title=\"Data.Functor.Classes\">Eq1</a> f) (<a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq1\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq1</a> f) =&gt; r) -&gt; r</li></ul>","name":"UnifiedSymEq1 withBaseSymEq1","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedSymEq1"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Unified.html#t:UnifiedSymEq\" title=\"Grisette.Unified\">UnifiedSymEq</a> mode a =&gt; <a href=\"Grisette-Unified.html#t:UnifiedSymEq1\" title=\"Grisette.Unified\">UnifiedSymEq1</a> mode (f a)) =&gt; <a href=\"#t:UnifiedSymEq2\">UnifiedSymEq2</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSymEq2\">withBaseSymEq2</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Unified.html#t:IsConMode\" title=\"Grisette.Unified\">IsConMode</a> mode) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Functor-Classes.html#t:Eq2\" title=\"Data.Functor.Classes\">Eq2</a> f) (<a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq2\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq2</a> f) =&gt; r) -&gt; r</li></ul>","name":"UnifiedSymEq2 withBaseSymEq2","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedSymEq2"},{"display_html":"<a href=\"#v:.-61--61-\">(.==)</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSymEq\" title=\"Grisette.Unified\">UnifiedSymEq</a> mode a) =&gt; a -&gt; a -&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode","name":".==","module":"Grisette.Unified","link":"Grisette-Unified.html#v:.-61--61-"},{"display_html":"<a href=\"#v:.-47--61-\">(./=)</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSymEq\" title=\"Grisette.Unified\">UnifiedSymEq</a> mode a) =&gt; a -&gt; a -&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode","name":"./=","module":"Grisette.Unified","link":"Grisette-Unified.html#v:.-47--61-"},{"display_html":"<a href=\"#v:symDistinct\">symDistinct</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSymEq\" title=\"Grisette.Unified\">UnifiedSymEq</a> mode a) =&gt; [a] -&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode","name":"symDistinct","module":"Grisette.Unified","link":"Grisette-Unified.html#v:symDistinct"},{"display_html":"<a href=\"#v:liftSymEq\">liftSymEq</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) f a b. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSymEq1\" title=\"Grisette.Unified\">UnifiedSymEq1</a> mode f) =&gt; (a -&gt; b -&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode) -&gt; f a -&gt; f b -&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode","name":"liftSymEq","module":"Grisette.Unified","link":"Grisette-Unified.html#v:liftSymEq"},{"display_html":"<a href=\"#v:symEq1\">symEq1</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) f a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSymEq\" title=\"Grisette.Unified\">UnifiedSymEq</a> mode a, <a href=\"Grisette-Unified.html#t:UnifiedSymEq1\" title=\"Grisette.Unified\">UnifiedSymEq1</a> mode f) =&gt; f a -&gt; f a -&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode","name":"symEq1","module":"Grisette.Unified","link":"Grisette-Unified.html#v:symEq1"},{"display_html":"<a href=\"#v:liftSymEq2\">liftSymEq2</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) f a b c d. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSymEq2\" title=\"Grisette.Unified\">UnifiedSymEq2</a> mode f) =&gt; (a -&gt; b -&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode) -&gt; (c -&gt; d -&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode) -&gt; f a c -&gt; f b d -&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode","name":"liftSymEq2","module":"Grisette.Unified","link":"Grisette-Unified.html#v:liftSymEq2"},{"display_html":"<a href=\"#v:symEq2\">symEq2</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) f a b. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSymEq\" title=\"Grisette.Unified\">UnifiedSymEq</a> mode a, <a href=\"Grisette-Unified.html#t:UnifiedSymEq\" title=\"Grisette.Unified\">UnifiedSymEq</a> mode b, <a href=\"Grisette-Unified.html#t:UnifiedSymEq2\" title=\"Grisette.Unified\">UnifiedSymEq2</a> mode f) =&gt; f a b -&gt; f a b -&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode","name":"symEq2","module":"Grisette.Unified","link":"Grisette-Unified.html#v:symEq2"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSymOrd\">UnifiedSymOrd</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSymOrd\">withBaseSymOrd</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Unified.html#t:IsConMode\" title=\"Grisette.Unified\">IsConMode</a> mode) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> a) (<a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> a) =&gt; r) -&gt; r</li></ul>","name":"UnifiedSymOrd withBaseSymOrd","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedSymOrd"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSymOrd1\">UnifiedSymOrd1</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSymOrd1\">withBaseSymOrd1</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Unified.html#t:IsConMode\" title=\"Grisette.Unified\">IsConMode</a> mode) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Functor-Classes.html#t:Ord1\" title=\"Data.Functor.Classes\">Ord1</a> f) (<a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd1\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd1</a> f) =&gt; r) -&gt; r</li></ul>","name":"UnifiedSymOrd1 withBaseSymOrd1","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedSymOrd1"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSymOrd2\">UnifiedSymOrd2</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSymOrd2\">withBaseSymOrd2</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Unified.html#t:IsConMode\" title=\"Grisette.Unified\">IsConMode</a> mode) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Functor-Classes.html#t:Ord2\" title=\"Data.Functor.Classes\">Ord2</a> f) (<a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd2\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd2</a> f) =&gt; r) -&gt; r</li></ul>","name":"UnifiedSymOrd2 withBaseSymOrd2","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedSymOrd2"},{"display_html":"<a href=\"#v:.-60--61-\">(.&lt;=)</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSymOrd\" title=\"Grisette.Unified\">UnifiedSymOrd</a> mode a) =&gt; a -&gt; a -&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode","name":".<=","module":"Grisette.Unified","link":"Grisette-Unified.html#v:.-60--61-"},{"display_html":"<a href=\"#v:.-60-\">(.&lt;)</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSymOrd\" title=\"Grisette.Unified\">UnifiedSymOrd</a> mode a) =&gt; a -&gt; a -&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode","name":".<","module":"Grisette.Unified","link":"Grisette-Unified.html#v:.-60-"},{"display_html":"<a href=\"#v:.-62--61-\">(.&gt;=)</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSymOrd\" title=\"Grisette.Unified\">UnifiedSymOrd</a> mode a) =&gt; a -&gt; a -&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode","name":".>=","module":"Grisette.Unified","link":"Grisette-Unified.html#v:.-62--61-"},{"display_html":"<a href=\"#v:.-62-\">(.&gt;)</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSymOrd\" title=\"Grisette.Unified\">UnifiedSymOrd</a> mode a) =&gt; a -&gt; a -&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode","name":".>","module":"Grisette.Unified","link":"Grisette-Unified.html#v:.-62-"},{"display_html":"<a href=\"#v:symCompare\">symCompare</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a (ctx :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSymOrd\" title=\"Grisette.Unified\">UnifiedSymOrd</a> mode a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> ctx) =&gt; a -&gt; a -&gt; <a href=\"Grisette-Unified.html#t:BaseMonad\" title=\"Grisette.Unified\">BaseMonad</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>","name":"symCompare","module":"Grisette.Unified","link":"Grisette-Unified.html#v:symCompare"},{"display_html":"<a href=\"#v:liftSymCompare\">liftSymCompare</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) f a b. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSymOrd1\" title=\"Grisette.Unified\">UnifiedSymOrd1</a> mode f) =&gt; (a -&gt; b -&gt; <a href=\"Grisette-Unified.html#t:BaseMonad\" title=\"Grisette.Unified\">BaseMonad</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; f a -&gt; f b -&gt; <a href=\"Grisette-Unified.html#t:BaseMonad\" title=\"Grisette.Unified\">BaseMonad</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>","name":"liftSymCompare","module":"Grisette.Unified","link":"Grisette-Unified.html#v:liftSymCompare"},{"display_html":"<a href=\"#v:symCompare1\">symCompare1</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) f a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSymOrd\" title=\"Grisette.Unified\">UnifiedSymOrd</a> mode a, <a href=\"Grisette-Unified.html#t:UnifiedSymOrd1\" title=\"Grisette.Unified\">UnifiedSymOrd1</a> mode f) =&gt; f a -&gt; f a -&gt; <a href=\"Grisette-Unified.html#t:BaseMonad\" title=\"Grisette.Unified\">BaseMonad</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>","name":"symCompare1","module":"Grisette.Unified","link":"Grisette-Unified.html#v:symCompare1"},{"display_html":"<a href=\"#v:liftSymCompare2\">liftSymCompare2</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) f a b c d. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSymOrd2\" title=\"Grisette.Unified\">UnifiedSymOrd2</a> mode f) =&gt; (a -&gt; b -&gt; <a href=\"Grisette-Unified.html#t:BaseMonad\" title=\"Grisette.Unified\">BaseMonad</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; (c -&gt; d -&gt; <a href=\"Grisette-Unified.html#t:BaseMonad\" title=\"Grisette.Unified\">BaseMonad</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; f a c -&gt; f b d -&gt; <a href=\"Grisette-Unified.html#t:BaseMonad\" title=\"Grisette.Unified\">BaseMonad</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>","name":"liftSymCompare2","module":"Grisette.Unified","link":"Grisette-Unified.html#v:liftSymCompare2"},{"display_html":"<a href=\"#v:symCompare2\">symCompare2</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) f a b. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedSymOrd\" title=\"Grisette.Unified\">UnifiedSymOrd</a> mode a, <a href=\"Grisette-Unified.html#t:UnifiedSymOrd\" title=\"Grisette.Unified\">UnifiedSymOrd</a> mode b, <a href=\"Grisette-Unified.html#t:UnifiedSymOrd2\" title=\"Grisette.Unified\">UnifiedSymOrd2</a> mode f) =&gt; f a b -&gt; f a b -&gt; <a href=\"Grisette-Unified.html#t:BaseMonad\" title=\"Grisette.Unified\">BaseMonad</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>","name":"symCompare2","module":"Grisette.Unified","link":"Grisette-Unified.html#v:symCompare2"},{"display_html":"<a href=\"#v:symMax\">symMax</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a. (<a href=\"Grisette-Unified.html#t:UnifiedSymOrd\" title=\"Grisette.Unified\">UnifiedSymOrd</a> mode a, <a href=\"Grisette-Unified.html#t:UnifiedITEOp\" title=\"Grisette.Unified\">UnifiedITEOp</a> mode a, <a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode) =&gt; a -&gt; a -&gt; a","name":"symMax","module":"Grisette.Unified","link":"Grisette-Unified.html#v:symMax"},{"display_html":"<a href=\"#v:symMin\">symMin</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a. (<a href=\"Grisette-Unified.html#t:UnifiedSymOrd\" title=\"Grisette.Unified\">UnifiedSymOrd</a> mode a, <a href=\"Grisette-Unified.html#t:UnifiedITEOp\" title=\"Grisette.Unified\">UnifiedITEOp</a> mode a, <a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode) =&gt; a -&gt; a -&gt; a","name":"symMin","module":"Grisette.Unified","link":"Grisette-Unified.html#v:symMin"},{"display_html":"<a href=\"#v:mrgMax\">mrgMax</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a m. (<a href=\"Grisette-Unified.html#t:UnifiedSymOrd\" title=\"Grisette.Unified\">UnifiedSymOrd</a> mode a, <a href=\"Grisette-Unified.html#t:UnifiedBranching\" title=\"Grisette.Unified\">UnifiedBranching</a> mode m, <a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; a -&gt; a -&gt; m a","name":"mrgMax","module":"Grisette.Unified","link":"Grisette-Unified.html#v:mrgMax"},{"display_html":"<a href=\"#v:mrgMin\">mrgMin</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a m. (<a href=\"Grisette-Unified.html#t:UnifiedSymOrd\" title=\"Grisette.Unified\">UnifiedSymOrd</a> mode a, <a href=\"Grisette-Unified.html#t:UnifiedBranching\" title=\"Grisette.Unified\">UnifiedBranching</a> mode m, <a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; a -&gt; a -&gt; m a","name":"mrgMin","module":"Grisette.Unified","link":"Grisette-Unified.html#v:mrgMin"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedFiniteBits\">UnifiedFiniteBits</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseFiniteBits\">withBaseFiniteBits</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Unified.html#t:IsConMode\" title=\"Grisette.Unified\">IsConMode</a> mode) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:FiniteBits\" title=\"Data.Bits\">FiniteBits</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#t:FromBits\" title=\"Grisette.Internal.Core.Data.Class.SymFiniteBits\">FromBits</a> a) (<a href=\"Grisette-Internal-Core-Data-Class-SymFiniteBits.html#t:SymFiniteBits\" title=\"Grisette.Internal.Core.Data.Class.SymFiniteBits\">SymFiniteBits</a> a) =&gt; r) -&gt; r</li></ul>","name":"UnifiedFiniteBits withBaseFiniteBits","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedFiniteBits"},{"display_html":"<a href=\"#v:symTestBit\">symTestBit</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedFiniteBits\" title=\"Grisette.Unified\">UnifiedFiniteBits</a> mode a) =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode","name":"symTestBit","module":"Grisette.Unified","link":"Grisette-Unified.html#v:symTestBit"},{"display_html":"<a href=\"#v:symSetBitTo\">symSetBitTo</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedFiniteBits\" title=\"Grisette.Unified\">UnifiedFiniteBits</a> mode a) =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode -&gt; a","name":"symSetBitTo","module":"Grisette.Unified","link":"Grisette-Unified.html#v:symSetBitTo"},{"display_html":"<a href=\"#v:symFromBits\">symFromBits</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedFiniteBits\" title=\"Grisette.Unified\">UnifiedFiniteBits</a> mode a) =&gt; [<a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode] -&gt; a","name":"symFromBits","module":"Grisette.Unified","link":"Grisette-Unified.html#v:symFromBits"},{"display_html":"<a href=\"#v:symBitBlast\">symBitBlast</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedFiniteBits\" title=\"Grisette.Unified\">UnifiedFiniteBits</a> mode a) =&gt; a -&gt; [<a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode]","name":"symBitBlast","module":"Grisette.Unified","link":"Grisette-Unified.html#v:symBitBlast"},{"display_html":"<a href=\"#v:symLsb\">symLsb</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedFiniteBits\" title=\"Grisette.Unified\">UnifiedFiniteBits</a> mode a) =&gt; a -&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode","name":"symLsb","module":"Grisette.Unified","link":"Grisette-Unified.html#v:symLsb"},{"display_html":"<a href=\"#v:symMsb\">symMsb</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedFiniteBits\" title=\"Grisette.Unified\">UnifiedFiniteBits</a> mode a) =&gt; a -&gt; <a href=\"Grisette-Unified.html#t:GetBool\" title=\"Grisette.Unified\">GetBool</a> mode","name":"symMsb","module":"Grisette.Unified","link":"Grisette-Unified.html#v:symMsb"},{"display_html":"<a href=\"#v:symPopCount\">symPopCount</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedFiniteBits\" title=\"Grisette.Unified\">UnifiedFiniteBits</a> mode a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a, <a href=\"Grisette-Unified.html#t:UnifiedITEOp\" title=\"Grisette.Unified\">UnifiedITEOp</a> mode a) =&gt; a -&gt; a","name":"symPopCount","module":"Grisette.Unified","link":"Grisette-Unified.html#v:symPopCount"},{"display_html":"<a href=\"#v:symCountLeadingZeros\">symCountLeadingZeros</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedFiniteBits\" title=\"Grisette.Unified\">UnifiedFiniteBits</a> mode a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a, <a href=\"Grisette-Unified.html#t:UnifiedITEOp\" title=\"Grisette.Unified\">UnifiedITEOp</a> mode a) =&gt; a -&gt; a","name":"symCountLeadingZeros","module":"Grisette.Unified","link":"Grisette-Unified.html#v:symCountLeadingZeros"},{"display_html":"<a href=\"#v:symCountTrailingZeros\">symCountTrailingZeros</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedFiniteBits\" title=\"Grisette.Unified\">UnifiedFiniteBits</a> mode a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a, <a href=\"Grisette-Unified.html#t:UnifiedITEOp\" title=\"Grisette.Unified\">UnifiedITEOp</a> mode a) =&gt; a -&gt; a","name":"symCountTrailingZeros","module":"Grisette.Unified","link":"Grisette-Unified.html#v:symCountTrailingZeros"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedFromIntegral\">UnifiedFromIntegral</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseFromIntegral\">withBaseFromIntegral</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Bool.html#t:If\" title=\"Data.Type.Bool\">If</a> (<a href=\"Grisette-Unified.html#t:IsConMode\" title=\"Grisette.Unified\">IsConMode</a> mode) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> b) (<a href=\"Grisette-Internal-Core-Data-Class-SymFromIntegral.html#t:SymFromIntegral\" title=\"Grisette.Internal.Core.Data.Class.SymFromIntegral\">SymFromIntegral</a> a b) =&gt; r) -&gt; r</li></ul>","name":"UnifiedFromIntegral withBaseFromIntegral","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedFromIntegral"},{"display_html":"<a href=\"#v:symFromIntegral\">symFromIntegral</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a b. (<a href=\"Grisette-Unified.html#t:DecideEvalMode\" title=\"Grisette.Unified\">DecideEvalMode</a> mode, <a href=\"Grisette-Unified.html#t:UnifiedFromIntegral\" title=\"Grisette.Unified\">UnifiedFromIntegral</a> mode a b) =&gt; a -&gt; b","name":"symFromIntegral","module":"Grisette.Unified","link":"Grisette-Unified.html#v:symFromIntegral"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSafeBitCast\">UnifiedSafeBitCast</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a b (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSafeBitCast\">withBaseSafeBitCast</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeBitCast.html#t:SafeBitCast\" title=\"Grisette.Internal.Core.Data.Class.SafeBitCast\">SafeBitCast</a> e a b m =&gt; r) -&gt; r</li></ul>","name":"UnifiedSafeBitCast withBaseSafeBitCast","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedSafeBitCast"},{"display_html":"<a href=\"#v:safeBitCast\">safeBitCast</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a b m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Unified.html#t:UnifiedSafeBitCast\" title=\"Grisette.Unified\">UnifiedSafeBitCast</a> mode e a b m) =&gt; a -&gt; m b","name":"safeBitCast","module":"Grisette.Unified","link":"Grisette-Unified.html#v:safeBitCast"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSafeFromFP\">UnifiedSafeFromFP</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a fp fprd (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSafeFromFP\">withBaseSafeFromFP</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeFromFP.html#t:SafeFromFP\" title=\"Grisette.Internal.Core.Data.Class.SafeFromFP\">SafeFromFP</a> e a fp fprd m =&gt; r) -&gt; r</li></ul>","name":"UnifiedSafeFromFP withBaseSafeFromFP","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedSafeFromFP"},{"display_html":"<a href=\"#v:safeFromFP\">safeFromFP</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a fp fprd m. (<a href=\"Grisette-Unified.html#t:UnifiedSafeFromFP\" title=\"Grisette.Unified\">UnifiedSafeFromFP</a> mode e a fp fprd m, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m) =&gt; fprd -&gt; fp -&gt; m a","name":"safeFromFP","module":"Grisette.Unified","link":"Grisette-Unified.html#v:safeFromFP"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSafeDiv\">UnifiedSafeDiv</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSafeDiv\">withBaseSafeDiv</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeDiv.html#t:SafeDiv\" title=\"Grisette.Internal.Core.Data.Class.SafeDiv\">SafeDiv</a> e a m =&gt; r) -&gt; r</li></ul>","name":"UnifiedSafeDiv withBaseSafeDiv","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedSafeDiv"},{"display_html":"<a href=\"#v:safeDiv\">safeDiv</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Unified.html#t:UnifiedSafeDiv\" title=\"Grisette.Unified\">UnifiedSafeDiv</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeDiv","module":"Grisette.Unified","link":"Grisette-Unified.html#v:safeDiv"},{"display_html":"<a href=\"#v:safeMod\">safeMod</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Unified.html#t:UnifiedSafeDiv\" title=\"Grisette.Unified\">UnifiedSafeDiv</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeMod","module":"Grisette.Unified","link":"Grisette-Unified.html#v:safeMod"},{"display_html":"<a href=\"#v:safeDivMod\">safeDivMod</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Unified.html#t:UnifiedSafeDiv\" title=\"Grisette.Unified\">UnifiedSafeDiv</a> mode e a m) =&gt; a -&gt; a -&gt; m (a, a)","name":"safeDivMod","module":"Grisette.Unified","link":"Grisette-Unified.html#v:safeDivMod"},{"display_html":"<a href=\"#v:safeQuot\">safeQuot</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Unified.html#t:UnifiedSafeDiv\" title=\"Grisette.Unified\">UnifiedSafeDiv</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeQuot","module":"Grisette.Unified","link":"Grisette-Unified.html#v:safeQuot"},{"display_html":"<a href=\"#v:safeRem\">safeRem</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Unified.html#t:UnifiedSafeDiv\" title=\"Grisette.Unified\">UnifiedSafeDiv</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeRem","module":"Grisette.Unified","link":"Grisette-Unified.html#v:safeRem"},{"display_html":"<a href=\"#v:safeQuotRem\">safeQuotRem</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Unified.html#t:UnifiedSafeDiv\" title=\"Grisette.Unified\">UnifiedSafeDiv</a> mode e a m) =&gt; a -&gt; a -&gt; m (a, a)","name":"safeQuotRem","module":"Grisette.Unified","link":"Grisette-Unified.html#v:safeQuotRem"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSafeLinearArith\">UnifiedSafeLinearArith</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSafeLinearArith\">withBaseSafeLinearArith</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeLinearArith.html#t:SafeLinearArith\" title=\"Grisette.Internal.Core.Data.Class.SafeLinearArith\">SafeLinearArith</a> e a m =&gt; r) -&gt; r</li></ul>","name":"UnifiedSafeLinearArith withBaseSafeLinearArith","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedSafeLinearArith"},{"display_html":"<a href=\"#v:safeAdd\">safeAdd</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Unified.html#t:UnifiedSafeLinearArith\" title=\"Grisette.Unified\">UnifiedSafeLinearArith</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeAdd","module":"Grisette.Unified","link":"Grisette-Unified.html#v:safeAdd"},{"display_html":"<a href=\"#v:safeNeg\">safeNeg</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Unified.html#t:UnifiedSafeLinearArith\" title=\"Grisette.Unified\">UnifiedSafeLinearArith</a> mode e a m) =&gt; a -&gt; m a","name":"safeNeg","module":"Grisette.Unified","link":"Grisette-Unified.html#v:safeNeg"},{"display_html":"<a href=\"#v:safeSub\">safeSub</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Unified.html#t:UnifiedSafeLinearArith\" title=\"Grisette.Unified\">UnifiedSafeLinearArith</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeSub","module":"Grisette.Unified","link":"Grisette-Unified.html#v:safeSub"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSafeSymRotate\">UnifiedSafeSymRotate</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSafeSymRotate\">withBaseSafeSymRotate</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeSymRotate.html#t:SafeSymRotate\" title=\"Grisette.Internal.Core.Data.Class.SafeSymRotate\">SafeSymRotate</a> e a m =&gt; r) -&gt; r</li></ul>","name":"UnifiedSafeSymRotate withBaseSafeSymRotate","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedSafeSymRotate"},{"display_html":"<a href=\"#v:safeSymRotateL\">safeSymRotateL</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Unified.html#t:UnifiedSafeSymRotate\" title=\"Grisette.Unified\">UnifiedSafeSymRotate</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeSymRotateL","module":"Grisette.Unified","link":"Grisette-Unified.html#v:safeSymRotateL"},{"display_html":"<a href=\"#v:safeSymRotateR\">safeSymRotateR</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Unified.html#t:UnifiedSafeSymRotate\" title=\"Grisette.Unified\">UnifiedSafeSymRotate</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeSymRotateR","module":"Grisette.Unified","link":"Grisette-Unified.html#v:safeSymRotateR"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSafeSymShift\">UnifiedSafeSymShift</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseSafeSymShift\">withBaseSafeSymShift</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeSymShift.html#t:SafeSymShift\" title=\"Grisette.Internal.Core.Data.Class.SafeSymShift\">SafeSymShift</a> e a m =&gt; r) -&gt; r</li></ul>","name":"UnifiedSafeSymShift withBaseSafeSymShift","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedSafeSymShift"},{"display_html":"<a href=\"#v:safeSymShiftL\">safeSymShiftL</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Unified.html#t:UnifiedSafeSymShift\" title=\"Grisette.Unified\">UnifiedSafeSymShift</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeSymShiftL","module":"Grisette.Unified","link":"Grisette-Unified.html#v:safeSymShiftL"},{"display_html":"<a href=\"#v:safeSymShiftR\">safeSymShiftR</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Unified.html#t:UnifiedSafeSymShift\" title=\"Grisette.Unified\">UnifiedSafeSymShift</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeSymShiftR","module":"Grisette.Unified","link":"Grisette-Unified.html#v:safeSymShiftR"},{"display_html":"<a href=\"#v:safeSymStrictShiftL\">safeSymStrictShiftL</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Unified.html#t:UnifiedSafeSymShift\" title=\"Grisette.Unified\">UnifiedSafeSymShift</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeSymStrictShiftL","module":"Grisette.Unified","link":"Grisette-Unified.html#v:safeSymStrictShiftL"},{"display_html":"<a href=\"#v:safeSymStrictShiftR\">safeSymStrictShiftR</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Unified.html#t:UnifiedSafeSymShift\" title=\"Grisette.Unified\">UnifiedSafeSymShift</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeSymStrictShiftR","module":"Grisette.Unified","link":"Grisette-Unified.html#v:safeSymStrictShiftR"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedSafeFdiv\">UnifiedSafeFdiv</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withBaseUnifiedSafeFdiv\">withBaseUnifiedSafeFdiv</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SafeFdiv.html#t:SafeFdiv\" title=\"Grisette.Internal.Core.Data.Class.SafeFdiv\">SafeFdiv</a> e a m =&gt; r) -&gt; r</li></ul>","name":"UnifiedSafeFdiv withBaseUnifiedSafeFdiv","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedSafeFdiv"},{"display_html":"<a href=\"#v:safeFdiv\">safeFdiv</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) e a m. (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Unified.html#t:UnifiedSafeFdiv\" title=\"Grisette.Unified\">UnifiedSafeFdiv</a> mode e a m) =&gt; a -&gt; a -&gt; m a","name":"safeFdiv","module":"Grisette.Unified","link":"Grisette-Unified.html#v:safeFdiv"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:UnifiedPrim\">UnifiedPrim</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a = (<a href=\"Grisette-Internal-SymPrim-SymPrim.html#t:Prim\" title=\"Grisette.Internal.SymPrim.SymPrim\">Prim</a> a, <a href=\"Grisette-Unified.html#t:UnifiedITEOp\" title=\"Grisette.Unified\">UnifiedITEOp</a> mode a, <a href=\"Grisette-Unified.html#t:UnifiedSymEq\" title=\"Grisette.Unified\">UnifiedSymEq</a> mode a, <a href=\"Grisette-Unified.html#t:UnifiedSymOrd\" title=\"Grisette.Unified\">UnifiedSymOrd</a> mode a)","name":"UnifiedPrim","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedPrim"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:UnifiedBasicPrim\">UnifiedBasicPrim</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a = (<a href=\"Grisette-Unified.html#t:UnifiedPrim\" title=\"Grisette.Unified\">UnifiedPrim</a> mode a, <a href=\"Grisette-Unified.html#t:UnifiedSimpleMergeable\" title=\"Grisette.Unified\">UnifiedSimpleMergeable</a> mode a, <a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:UnifiedConRep\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">UnifiedConRep</a> a, <a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:UnifiedSymRep\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">UnifiedSymRep</a> a, <a href=\"Grisette-Internal-Unified-Class-UnifiedSolvable.html#t:UnifiedSolvable\" title=\"Grisette.Internal.Unified.Class.UnifiedSolvable\">UnifiedSolvable</a> mode a (<a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:ConType\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">ConType</a> a), <a href=\"Grisette-Internal-Unified-BaseConstraint.html#t:ConSymConversion\" title=\"Grisette.Internal.Unified.BaseConstraint\">ConSymConversion</a> (<a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:ConType\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">ConType</a> a) (<a href=\"Grisette-Internal-Unified-Class-UnifiedRep.html#t:SymType\" title=\"Grisette.Internal.Unified.Class.UnifiedRep\">SymType</a> a) a)","name":"UnifiedBasicPrim","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedBasicPrim"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:GetBool\">GetBool</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) = (bool :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> bool -&gt; mode","name":"GetBool","module":"Grisette.Unified","link":"Grisette-Unified.html#t:GetBool"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:GetIntN\">GetIntN</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) = (i :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> i -&gt; mode","name":"GetIntN","module":"Grisette.Unified","link":"Grisette-Unified.html#t:GetIntN"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:GetWordN\">GetWordN</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) = (w :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> w -&gt; mode","name":"GetWordN","module":"Grisette.Unified","link":"Grisette-Unified.html#t:GetWordN"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:GetSomeWordN\">GetSomeWordN</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) = (sw :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> sw -&gt; mode <span class=\"keyword\">where ...</span>","name":"GetSomeWordN","module":"Grisette.Unified","link":"Grisette-Unified.html#t:GetSomeWordN"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:GetSomeIntN\">GetSomeIntN</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) = (sw :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> sw -&gt; mode <span class=\"keyword\">where ...</span>","name":"GetSomeIntN","module":"Grisette.Unified","link":"Grisette-Unified.html#t:GetSomeIntN"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Internal-Unified-UnifiedBV.html#t:UnifiedBVImpl\" title=\"Grisette.Internal.Unified.UnifiedBV\">UnifiedBVImpl</a> mode (<a href=\"Grisette-Unified.html#t:GetWordN\" title=\"Grisette.Unified\">GetWordN</a> mode) (<a href=\"Grisette-Unified.html#t:GetIntN\" title=\"Grisette.Unified\">GetIntN</a> mode) n (<a href=\"Grisette-Unified.html#t:GetWordN\" title=\"Grisette.Unified\">GetWordN</a> mode n) (<a href=\"Grisette-Unified.html#t:GetIntN\" title=\"Grisette.Unified\">GetIntN</a> mode n) =&gt; <a href=\"#t:UnifiedBV\">UnifiedBV</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>)","name":"UnifiedBV","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedBV"},{"display_html":"<span class=\"keyword\">class</span> SafeUnifiedBVImpl mode (<a href=\"Grisette-Unified.html#t:GetWordN\" title=\"Grisette.Unified\">GetWordN</a> mode) (<a href=\"Grisette-Unified.html#t:GetIntN\" title=\"Grisette.Unified\">GetIntN</a> mode) n (<a href=\"Grisette-Unified.html#t:GetWordN\" title=\"Grisette.Unified\">GetWordN</a> mode n) (<a href=\"Grisette-Unified.html#t:GetIntN\" title=\"Grisette.Unified\">GetIntN</a> mode n) m =&gt; <a href=\"#t:SafeUnifiedBV\">SafeUnifiedBV</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"SafeUnifiedBV","module":"Grisette.Unified","link":"Grisette-Unified.html#t:SafeUnifiedBV"},{"display_html":"<span class=\"keyword\">class</span> SafeUnifiedSomeBVImpl mode (<a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> (<a href=\"Grisette-Unified.html#t:GetWordN\" title=\"Grisette.Unified\">GetWordN</a> mode)) (<a href=\"Grisette-Internal-SymPrim-SomeBV.html#t:SomeBV\" title=\"Grisette.Internal.SymPrim.SomeBV\">SomeBV</a> (<a href=\"Grisette-Unified.html#t:GetIntN\" title=\"Grisette.Unified\">GetIntN</a> mode)) m =&gt; <a href=\"#t:SafeUnifiedSomeBV\">SafeUnifiedSomeBV</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"SafeUnifiedSomeBV","module":"Grisette.Unified","link":"Grisette-Unified.html#t:SafeUnifiedSomeBV"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:GetInteger\">GetInteger</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) = (int :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> int -&gt; mode","name":"GetInteger","module":"Grisette.Unified","link":"Grisette-Unified.html#t:GetInteger"},{"display_html":"<span class=\"keyword\">class</span> UnifiedIntegerImpl mode (<a href=\"Grisette-Unified.html#t:GetInteger\" title=\"Grisette.Unified\">GetInteger</a> mode) =&gt; <a href=\"#t:UnifiedInteger\">UnifiedInteger</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>)","name":"UnifiedInteger","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedInteger"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:GetFP\">GetFP</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) = (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> f -&gt; mode","name":"GetFP","module":"Grisette.Unified","link":"Grisette-Unified.html#t:GetFP"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:GetFPRoundingMode\">GetFPRoundingMode</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) = (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> r -&gt; mode","name":"GetFPRoundingMode","module":"Grisette.Unified","link":"Grisette-Unified.html#t:GetFPRoundingMode"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Internal-Unified-UnifiedFP.html#t:UnifiedFPImpl\" title=\"Grisette.Internal.Unified.UnifiedFP\">UnifiedFPImpl</a> mode (<a href=\"Grisette-Unified.html#t:GetFP\" title=\"Grisette.Unified\">GetFP</a> mode) eb sb (<a href=\"Grisette-Unified.html#t:GetFP\" title=\"Grisette.Unified\">GetFP</a> mode eb sb) (<a href=\"Grisette-Unified.html#t:GetFPRoundingMode\" title=\"Grisette.Unified\">GetFPRoundingMode</a> mode) =&gt; <a href=\"#t:UnifiedFP\">UnifiedFP</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>)","name":"UnifiedFP","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedFP"},{"display_html":"<span class=\"keyword\">class</span> (SafeUnifiedFPImpl mode (<a href=\"Grisette-Unified.html#t:GetFP\" title=\"Grisette.Unified\">GetFP</a> mode) eb sb (<a href=\"Grisette-Unified.html#t:GetFP\" title=\"Grisette.Unified\">GetFP</a> mode eb sb) (<a href=\"Grisette-Unified.html#t:GetFPRoundingMode\" title=\"Grisette.Unified\">GetFPRoundingMode</a> mode) m, <a href=\"Grisette-Unified.html#t:UnifiedSafeFromFP\" title=\"Grisette.Unified\">UnifiedSafeFromFP</a> mode <a href=\"Grisette-Internal-SymPrim-FP.html#t:NotRepresentableFPError\" title=\"Grisette.Internal.SymPrim.FP\">NotRepresentableFPError</a> (<a href=\"Grisette-Unified.html#t:GetInteger\" title=\"Grisette.Unified\">GetInteger</a> mode) (<a href=\"Grisette-Unified.html#t:GetFP\" title=\"Grisette.Unified\">GetFP</a> mode eb sb) (<a href=\"Grisette-Unified.html#t:GetFPRoundingMode\" title=\"Grisette.Unified\">GetFPRoundingMode</a> mode) m) =&gt; <a href=\"#t:SafeUnifiedFP\">SafeUnifiedFP</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"SafeUnifiedFP","module":"Grisette.Unified","link":"Grisette-Unified.html#t:SafeUnifiedFP"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:GetAlgReal\">GetAlgReal</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) = (real :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> real -&gt; mode","name":"GetAlgReal","module":"Grisette.Unified","link":"Grisette-Unified.html#t:GetAlgReal"},{"display_html":"<span class=\"keyword\">class</span> UnifiedAlgRealImpl mode (<a href=\"Grisette-Unified.html#t:GetAlgReal\" title=\"Grisette.Unified\">GetAlgReal</a> mode) =&gt; <a href=\"#t:UnifiedAlgReal\">UnifiedAlgReal</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>)","name":"UnifiedAlgReal","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedAlgReal"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:GetData\">GetData</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) v = (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> r -&gt; mode v","name":"GetData","module":"Grisette.Unified","link":"Grisette-Unified.html#t:GetData"},{"display_html":"<span class=\"keyword\">class</span> UnifiedDataImpl mode v (<a href=\"Grisette-Unified.html#t:GetData\" title=\"Grisette.Unified\">GetData</a> mode v) =&gt; <a href=\"#t:UnifiedData\">UnifiedData</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) v","name":"UnifiedData","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedData"},{"display_html":"<a href=\"#v:extractData\">extractData</a> :: (UnifiedDataImpl mode v u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> v, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Unified.html#t:UnifiedBranching\" title=\"Grisette.Unified\">UnifiedBranching</a> mode m) =&gt; u -&gt; m v","name":"extractData","module":"Grisette.Unified","link":"Grisette-Unified.html#v:extractData"},{"display_html":"<a href=\"#v:wrapData\">wrapData</a> :: UnifiedDataImpl mode v u =&gt; v -&gt; u","name":"wrapData","module":"Grisette.Unified","link":"Grisette-Unified.html#v:wrapData"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:GetFun\">GetFun</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) = (fun :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">|</span> fun -&gt; mode","name":"GetFun","module":"Grisette.Unified","link":"Grisette-Unified.html#t:GetFun"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GetFun2\">GetFun2</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a b = <a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b","name":"GetFun2","module":"Grisette.Unified","link":"Grisette-Unified.html#t:GetFun2"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GetFun3\">GetFun3</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a b c = <a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode b c)","name":"GetFun3","module":"Grisette.Unified","link":"Grisette-Unified.html#t:GetFun3"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GetFun4\">GetFun4</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a b c d = <a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode b (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode c d))","name":"GetFun4","module":"Grisette.Unified","link":"Grisette-Unified.html#t:GetFun4"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GetFun5\">GetFun5</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a b c d e = <a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode b (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode c (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode d e)))","name":"GetFun5","module":"Grisette.Unified","link":"Grisette-Unified.html#t:GetFun5"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GetFun6\">GetFun6</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a b c d e f = <a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode b (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode c (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode d (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode e f))))","name":"GetFun6","module":"Grisette.Unified","link":"Grisette-Unified.html#t:GetFun6"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GetFun7\">GetFun7</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a b c d e f g = <a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode b (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode c (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode d (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode e (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode f g)))))","name":"GetFun7","module":"Grisette.Unified","link":"Grisette-Unified.html#t:GetFun7"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GetFun8\">GetFun8</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a b c d e f g h = <a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode b (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode c (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode d (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode e (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode f (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode g h))))))","name":"GetFun8","module":"Grisette.Unified","link":"Grisette-Unified.html#t:GetFun8"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnifiedFun\">UnifiedFun</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>)","name":"UnifiedFun","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedFun"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:UnifiedFunConstraint\">UnifiedFunConstraint</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) a b ca cb sa sb = (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Show\" title=\"Prelude\">Show</a> (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b), <a href=\"https://hackage.haskell.org/package/binary-0.8.9.2/docs/Data-Binary.html#t:Binary\" title=\"Data.Binary\">Binary</a> (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b), <a href=\"https://hackage.haskell.org/package/bytes-0.17.3/docs/Data-Bytes-Serial.html#t:Serial\" title=\"Data.Bytes.Serial\">Serial</a> (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b), <a href=\"https://hackage.haskell.org/package/cereal-0.5.8.3/docs/Data-Serialize.html#t:Serialize\" title=\"Data.Serialize\">Serialize</a> (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b), <a href=\"https://hackage.haskell.org/package/deepseq-1.5.0.0/docs/Control-DeepSeq.html#t:NFData\" title=\"Control.DeepSeq\">NFData</a> (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b), <a href=\"Grisette-Internal-Core-Data-Class-EvalSym.html#t:EvalSym\" title=\"Grisette.Internal.Core.Data.Class.EvalSym\">EvalSym</a> (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b), <a href=\"Grisette-Internal-Core-Data-Class-ExtractSym.html#t:ExtractSym\" title=\"Grisette.Internal.Core.Data.Class.ExtractSym\">ExtractSym</a> (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b), <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b), <a href=\"Grisette-Internal-Core-Data-Class-PPrint.html#t:PPrint\" title=\"Grisette.Internal.Core.Data.Class.PPrint\">PPrint</a> (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b), <a href=\"Grisette-Internal-Core-Data-Class-SubstSym.html#t:SubstSym\" title=\"Grisette.Internal.Core.Data.Class.SubstSym\">SubstSym</a> (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b), <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b), <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Lift\" title=\"Language.Haskell.TH.Syntax\">Lift</a> (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b), <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b), <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon</a> (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b) (ca <a href=\"Grisette-Internal-SymPrim-TabularFun.html#t:-61--45--62-\" title=\"Grisette.Internal.SymPrim.TabularFun\">=-&gt;</a> cb), <a href=\"Grisette-Internal-Core-Data-Class-ToCon.html#t:ToCon\" title=\"Grisette.Internal.Core.Data.Class.ToCon\">ToCon</a> (sa <a href=\"Grisette-Internal-SymPrim-SymTabularFun.html#t:-61--126--62-\" title=\"Grisette.Internal.SymPrim.SymTabularFun\">=~&gt;</a> sb) (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b), <a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">ToSym</a> (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b) (sa <a href=\"Grisette-Internal-SymPrim-SymTabularFun.html#t:-61--126--62-\" title=\"Grisette.Internal.SymPrim.SymTabularFun\">=~&gt;</a> sb), <a href=\"Grisette-Internal-Core-Data-Class-ToSym.html#t:ToSym\" title=\"Grisette.Internal.Core.Data.Class.ToSym\">ToSym</a> (ca <a href=\"Grisette-Internal-SymPrim-TabularFun.html#t:-61--45--62-\" title=\"Grisette.Internal.SymPrim.TabularFun\">=-&gt;</a> cb) (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b), <a href=\"Grisette-Internal-Core-Data-Class-Function.html#t:Function\" title=\"Grisette.Internal.Core.Data.Class.Function\">Function</a> (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b) a b, <a href=\"Grisette-Internal-Core-Data-Class-Function.html#t:Apply\" title=\"Grisette.Internal.Core.Data.Class.Function\">Apply</a> (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b), <a href=\"Grisette-Internal-Core-Data-Class-Function.html#t:FunType\" title=\"Grisette.Internal.Core.Data.Class.Function\">FunType</a> (<a href=\"Grisette-Unified.html#t:GetFun\" title=\"Grisette.Unified\">GetFun</a> mode a b) <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> (a -&gt; b))","name":"UnifiedFunConstraint","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedFunConstraint"},{"display_html":"<a href=\"#v:unifiedFunInstanceName\">unifiedFunInstanceName</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; [<a href=\"Grisette-Unified.html#t:TheoryToUnify\" title=\"Grisette.Unified\">TheoryToUnify</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"unifiedFunInstanceName","module":"Grisette.Unified","link":"Grisette-Unified.html#v:unifiedFunInstanceName"},{"display_html":"<a href=\"#v:genUnifiedFunInstance\">genUnifiedFunInstance</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; [<a href=\"Grisette-Unified.html#t:TheoryToUnify\" title=\"Grisette.Unified\">TheoryToUnify</a>] -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:DecsQ\" title=\"Language.Haskell.TH.Lib\">DecsQ</a>","name":"genUnifiedFunInstance","module":"Grisette.Unified","link":"Grisette-Unified.html#v:genUnifiedFunInstance"},{"display_html":"<span class=\"keyword\">class</span> (UnifiedBVBVConversionImpl mode (<a href=\"Grisette-Unified.html#t:GetWordN\" title=\"Grisette.Unified\">GetWordN</a> mode) (<a href=\"Grisette-Unified.html#t:GetWordN\" title=\"Grisette.Unified\">GetWordN</a> mode) n0 n1 (<a href=\"Grisette-Unified.html#t:GetWordN\" title=\"Grisette.Unified\">GetWordN</a> mode n0) (<a href=\"Grisette-Unified.html#t:GetWordN\" title=\"Grisette.Unified\">GetWordN</a> mode n1), UnifiedBVBVConversionImpl mode (<a href=\"Grisette-Unified.html#t:GetWordN\" title=\"Grisette.Unified\">GetWordN</a> mode) (<a href=\"Grisette-Unified.html#t:GetIntN\" title=\"Grisette.Unified\">GetIntN</a> mode) n0 n1 (<a href=\"Grisette-Unified.html#t:GetWordN\" title=\"Grisette.Unified\">GetWordN</a> mode n0) (<a href=\"Grisette-Unified.html#t:GetIntN\" title=\"Grisette.Unified\">GetIntN</a> mode n1), UnifiedBVBVConversionImpl mode (<a href=\"Grisette-Unified.html#t:GetIntN\" title=\"Grisette.Unified\">GetIntN</a> mode) (<a href=\"Grisette-Unified.html#t:GetWordN\" title=\"Grisette.Unified\">GetWordN</a> mode) n0 n1 (<a href=\"Grisette-Unified.html#t:GetIntN\" title=\"Grisette.Unified\">GetIntN</a> mode n0) (<a href=\"Grisette-Unified.html#t:GetWordN\" title=\"Grisette.Unified\">GetWordN</a> mode n1), UnifiedBVBVConversionImpl mode (<a href=\"Grisette-Unified.html#t:GetIntN\" title=\"Grisette.Unified\">GetIntN</a> mode) (<a href=\"Grisette-Unified.html#t:GetIntN\" title=\"Grisette.Unified\">GetIntN</a> mode) n0 n1 (<a href=\"Grisette-Unified.html#t:GetIntN\" title=\"Grisette.Unified\">GetIntN</a> mode n0) (<a href=\"Grisette-Unified.html#t:GetIntN\" title=\"Grisette.Unified\">GetIntN</a> mode n1)) =&gt; <a href=\"#t:UnifiedBVBVConversion\">UnifiedBVBVConversion</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) (n0 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>)","name":"UnifiedBVBVConversion","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedBVBVConversion"},{"display_html":"<span class=\"keyword\">class</span> UnifiedBVFPConversionImpl mode (<a href=\"Grisette-Unified.html#t:GetWordN\" title=\"Grisette.Unified\">GetWordN</a> mode) (<a href=\"Grisette-Unified.html#t:GetIntN\" title=\"Grisette.Unified\">GetIntN</a> mode) (<a href=\"Grisette-Unified.html#t:GetFP\" title=\"Grisette.Unified\">GetFP</a> mode) n eb sb (<a href=\"Grisette-Unified.html#t:GetWordN\" title=\"Grisette.Unified\">GetWordN</a> mode n) (<a href=\"Grisette-Unified.html#t:GetIntN\" title=\"Grisette.Unified\">GetIntN</a> mode n) (<a href=\"Grisette-Unified.html#t:GetFP\" title=\"Grisette.Unified\">GetFP</a> mode eb sb) (<a href=\"Grisette-Unified.html#t:GetFPRoundingMode\" title=\"Grisette.Unified\">GetFPRoundingMode</a> mode) =&gt; <a href=\"#t:UnifiedBVFPConversion\">UnifiedBVFPConversion</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>)","name":"UnifiedBVFPConversion","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedBVFPConversion"},{"display_html":"<span class=\"keyword\">class</span> SafeUnifiedBVFPConversionImpl mode (<a href=\"Grisette-Unified.html#t:GetWordN\" title=\"Grisette.Unified\">GetWordN</a> mode) (<a href=\"Grisette-Unified.html#t:GetIntN\" title=\"Grisette.Unified\">GetIntN</a> mode) (<a href=\"Grisette-Unified.html#t:GetFP\" title=\"Grisette.Unified\">GetFP</a> mode) n eb sb (<a href=\"Grisette-Unified.html#t:GetWordN\" title=\"Grisette.Unified\">GetWordN</a> mode n) (<a href=\"Grisette-Unified.html#t:GetIntN\" title=\"Grisette.Unified\">GetIntN</a> mode n) (<a href=\"Grisette-Unified.html#t:GetFP\" title=\"Grisette.Unified\">GetFP</a> mode eb sb) (<a href=\"Grisette-Unified.html#t:GetFPRoundingMode\" title=\"Grisette.Unified\">GetFPRoundingMode</a> mode) m =&gt; <a href=\"#t:SafeUnifiedBVFPConversion\">SafeUnifiedBVFPConversion</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (eb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"SafeUnifiedBVFPConversion","module":"Grisette.Unified","link":"Grisette-Unified.html#t:SafeUnifiedBVFPConversion"},{"display_html":"<span class=\"keyword\">class</span> UnifiedFPFPConversionImpl mode (<a href=\"Grisette-Unified.html#t:GetFP\" title=\"Grisette.Unified\">GetFP</a> mode) eb0 sb0 eb1 sb1 (<a href=\"Grisette-Unified.html#t:GetFP\" title=\"Grisette.Unified\">GetFP</a> mode eb0 sb0) (<a href=\"Grisette-Unified.html#t:GetFP\" title=\"Grisette.Unified\">GetFP</a> mode eb1 sb1) (<a href=\"Grisette-Unified.html#t:GetFPRoundingMode\" title=\"Grisette.Unified\">GetFPRoundingMode</a> mode) =&gt; <a href=\"#t:UnifiedFPFPConversion\">UnifiedFPFPConversion</a> (mode :: <a href=\"Grisette-Unified.html#t:EvalModeTag\" title=\"Grisette.Unified\">EvalModeTag</a>) (eb0 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb0 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (eb1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (sb1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>)","name":"UnifiedFPFPConversion","module":"Grisette.Unified","link":"Grisette-Unified.html#t:UnifiedFPFPConversion"},{"display_html":"<a href=\"#v:symElem\">symElem</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) t a. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBase\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeBase</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymEq.html#t:UnifiedSymEq\" title=\"Grisette.Internal.Unified.Class.UnifiedSymEq\">UnifiedSymEq</a> mode a) =&gt; a -&gt; t a -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode","name":"symElem","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:symElem"},{"display_html":"<a href=\"#v:symMaximum\">symMaximum</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a t. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd</a> mode a, <a href=\"Grisette-Internal-Unified-Class-UnifiedITEOp.html#t:UnifiedITEOp\" title=\"Grisette.Internal.Unified.Class.UnifiedITEOp\">UnifiedITEOp</a> mode a, <a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBase\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeBase</a> mode) =&gt; t a -&gt; a","name":"symMaximum","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:symMaximum"},{"display_html":"<a href=\"#v:mrgMaximum\">mrgMaximum</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a t m. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBase\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeBase</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedBranching\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedBranching</a> mode m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd</a> mode a) =&gt; t a -&gt; m a","name":"mrgMaximum","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:mrgMaximum"},{"display_html":"<a href=\"#v:symMinimum\">symMinimum</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a t. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd</a> mode a, <a href=\"Grisette-Internal-Unified-Class-UnifiedITEOp.html#t:UnifiedITEOp\" title=\"Grisette.Internal.Unified.Class.UnifiedITEOp\">UnifiedITEOp</a> mode a, <a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBase\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeBase</a> mode) =&gt; t a -&gt; a","name":"symMinimum","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:symMinimum"},{"display_html":"<a href=\"#v:mrgMinimum\">mrgMinimum</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a t m. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBase\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeBase</a> mode, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedBranching\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedBranching</a> mode m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd</a> mode a) =&gt; t a -&gt; m a","name":"mrgMinimum","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:mrgMinimum"},{"display_html":"<a href=\"#v:mrgFoldrM\">mrgFoldrM</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; (a -&gt; b -&gt; m b) -&gt; b -&gt; t a -&gt; m b","name":"mrgFoldrM","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:mrgFoldrM"},{"display_html":"<a href=\"#v:mrgFoldlM\">mrgFoldlM</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; (b -&gt; a -&gt; m b) -&gt; b -&gt; t a -&gt; m b","name":"mrgFoldlM","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:mrgFoldlM"},{"display_html":"<a href=\"#v:mrgTraverse_\">mrgTraverse_</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; (a -&gt; m b) -&gt; t a -&gt; m ()","name":"mrgTraverse_","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:mrgTraverse_"},{"display_html":"<a href=\"#v:mrgFor_\">mrgFor_</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; t a -&gt; (a -&gt; m b) -&gt; m ()","name":"mrgFor_","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:mrgFor_"},{"display_html":"<a href=\"#v:mrgSequenceA_\">mrgSequenceA_</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m) =&gt; t (m a) -&gt; m ()","name":"mrgSequenceA_","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:mrgSequenceA_"},{"display_html":"<a href=\"#v:mrgAsum\">mrgAsum</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Alternative\" title=\"Control.Applicative\">Alternative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; t (f a) -&gt; f a","name":"mrgAsum","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:mrgAsum"},{"display_html":"<a href=\"#v:mrgMapM_\">mrgMapM_</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; (a -&gt; m b) -&gt; t a -&gt; m ()","name":"mrgMapM_","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:mrgMapM_"},{"display_html":"<a href=\"#v:mrgForM_\">mrgForM_</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; t a -&gt; (a -&gt; m b) -&gt; m ()","name":"mrgForM_","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:mrgForM_"},{"display_html":"<a href=\"#v:mrgSequence_\">mrgSequence_</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m) =&gt; t (m a) -&gt; m ()","name":"mrgSequence_","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:mrgSequence_"},{"display_html":"<a href=\"#v:mrgMsum\">mrgMsum</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:MonadPlus\" title=\"Control.Monad\">MonadPlus</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; t (m a) -&gt; m a","name":"mrgMsum","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:mrgMsum"},{"display_html":"<a href=\"#v:symAnd\">symAnd</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) t. (<a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBase\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeBase</a> mode, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; t (<a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode) -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode","name":"symAnd","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:symAnd"},{"display_html":"<a href=\"#v:symOr\">symOr</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) t. (<a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBase\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeBase</a> mode, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; t (<a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode) -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode","name":"symOr","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:symOr"},{"display_html":"<a href=\"#v:symAny\">symAny</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) t a. (<a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBase\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeBase</a> mode, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; (a -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode) -&gt; t a -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode","name":"symAny","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:symAny"},{"display_html":"<a href=\"#v:symAll\">symAll</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) t a. (<a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBase\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeBase</a> mode, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; (a -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode) -&gt; t a -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode","name":"symAll","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:symAll"},{"display_html":"<a href=\"#v:symMaximumBy\">symMaximumBy</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) t a. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Unified-Class-UnifiedITEOp.html#t:UnifiedITEOp\" title=\"Grisette.Internal.Unified.Class.UnifiedITEOp\">UnifiedITEOp</a> mode a, <a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBase\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeBase</a> mode) =&gt; (a -&gt; a -&gt; <a href=\"Grisette-Internal-Unified-BaseMonad.html#t:BaseMonad\" title=\"Grisette.Internal.Unified.BaseMonad\">BaseMonad</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t a -&gt; a","name":"symMaximumBy","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:symMaximumBy"},{"display_html":"<a href=\"#v:mrgMaximumBy\">mrgMaximumBy</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) t a m. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBase\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeBase</a> mode, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedBranching\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedBranching</a> mode m) =&gt; (a -&gt; a -&gt; <a href=\"Grisette-Internal-Unified-BaseMonad.html#t:BaseMonad\" title=\"Grisette.Internal.Unified.BaseMonad\">BaseMonad</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t a -&gt; m a","name":"mrgMaximumBy","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:mrgMaximumBy"},{"display_html":"<a href=\"#v:symMinimumBy\">symMinimumBy</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) t a. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Unified-Class-UnifiedITEOp.html#t:UnifiedITEOp\" title=\"Grisette.Internal.Unified.Class.UnifiedITEOp\">UnifiedITEOp</a> mode a, <a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBase\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeBase</a> mode) =&gt; (a -&gt; a -&gt; <a href=\"Grisette-Internal-Unified-BaseMonad.html#t:BaseMonad\" title=\"Grisette.Internal.Unified.BaseMonad\">BaseMonad</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t a -&gt; a","name":"symMinimumBy","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:symMinimumBy"},{"display_html":"<a href=\"#v:mrgMinimumBy\">mrgMinimumBy</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) t a m. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBase\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeBase</a> mode, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedBranching\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedBranching</a> mode m) =&gt; (a -&gt; a -&gt; <a href=\"Grisette-Internal-Unified-BaseMonad.html#t:BaseMonad\" title=\"Grisette.Internal.Unified.BaseMonad\">BaseMonad</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t a -&gt; m a","name":"mrgMinimumBy","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:mrgMinimumBy"},{"display_html":"<a href=\"#v:symNotElem\">symNotElem</a> :: <span class=\"keyword\">forall</span> t (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) a. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymEq.html#t:UnifiedSymEq\" title=\"Grisette.Internal.Unified.Class.UnifiedSymEq\">UnifiedSymEq</a> mode a, <a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBase\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeBase</a> mode) =&gt; a -&gt; t a -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode","name":"symNotElem","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:symNotElem"},{"display_html":"<a href=\"#v:mrgFind\">mrgFind</a> :: <span class=\"keyword\">forall</span> t (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) m a. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBase\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeBase</a> mode, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedBranching\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedBranching</a> mode m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode) -&gt; t a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> a)","name":"mrgFind","module":"Grisette.Unified.Lib.Data.Foldable","link":"Grisette-Unified-Lib-Data-Foldable.html#v:mrgFind"},{"display_html":"<a href=\"#v:mrgFmap\">mrgFmap</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; (a -&gt; b) -&gt; f a -&gt; f b","name":"mrgFmap","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgFmap"},{"display_html":"<a href=\"#v:.-60--36-\">(.&lt;$)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; b -&gt; f a -&gt; f b","name":".<$","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:.-60--36-"},{"display_html":"<a href=\"#v:mrgReturnWithStrategy\">mrgReturnWithStrategy</a> :: <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> u =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a -&gt; a -&gt; u a","name":"mrgReturnWithStrategy","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgReturnWithStrategy"},{"display_html":"<a href=\"#v:mrgBindWithStrategy\">mrgBindWithStrategy</a> :: <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> u =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> b -&gt; u a -&gt; (a -&gt; u b) -&gt; u b","name":"mrgBindWithStrategy","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgBindWithStrategy"},{"display_html":"<a href=\"#v:mrgReturn\">mrgReturn</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; a -&gt; u a","name":"mrgReturn","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgReturn"},{"display_html":"<a href=\"#v:.-62--62--61-\">(.&gt;&gt;=)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; u a -&gt; (a -&gt; u b) -&gt; u b","name":".>>=","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:.-62--62--61-"},{"display_html":"<a href=\"#v:.-62--62-\">(.&gt;&gt;)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; m a -&gt; m b -&gt; m b","name":".>>","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:.-62--62-"},{"display_html":"<a href=\"#v:mrgFail\">mrgFail</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:MonadFail\" title=\"Control.Monad\">MonadFail</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; m a","name":"mrgFail","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgFail"},{"display_html":"<a href=\"#v:mrgMzero\">mrgMzero</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:MonadPlus\" title=\"Control.Monad\">MonadPlus</a> m) =&gt; m a","name":"mrgMzero","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgMzero"},{"display_html":"<a href=\"#v:mrgMplus\">mrgMplus</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:MonadPlus\" title=\"Control.Monad\">MonadPlus</a> m) =&gt; m a -&gt; m a -&gt; m a","name":"mrgMplus","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgMplus"},{"display_html":"<a href=\"#v:mrgMapM\">mrgMapM</a> :: <span class=\"keyword\">forall</span> a b t f. (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable1\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable1</a> t, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> f, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Traversable.html#t:Traversable\" title=\"Data.Traversable\">Traversable</a> t) =&gt; (a -&gt; f b) -&gt; t a -&gt; f (t b)","name":"mrgMapM","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgMapM"},{"display_html":"<a href=\"#v:mrgMapM_\">mrgMapM_</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; (a -&gt; m b) -&gt; t a -&gt; m ()","name":"mrgMapM_","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgMapM_"},{"display_html":"<a href=\"#v:mrgForM\">mrgForM</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable1\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable1</a> t, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Traversable.html#t:Traversable\" title=\"Data.Traversable\">Traversable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m) =&gt; t a -&gt; (a -&gt; m b) -&gt; m (t b)","name":"mrgForM","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgForM"},{"display_html":"<a href=\"#v:mrgForM_\">mrgForM_</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; t a -&gt; (a -&gt; m b) -&gt; m ()","name":"mrgForM_","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgForM_"},{"display_html":"<a href=\"#v:mrgSequence\">mrgSequence</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable1\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable1</a> t, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> f, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Traversable.html#t:Traversable\" title=\"Data.Traversable\">Traversable</a> t) =&gt; t (f a) -&gt; f (t a)","name":"mrgSequence","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgSequence"},{"display_html":"<a href=\"#v:mrgSequence_\">mrgSequence_</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m) =&gt; t (m a) -&gt; m ()","name":"mrgSequence_","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgSequence_"},{"display_html":"<a href=\"#v:.-61--60--60-\">(.=&lt;&lt;)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; (a -&gt; m b) -&gt; m a -&gt; m b","name":".=<<","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:.-61--60--60-"},{"display_html":"<a href=\"#v:.-62--61--62-\">(.&gt;=&gt;)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c) =&gt; (a -&gt; m b) -&gt; (b -&gt; m c) -&gt; a -&gt; m c","name":".>=>","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:.-62--61--62-"},{"display_html":"<a href=\"#v:.-60--61--60-\">(.&lt;=&lt;)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c) =&gt; (b -&gt; m c) -&gt; (a -&gt; m b) -&gt; a -&gt; m c","name":".<=<","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:.-60--61--60-"},{"display_html":"<a href=\"#v:mrgForever\">mrgForever</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; m a -&gt; m b","name":"mrgForever","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgForever"},{"display_html":"<a href=\"#v:mrgVoid\">mrgVoid</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; f a -&gt; f ()","name":"mrgVoid","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgVoid"},{"display_html":"<a href=\"#v:mrgJoin\">mrgJoin</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; m (m a) -&gt; m a","name":"mrgJoin","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgJoin"},{"display_html":"<a href=\"#v:mrgMsum\">mrgMsum</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:MonadPlus\" title=\"Control.Monad\">MonadPlus</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; t (m a) -&gt; m a","name":"mrgMsum","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgMsum"},{"display_html":"<a href=\"#v:mrgMfilter\">mrgMfilter</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:MonadPlus\" title=\"Control.Monad\">MonadPlus</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; m a -&gt; m a","name":"mrgMfilter","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgMfilter"},{"display_html":"<a href=\"#v:symMfilter\">symMfilter</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) m a. (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:MonadPlus\" title=\"Control.Monad\">MonadPlus</a> m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedBranching\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedBranching</a> mode m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; <a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode) -&gt; m a -&gt; m a","name":"symMfilter","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:symMfilter"},{"display_html":"<a href=\"#v:mrgFilterM\">mrgFilterM</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; (a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; t a -&gt; m [a]","name":"mrgFilterM","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgFilterM"},{"display_html":"<a href=\"#v:symFilterM\">symFilterM</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) m t a. (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedBranching\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedBranching</a> mode m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBase\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeBase</a> mode, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; (a -&gt; m (<a href=\"Grisette-Internal-Unified-UnifiedBool.html#t:GetBool\" title=\"Grisette.Internal.Unified.UnifiedBool\">GetBool</a> mode)) -&gt; t a -&gt; m [a]","name":"symFilterM","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:symFilterM"},{"display_html":"<a href=\"#v:mrgMapAndUnzipM\">mrgMapAndUnzipM</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c) =&gt; (a -&gt; m (b, c)) -&gt; [a] -&gt; m ([b], [c])","name":"mrgMapAndUnzipM","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgMapAndUnzipM"},{"display_html":"<a href=\"#v:mrgZipWithM\">mrgZipWithM</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c) =&gt; (a -&gt; b -&gt; m c) -&gt; [a] -&gt; [b] -&gt; m [c]","name":"mrgZipWithM","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgZipWithM"},{"display_html":"<a href=\"#v:mrgZipWithM_\">mrgZipWithM_</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c) =&gt; (a -&gt; b -&gt; m c) -&gt; [a] -&gt; [b] -&gt; m ()","name":"mrgZipWithM_","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgZipWithM_"},{"display_html":"<a href=\"#v:mrgFoldM\">mrgFoldM</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; (b -&gt; a -&gt; m b) -&gt; b -&gt; t a -&gt; m b","name":"mrgFoldM","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgFoldM"},{"display_html":"<a href=\"#v:mrgFoldM_\">mrgFoldM_</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; (b -&gt; a -&gt; m b) -&gt; b -&gt; t a -&gt; m ()","name":"mrgFoldM_","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgFoldM_"},{"display_html":"<a href=\"#v:mrgReplicateM\">mrgReplicateM</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; m a -&gt; m [a]","name":"mrgReplicateM","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgReplicateM"},{"display_html":"<a href=\"#v:symReplicateM\">symReplicateM</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) m a int. (<a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBase\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeBase</a> mode, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> int, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedBranching\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedBranching</a> mode m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd</a> mode int) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; int -&gt; m a -&gt; m [a]","name":"symReplicateM","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:symReplicateM"},{"display_html":"<a href=\"#v:mrgReplicateM_\">mrgReplicateM_</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; m a -&gt; m ()","name":"mrgReplicateM_","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgReplicateM_"},{"display_html":"<a href=\"#v:symReplicateM_\">symReplicateM_</a> :: <span class=\"keyword\">forall</span> (mode :: <a href=\"Grisette-Internal-Unified-EvalModeTag.html#t:EvalModeTag\" title=\"Grisette.Internal.Unified.EvalModeTag\">EvalModeTag</a>) m a int. (<a href=\"Grisette-Internal-Unified-EvalMode.html#t:EvalModeBase\" title=\"Grisette.Internal.Unified.EvalMode\">EvalModeBase</a> mode, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> int, <a href=\"Grisette-Internal-Unified-Class-UnifiedSimpleMergeable.html#t:UnifiedBranching\" title=\"Grisette.Internal.Unified.Class.UnifiedSimpleMergeable\">UnifiedBranching</a> mode m, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd</a> mode <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, <a href=\"Grisette-Internal-Unified-Class-UnifiedSymOrd.html#t:UnifiedSymOrd\" title=\"Grisette.Internal.Unified.Class.UnifiedSymOrd\">UnifiedSymOrd</a> mode int) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; int -&gt; m a -&gt; m ()","name":"symReplicateM_","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:symReplicateM_"},{"display_html":"<a href=\"#v:mrgGuard\">mrgGuard</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Alternative\" title=\"Control.Applicative\">Alternative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; m ()","name":"mrgGuard","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgGuard"},{"display_html":"<a href=\"#v:symGuard\">symGuard</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Alternative\" title=\"Control.Applicative\">Alternative</a> m) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; m ()","name":"symGuard","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:symGuard"},{"display_html":"<a href=\"#v:mrgWhen\">mrgWhen</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; m () -&gt; m ()","name":"mrgWhen","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgWhen"},{"display_html":"<a href=\"#v:symWhen\">symWhen</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> m) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; m () -&gt; m ()","name":"symWhen","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:symWhen"},{"display_html":"<a href=\"#v:mrgUnless\">mrgUnless</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; m () -&gt; m ()","name":"mrgUnless","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgUnless"},{"display_html":"<a href=\"#v:symUnless\">symUnless</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> m) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; m () -&gt; m ()","name":"symUnless","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:symUnless"},{"display_html":"<a href=\"#v:mrgLiftM\">mrgLiftM</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; (a -&gt; b) -&gt; m a -&gt; m b","name":"mrgLiftM","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgLiftM"},{"display_html":"<a href=\"#v:mrgLiftM2\">mrgLiftM2</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c) =&gt; (a -&gt; b -&gt; c) -&gt; m a -&gt; m b -&gt; m c","name":"mrgLiftM2","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgLiftM2"},{"display_html":"<a href=\"#v:mrgLiftM3\">mrgLiftM3</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> d) =&gt; (a -&gt; b -&gt; c -&gt; d) -&gt; m a -&gt; m b -&gt; m c -&gt; m d","name":"mrgLiftM3","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgLiftM3"},{"display_html":"<a href=\"#v:mrgLiftM4\">mrgLiftM4</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> d, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e) =&gt; (a -&gt; b -&gt; c -&gt; d -&gt; e) -&gt; m a -&gt; m b -&gt; m c -&gt; m d -&gt; m e","name":"mrgLiftM4","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgLiftM4"},{"display_html":"<a href=\"#v:mrgLiftM5\">mrgLiftM5</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> d, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> f) =&gt; (a -&gt; b -&gt; c -&gt; d -&gt; e -&gt; f) -&gt; m a -&gt; m b -&gt; m c -&gt; m d -&gt; m e -&gt; m f","name":"mrgLiftM5","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgLiftM5"},{"display_html":"<a href=\"#v:mrgAp\">mrgAp</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; m (a -&gt; b) -&gt; m a -&gt; m b","name":"mrgAp","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:mrgAp"},{"display_html":"<a href=\"#v:.-60--36--33--62-\">(.&lt;$!&gt;)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; (a -&gt; b) -&gt; m a -&gt; m b","name":".<$!>","module":"Grisette.Unified.Lib.Control.Monad","link":"Grisette-Unified-Lib-Control-Monad.html#v:.-60--36--33--62-"},{"display_html":"<a href=\"#v:symElem\">symElem</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a) =&gt; a -&gt; t a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symElem","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:symElem"},{"display_html":"<a href=\"#v:symMaximum\">symMaximum</a> :: <span class=\"keyword\">forall</span> a t. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ITEOp.html#t:ITEOp\" title=\"Grisette.Internal.Core.Data.Class.ITEOp\">ITEOp</a> a) =&gt; t a -&gt; a","name":"symMaximum","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:symMaximum"},{"display_html":"<a href=\"#v:mrgMaximum\">mrgMaximum</a> :: <span class=\"keyword\">forall</span> a t m. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> a) =&gt; t a -&gt; m a","name":"mrgMaximum","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:mrgMaximum"},{"display_html":"<a href=\"#v:symMinimum\">symMinimum</a> :: <span class=\"keyword\">forall</span> a t. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ITEOp.html#t:ITEOp\" title=\"Grisette.Internal.Core.Data.Class.ITEOp\">ITEOp</a> a) =&gt; t a -&gt; a","name":"symMinimum","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:symMinimum"},{"display_html":"<a href=\"#v:mrgMinimum\">mrgMinimum</a> :: <span class=\"keyword\">forall</span> a t m. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> a) =&gt; t a -&gt; m a","name":"mrgMinimum","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:mrgMinimum"},{"display_html":"<a href=\"#v:mrgFoldrM\">mrgFoldrM</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; (a -&gt; b -&gt; m b) -&gt; b -&gt; t a -&gt; m b","name":"mrgFoldrM","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:mrgFoldrM"},{"display_html":"<a href=\"#v:mrgFoldlM\">mrgFoldlM</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; (b -&gt; a -&gt; m b) -&gt; b -&gt; t a -&gt; m b","name":"mrgFoldlM","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:mrgFoldlM"},{"display_html":"<a href=\"#v:mrgTraverse_\">mrgTraverse_</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; (a -&gt; m b) -&gt; t a -&gt; m ()","name":"mrgTraverse_","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:mrgTraverse_"},{"display_html":"<a href=\"#v:mrgFor_\">mrgFor_</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; t a -&gt; (a -&gt; m b) -&gt; m ()","name":"mrgFor_","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:mrgFor_"},{"display_html":"<a href=\"#v:mrgSequenceA_\">mrgSequenceA_</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m) =&gt; t (m a) -&gt; m ()","name":"mrgSequenceA_","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:mrgSequenceA_"},{"display_html":"<a href=\"#v:mrgAsum\">mrgAsum</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Alternative\" title=\"Control.Applicative\">Alternative</a> f, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; t (f a) -&gt; f a","name":"mrgAsum","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:mrgAsum"},{"display_html":"<a href=\"#v:mrgMapM_\">mrgMapM_</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; (a -&gt; m b) -&gt; t a -&gt; m ()","name":"mrgMapM_","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:mrgMapM_"},{"display_html":"<a href=\"#v:mrgForM_\">mrgForM_</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; t a -&gt; (a -&gt; m b) -&gt; m ()","name":"mrgForM_","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:mrgForM_"},{"display_html":"<a href=\"#v:mrgSequence_\">mrgSequence_</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m) =&gt; t (m a) -&gt; m ()","name":"mrgSequence_","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:mrgSequence_"},{"display_html":"<a href=\"#v:mrgMsum\">mrgMsum</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:MonadPlus\" title=\"Control.Monad\">MonadPlus</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; t (m a) -&gt; m a","name":"mrgMsum","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:mrgMsum"},{"display_html":"<a href=\"#v:symAnd\">symAnd</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t =&gt; t <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symAnd","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:symAnd"},{"display_html":"<a href=\"#v:symOr\">symOr</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t =&gt; t <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symOr","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:symOr"},{"display_html":"<a href=\"#v:symAny\">symAny</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t =&gt; (a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; t a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symAny","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:symAny"},{"display_html":"<a href=\"#v:symAll\">symAll</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t =&gt; (a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; t a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symAll","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:symAll"},{"display_html":"<a href=\"#v:symMaximumBy\">symMaximumBy</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ITEOp.html#t:ITEOp\" title=\"Grisette.Internal.Core.Data.Class.ITEOp\">ITEOp</a> a) =&gt; (a -&gt; a -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t a -&gt; a","name":"symMaximumBy","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:symMaximumBy"},{"display_html":"<a href=\"#v:mrgMaximumBy\">mrgMaximumBy</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m) =&gt; (a -&gt; a -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t a -&gt; m a","name":"mrgMaximumBy","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:mrgMaximumBy"},{"display_html":"<a href=\"#v:symMinimumBy\">symMinimumBy</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ITEOp.html#t:ITEOp\" title=\"Grisette.Internal.Core.Data.Class.ITEOp\">ITEOp</a> a) =&gt; (a -&gt; a -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t a -&gt; a","name":"symMinimumBy","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:symMinimumBy"},{"display_html":"<a href=\"#v:mrgMinimumBy\">mrgMinimumBy</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m) =&gt; (a -&gt; a -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t a -&gt; m a","name":"mrgMinimumBy","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:mrgMinimumBy"},{"display_html":"<a href=\"#v:symNotElem\">symNotElem</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a) =&gt; a -&gt; t a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symNotElem","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:symNotElem"},{"display_html":"<a href=\"#v:mrgFind\">mrgFind</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; t a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> a)","name":"mrgFind","module":"Grisette.Lib.Data.Foldable","link":"Grisette-Lib-Data-Foldable.html#v:mrgFind"},{"display_html":"<a href=\"#v:mrgFmap\">mrgFmap</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; (a -&gt; b) -&gt; f a -&gt; f b","name":"mrgFmap","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgFmap"},{"display_html":"<a href=\"#v:.-60--36-\">(.&lt;$)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; b -&gt; f a -&gt; f b","name":".<$","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:.-60--36-"},{"display_html":"<a href=\"#v:mrgReturnWithStrategy\">mrgReturnWithStrategy</a> :: <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> u =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a -&gt; a -&gt; u a","name":"mrgReturnWithStrategy","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgReturnWithStrategy"},{"display_html":"<a href=\"#v:mrgBindWithStrategy\">mrgBindWithStrategy</a> :: <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> u =&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> a -&gt; <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:MergingStrategy\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">MergingStrategy</a> b -&gt; u a -&gt; (a -&gt; u b) -&gt; u b","name":"mrgBindWithStrategy","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgBindWithStrategy"},{"display_html":"<a href=\"#v:mrgReturn\">mrgReturn</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; a -&gt; u a","name":"mrgReturn","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgReturn"},{"display_html":"<a href=\"#v:.-62--62--61-\">(.&gt;&gt;=)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; u a -&gt; (a -&gt; u b) -&gt; u b","name":".>>=","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:.-62--62--61-"},{"display_html":"<a href=\"#v:.-62--62-\">(.&gt;&gt;)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; m a -&gt; m b -&gt; m b","name":".>>","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:.-62--62-"},{"display_html":"<a href=\"#v:mrgFail\">mrgFail</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:MonadFail\" title=\"Control.Monad\">MonadFail</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; m a","name":"mrgFail","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgFail"},{"display_html":"<a href=\"#v:mrgMzero\">mrgMzero</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:MonadPlus\" title=\"Control.Monad\">MonadPlus</a> m) =&gt; m a","name":"mrgMzero","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgMzero"},{"display_html":"<a href=\"#v:mrgMplus\">mrgMplus</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:MonadPlus\" title=\"Control.Monad\">MonadPlus</a> m) =&gt; m a -&gt; m a -&gt; m a","name":"mrgMplus","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgMplus"},{"display_html":"<a href=\"#v:mrgMapM\">mrgMapM</a> :: <span class=\"keyword\">forall</span> a b t f. (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable1\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable1</a> t, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> f, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Traversable.html#t:Traversable\" title=\"Data.Traversable\">Traversable</a> t) =&gt; (a -&gt; f b) -&gt; t a -&gt; f (t b)","name":"mrgMapM","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgMapM"},{"display_html":"<a href=\"#v:mrgMapM_\">mrgMapM_</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; (a -&gt; m b) -&gt; t a -&gt; m ()","name":"mrgMapM_","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgMapM_"},{"display_html":"<a href=\"#v:mrgForM\">mrgForM</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable1\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable1</a> t, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Traversable.html#t:Traversable\" title=\"Data.Traversable\">Traversable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m) =&gt; t a -&gt; (a -&gt; m b) -&gt; m (t b)","name":"mrgForM","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgForM"},{"display_html":"<a href=\"#v:mrgForM_\">mrgForM_</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; t a -&gt; (a -&gt; m b) -&gt; m ()","name":"mrgForM_","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgForM_"},{"display_html":"<a href=\"#v:mrgSequence\">mrgSequence</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable1\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable1</a> t, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> f, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Traversable.html#t:Traversable\" title=\"Data.Traversable\">Traversable</a> t) =&gt; t (f a) -&gt; f (t a)","name":"mrgSequence","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgSequence"},{"display_html":"<a href=\"#v:mrgSequence_\">mrgSequence_</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m) =&gt; t (m a) -&gt; m ()","name":"mrgSequence_","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgSequence_"},{"display_html":"<a href=\"#v:.-61--60--60-\">(.=&lt;&lt;)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; (a -&gt; m b) -&gt; m a -&gt; m b","name":".=<<","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:.-61--60--60-"},{"display_html":"<a href=\"#v:.-62--61--62-\">(.&gt;=&gt;)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c) =&gt; (a -&gt; m b) -&gt; (b -&gt; m c) -&gt; a -&gt; m c","name":".>=>","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:.-62--61--62-"},{"display_html":"<a href=\"#v:.-60--61--60-\">(.&lt;=&lt;)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c) =&gt; (b -&gt; m c) -&gt; (a -&gt; m b) -&gt; a -&gt; m c","name":".<=<","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:.-60--61--60-"},{"display_html":"<a href=\"#v:mrgForever\">mrgForever</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; m a -&gt; m b","name":"mrgForever","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgForever"},{"display_html":"<a href=\"#v:mrgVoid\">mrgVoid</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> f, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; f a -&gt; f ()","name":"mrgVoid","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgVoid"},{"display_html":"<a href=\"#v:mrgJoin\">mrgJoin</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; m (m a) -&gt; m a","name":"mrgJoin","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgJoin"},{"display_html":"<a href=\"#v:mrgMsum\">mrgMsum</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:MonadPlus\" title=\"Control.Monad\">MonadPlus</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; t (m a) -&gt; m a","name":"mrgMsum","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgMsum"},{"display_html":"<a href=\"#v:mrgMfilter\">mrgMfilter</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:MonadPlus\" title=\"Control.Monad\">MonadPlus</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; m a -&gt; m a","name":"mrgMfilter","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgMfilter"},{"display_html":"<a href=\"#v:symMfilter\">symMfilter</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:MonadPlus\" title=\"Control.Monad\">MonadPlus</a> m, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; m a -&gt; m a","name":"symMfilter","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:symMfilter"},{"display_html":"<a href=\"#v:mrgFilterM\">mrgFilterM</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; (a -&gt; m <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; t a -&gt; m [a]","name":"mrgFilterM","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgFilterM"},{"display_html":"<a href=\"#v:symFilterM\">symFilterM</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; (a -&gt; m <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; t a -&gt; m [a]","name":"symFilterM","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:symFilterM"},{"display_html":"<a href=\"#v:mrgMapAndUnzipM\">mrgMapAndUnzipM</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c) =&gt; (a -&gt; m (b, c)) -&gt; [a] -&gt; m ([b], [c])","name":"mrgMapAndUnzipM","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgMapAndUnzipM"},{"display_html":"<a href=\"#v:mrgZipWithM\">mrgZipWithM</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c) =&gt; (a -&gt; b -&gt; m c) -&gt; [a] -&gt; [b] -&gt; m [c]","name":"mrgZipWithM","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgZipWithM"},{"display_html":"<a href=\"#v:mrgZipWithM_\">mrgZipWithM_</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c) =&gt; (a -&gt; b -&gt; m c) -&gt; [a] -&gt; [b] -&gt; m ()","name":"mrgZipWithM_","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgZipWithM_"},{"display_html":"<a href=\"#v:mrgFoldM\">mrgFoldM</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t) =&gt; (b -&gt; a -&gt; m b) -&gt; b -&gt; t a -&gt; m b","name":"mrgFoldM","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgFoldM"},{"display_html":"<a href=\"#v:mrgFoldM_\">mrgFoldM_</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; (b -&gt; a -&gt; m b) -&gt; b -&gt; t a -&gt; m ()","name":"mrgFoldM_","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgFoldM_"},{"display_html":"<a href=\"#v:mrgReplicateM\">mrgReplicateM</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; m a -&gt; m [a]","name":"mrgReplicateM","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgReplicateM"},{"display_html":"<a href=\"#v:symReplicateM\">symReplicateM</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> int, <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> int) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; int -&gt; m a -&gt; m [a]","name":"symReplicateM","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:symReplicateM"},{"display_html":"<a href=\"#v:mrgReplicateM_\">mrgReplicateM_</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; m a -&gt; m ()","name":"mrgReplicateM_","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgReplicateM_"},{"display_html":"<a href=\"#v:symReplicateM_\">symReplicateM_</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> int, <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> int) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; int -&gt; m a -&gt; m ()","name":"symReplicateM_","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:symReplicateM_"},{"display_html":"<a href=\"#v:mrgGuard\">mrgGuard</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Alternative\" title=\"Control.Applicative\">Alternative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; m ()","name":"mrgGuard","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgGuard"},{"display_html":"<a href=\"#v:symGuard\">symGuard</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Alternative\" title=\"Control.Applicative\">Alternative</a> m) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; m ()","name":"symGuard","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:symGuard"},{"display_html":"<a href=\"#v:mrgWhen\">mrgWhen</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; m () -&gt; m ()","name":"mrgWhen","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgWhen"},{"display_html":"<a href=\"#v:symWhen\">symWhen</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> m) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; m () -&gt; m ()","name":"symWhen","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:symWhen"},{"display_html":"<a href=\"#v:mrgUnless\">mrgUnless</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; m () -&gt; m ()","name":"mrgUnless","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgUnless"},{"display_html":"<a href=\"#v:symUnless\">symUnless</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> m) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; m () -&gt; m ()","name":"symUnless","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:symUnless"},{"display_html":"<a href=\"#v:mrgLiftM\">mrgLiftM</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; (a -&gt; b) -&gt; m a -&gt; m b","name":"mrgLiftM","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgLiftM"},{"display_html":"<a href=\"#v:mrgLiftM2\">mrgLiftM2</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c) =&gt; (a -&gt; b -&gt; c) -&gt; m a -&gt; m b -&gt; m c","name":"mrgLiftM2","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgLiftM2"},{"display_html":"<a href=\"#v:mrgLiftM3\">mrgLiftM3</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> d) =&gt; (a -&gt; b -&gt; c -&gt; d) -&gt; m a -&gt; m b -&gt; m c -&gt; m d","name":"mrgLiftM3","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgLiftM3"},{"display_html":"<a href=\"#v:mrgLiftM4\">mrgLiftM4</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> d, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e) =&gt; (a -&gt; b -&gt; c -&gt; d -&gt; e) -&gt; m a -&gt; m b -&gt; m c -&gt; m d -&gt; m e","name":"mrgLiftM4","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgLiftM4"},{"display_html":"<a href=\"#v:mrgLiftM5\">mrgLiftM5</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> c, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> d, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> f) =&gt; (a -&gt; b -&gt; c -&gt; d -&gt; e -&gt; f) -&gt; m a -&gt; m b -&gt; m c -&gt; m d -&gt; m e -&gt; m f","name":"mrgLiftM5","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgLiftM5"},{"display_html":"<a href=\"#v:mrgAp\">mrgAp</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; m (a -&gt; b) -&gt; m a -&gt; m b","name":"mrgAp","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:mrgAp"},{"display_html":"<a href=\"#v:.-60--36--33--62-\">(.&lt;$!&gt;)</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:MonadTryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">MonadTryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b) =&gt; (a -&gt; b) -&gt; m a -&gt; m b","name":".<$!>","module":"Grisette.Lib.Control.Monad","link":"Grisette-Lib-Control-Monad.html#v:.-60--36--33--62-"},{"display_html":"<a href=\"#v:symAnd\">symAnd</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t =&gt; t <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symAnd","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:symAnd"},{"display_html":"<a href=\"#v:symOr\">symOr</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t =&gt; t <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symOr","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:symOr"},{"display_html":"<a href=\"#v:symAny\">symAny</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t =&gt; (a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; t a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symAny","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:symAny"},{"display_html":"<a href=\"#v:symAll\">symAll</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t =&gt; (a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; t a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symAll","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:symAll"},{"display_html":"<a href=\"#v:mrgMaximum\">mrgMaximum</a> :: <span class=\"keyword\">forall</span> a t m. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> a) =&gt; t a -&gt; m a","name":"mrgMaximum","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgMaximum"},{"display_html":"<a href=\"#v:symMaximum\">symMaximum</a> :: <span class=\"keyword\">forall</span> a t. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ITEOp.html#t:ITEOp\" title=\"Grisette.Internal.Core.Data.Class.ITEOp\">ITEOp</a> a) =&gt; t a -&gt; a","name":"symMaximum","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:symMaximum"},{"display_html":"<a href=\"#v:mrgMinimum\">mrgMinimum</a> :: <span class=\"keyword\">forall</span> a t m. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> a) =&gt; t a -&gt; m a","name":"mrgMinimum","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgMinimum"},{"display_html":"<a href=\"#v:symMinimum\">symMinimum</a> :: <span class=\"keyword\">forall</span> a t. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ITEOp.html#t:ITEOp\" title=\"Grisette.Internal.Core.Data.Class.ITEOp\">ITEOp</a> a) =&gt; t a -&gt; a","name":"symMinimum","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:symMinimum"},{"display_html":"<a href=\"#v:mrgTake\">mrgTake</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> u, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> int, <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> int) =&gt; int -&gt; [a] -&gt; u [a]","name":"mrgTake","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgTake"},{"display_html":"<a href=\"#v:mrgDrop\">mrgDrop</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> u, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> int, <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> int) =&gt; int -&gt; [a] -&gt; u [a]","name":"mrgDrop","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgDrop"},{"display_html":"<a href=\"#v:mrgSplitAt\">mrgSplitAt</a> :: <span class=\"keyword\">forall</span> a int u. (<a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> int, <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> int) =&gt; int -&gt; [a] -&gt; u ([a], [a])","name":"mrgSplitAt","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgSplitAt"},{"display_html":"<a href=\"#v:mrgTakeWhile\">mrgTakeWhile</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> u, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; [a] -&gt; u [a]","name":"mrgTakeWhile","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgTakeWhile"},{"display_html":"<a href=\"#v:mrgDropWhile\">mrgDropWhile</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> u, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; [a] -&gt; u [a]","name":"mrgDropWhile","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgDropWhile"},{"display_html":"<a href=\"#v:mrgDropWhileEnd\">mrgDropWhileEnd</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; [a] -&gt; u [a]","name":"mrgDropWhileEnd","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgDropWhileEnd"},{"display_html":"<a href=\"#v:mrgSpan\">mrgSpan</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> u, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; [a] -&gt; u ([a], [a])","name":"mrgSpan","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgSpan"},{"display_html":"<a href=\"#v:mrgBreak\">mrgBreak</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> u, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; [a] -&gt; u ([a], [a])","name":"mrgBreak","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgBreak"},{"display_html":"<a href=\"#v:mrgStripPrefix\">mrgStripPrefix</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> u, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a) =&gt; [a] -&gt; [a] -&gt; u (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> [a])","name":"mrgStripPrefix","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgStripPrefix"},{"display_html":"<a href=\"#v:mrgGroup\">mrgGroup</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a) =&gt; [a] -&gt; u [[a]]","name":"mrgGroup","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgGroup"},{"display_html":"<a href=\"#v:symIsPrefixOf\">symIsPrefixOf</a> :: <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a =&gt; [a] -&gt; [a] -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symIsPrefixOf","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:symIsPrefixOf"},{"display_html":"<a href=\"#v:symIsSuffixOf\">symIsSuffixOf</a> :: <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a =&gt; [a] -&gt; [a] -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symIsSuffixOf","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:symIsSuffixOf"},{"display_html":"<a href=\"#v:symIsInfixOf\">symIsInfixOf</a> :: <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a =&gt; [a] -&gt; [a] -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symIsInfixOf","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:symIsInfixOf"},{"display_html":"<a href=\"#v:symIsSubsequenceOf\">symIsSubsequenceOf</a> :: <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a =&gt; [a] -&gt; [a] -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symIsSubsequenceOf","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:symIsSubsequenceOf"},{"display_html":"<a href=\"#v:symElem\">symElem</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a) =&gt; a -&gt; t a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symElem","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:symElem"},{"display_html":"<a href=\"#v:symNotElem\">symNotElem</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a) =&gt; a -&gt; t a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symNotElem","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:symNotElem"},{"display_html":"<a href=\"#v:mrgLookup\">mrgLookup</a> :: <span class=\"keyword\">forall</span> a b u. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> u, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a) =&gt; a -&gt; [(a, b)] -&gt; u (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> b)","name":"mrgLookup","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgLookup"},{"display_html":"<a href=\"#v:mrgFind\">mrgFind</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; t a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> a)","name":"mrgFind","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgFind"},{"display_html":"<a href=\"#v:mrgFilter\">mrgFilter</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> u, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; [a] -&gt; u [a]","name":"mrgFilter","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgFilter"},{"display_html":"<a href=\"#v:mrgPartition\">mrgPartition</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> u, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; [a] -&gt; u ([a], [a])","name":"mrgPartition","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgPartition"},{"display_html":"<a href=\"#v:.-33--63-\">(.!?)</a> :: <span class=\"keyword\">forall</span> a uf int. (<a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> uf, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> int, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> int) =&gt; [a] -&gt; int -&gt; uf (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> a)","name":".!?","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:.-33--63-"},{"display_html":"<a href=\"#v:mrgElemIndex\">mrgElemIndex</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> int, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> int) =&gt; a -&gt; [a] -&gt; u (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> int)","name":"mrgElemIndex","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgElemIndex"},{"display_html":"<a href=\"#v:mrgElemIndices\">mrgElemIndices</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> int, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> int) =&gt; a -&gt; [a] -&gt; u [int]","name":"mrgElemIndices","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgElemIndices"},{"display_html":"<a href=\"#v:mrgFindIndex\">mrgFindIndex</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> u, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> int, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> int) =&gt; (a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; [a] -&gt; u (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> int)","name":"mrgFindIndex","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgFindIndex"},{"display_html":"<a href=\"#v:mrgFindIndices\">mrgFindIndices</a> :: <span class=\"keyword\">forall</span> u a int. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> u, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> int, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> int) =&gt; (a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; [a] -&gt; u [int]","name":"mrgFindIndices","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgFindIndices"},{"display_html":"<a href=\"#v:mrgNub\">mrgNub</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> u, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a) =&gt; [a] -&gt; u [a]","name":"mrgNub","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgNub"},{"display_html":"<a href=\"#v:mrgDelete\">mrgDelete</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> u, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a) =&gt; a -&gt; [a] -&gt; u [a]","name":"mrgDelete","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgDelete"},{"display_html":"<a href=\"#v:.-92--92-\">(.\\\\)</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a) =&gt; [a] -&gt; [a] -&gt; u [a]","name":".\\\\","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:.-92--92-"},{"display_html":"<a href=\"#v:mrgUnion\">mrgUnion</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a) =&gt; [a] -&gt; [a] -&gt; u [a]","name":"mrgUnion","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgUnion"},{"display_html":"<a href=\"#v:mrgIntersect\">mrgIntersect</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymEq.html#t:SymEq\" title=\"Grisette.Internal.Core.Data.Class.SymEq\">SymEq</a> a) =&gt; [a] -&gt; [a] -&gt; u [a]","name":"mrgIntersect","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgIntersect"},{"display_html":"<a href=\"#v:mrgInsert\">mrgInsert</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-SymOrd.html#t:SymOrd\" title=\"Grisette.Internal.Core.Data.Class.SymOrd\">SymOrd</a> a) =&gt; a -&gt; [a] -&gt; m [a]","name":"mrgInsert","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgInsert"},{"display_html":"<a href=\"#v:mrgNubBy\">mrgNubBy</a> :: <span class=\"keyword\">forall</span> a u. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> u, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; [a] -&gt; u [a]","name":"mrgNubBy","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgNubBy"},{"display_html":"<a href=\"#v:mrgDeleteBy\">mrgDeleteBy</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> u, <a href=\"Grisette-Internal-Core-Data-Class-SimpleMergeable.html#t:SymBranching\" title=\"Grisette.Internal.Core.Data.Class.SimpleMergeable\">SymBranching</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; a -&gt; [a] -&gt; u [a]","name":"mrgDeleteBy","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgDeleteBy"},{"display_html":"<a href=\"#v:mrgDeleteFirstsBy\">mrgDeleteFirstsBy</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; [a] -&gt; [a] -&gt; u [a]","name":"mrgDeleteFirstsBy","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgDeleteFirstsBy"},{"display_html":"<a href=\"#v:mrgUnionBy\">mrgUnionBy</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; [a] -&gt; [a] -&gt; u [a]","name":"mrgUnionBy","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgUnionBy"},{"display_html":"<a href=\"#v:mrgIntersectBy\">mrgIntersectBy</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; [a] -&gt; [a] -&gt; u [a]","name":"mrgIntersectBy","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgIntersectBy"},{"display_html":"<a href=\"#v:mrgGroupBy\">mrgGroupBy</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> u, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; [a] -&gt; u [[a]]","name":"mrgGroupBy","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgGroupBy"},{"display_html":"<a href=\"#v:mrgInsertBy\">mrgInsertBy</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (a -&gt; a -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; a -&gt; [a] -&gt; m [a]","name":"mrgInsertBy","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgInsertBy"},{"display_html":"<a href=\"#v:mrgMaximumBy\">mrgMaximumBy</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m) =&gt; (a -&gt; a -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t a -&gt; m a","name":"mrgMaximumBy","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgMaximumBy"},{"display_html":"<a href=\"#v:symMaximumBy\">symMaximumBy</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ITEOp.html#t:ITEOp\" title=\"Grisette.Internal.Core.Data.Class.ITEOp\">ITEOp</a> a) =&gt; (a -&gt; a -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t a -&gt; a","name":"symMaximumBy","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:symMaximumBy"},{"display_html":"<a href=\"#v:mrgMinimumBy\">mrgMinimumBy</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Control-Monad-Class-Union.html#t:MonadUnion\" title=\"Grisette.Internal.Core.Control.Monad.Class.Union\">MonadUnion</a> m) =&gt; (a -&gt; a -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t a -&gt; m a","name":"mrgMinimumBy","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:mrgMinimumBy"},{"display_html":"<a href=\"#v:symMinimumBy\">symMinimumBy</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-ITEOp.html#t:ITEOp\" title=\"Grisette.Internal.Core.Data.Class.ITEOp\">ITEOp</a> a) =&gt; (a -&gt; a -&gt; <a href=\"Grisette-Internal-Core-Control-Monad-Union.html#t:Union\" title=\"Grisette.Internal.Core.Control.Monad.Union\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; t a -&gt; a","name":"symMinimumBy","module":"Grisette.Lib.Data.List","link":"Grisette-Lib-Data-List.html#v:symMinimumBy"},{"display_html":"<a href=\"#v:mrgState\">mrgState</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) s a. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (s -&gt; (a, s)) -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> s m a","name":"mrgState","module":"Grisette.Lib.Control.Monad.Trans.State.Strict","link":"Grisette-Lib-Control-Monad-Trans-State-Strict.html#v:mrgState"},{"display_html":"<a href=\"#v:mrgRunStateT\">mrgRunStateT</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> s m a -&gt; s -&gt; m (a, s)","name":"mrgRunStateT","module":"Grisette.Lib.Control.Monad.Trans.State.Strict","link":"Grisette-Lib-Control-Monad-Trans-State-Strict.html#v:mrgRunStateT"},{"display_html":"<a href=\"#v:mrgEvalStateT\">mrgEvalStateT</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> s m a -&gt; s -&gt; m a","name":"mrgEvalStateT","module":"Grisette.Lib.Control.Monad.Trans.State.Strict","link":"Grisette-Lib-Control-Monad-Trans-State-Strict.html#v:mrgEvalStateT"},{"display_html":"<a href=\"#v:mrgExecStateT\">mrgExecStateT</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s) =&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> s m a -&gt; s -&gt; m s","name":"mrgExecStateT","module":"Grisette.Lib.Control.Monad.Trans.State.Strict","link":"Grisette-Lib-Control-Monad-Trans-State-Strict.html#v:mrgExecStateT"},{"display_html":"<a href=\"#v:mrgMapStateT\">mrgMapStateT</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> n, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s) =&gt; (m (a, s) -&gt; n (b, s)) -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> s m a -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> s n b","name":"mrgMapStateT","module":"Grisette.Lib.Control.Monad.Trans.State.Strict","link":"Grisette-Lib-Control-Monad-Trans-State-Strict.html#v:mrgMapStateT"},{"display_html":"<a href=\"#v:mrgWithStateT\">mrgWithStateT</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) s a. (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (s -&gt; s) -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> s m a -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> s m a","name":"mrgWithStateT","module":"Grisette.Lib.Control.Monad.Trans.State.Strict","link":"Grisette-Lib-Control-Monad-Trans-State-Strict.html#v:mrgWithStateT"},{"display_html":"<a href=\"#v:mrgGet\">mrgGet</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) s. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s) =&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> s m s","name":"mrgGet","module":"Grisette.Lib.Control.Monad.Trans.State.Strict","link":"Grisette-Lib-Control-Monad-Trans-State-Strict.html#v:mrgGet"},{"display_html":"<a href=\"#v:mrgPut\">mrgPut</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) s. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s) =&gt; s -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> s m ()","name":"mrgPut","module":"Grisette.Lib.Control.Monad.Trans.State.Strict","link":"Grisette-Lib-Control-Monad-Trans-State-Strict.html#v:mrgPut"},{"display_html":"<a href=\"#v:mrgModify\">mrgModify</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) s. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s) =&gt; (s -&gt; s) -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> s m ()","name":"mrgModify","module":"Grisette.Lib.Control.Monad.Trans.State.Strict","link":"Grisette-Lib-Control-Monad-Trans-State-Strict.html#v:mrgModify"},{"display_html":"<a href=\"#v:mrgModify-39-\">mrgModify'</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) s. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s) =&gt; (s -&gt; s) -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> s m ()","name":"mrgModify'","module":"Grisette.Lib.Control.Monad.Trans.State.Strict","link":"Grisette-Lib-Control-Monad-Trans-State-Strict.html#v:mrgModify-39-"},{"display_html":"<a href=\"#v:mrgGets\">mrgGets</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) s a. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (s -&gt; a) -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> s m a","name":"mrgGets","module":"Grisette.Lib.Control.Monad.Trans.State.Strict","link":"Grisette-Lib-Control-Monad-Trans-State-Strict.html#v:mrgGets"},{"display_html":"<a href=\"#v:mrgState\">mrgState</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) s a. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (s -&gt; (a, s)) -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Lazy.html#t:StateT\" title=\"Control.Monad.State.Lazy\">StateT</a> s m a","name":"mrgState","module":"Grisette.Lib.Control.Monad.Trans.State.Lazy","link":"Grisette-Lib-Control-Monad-Trans-State-Lazy.html#v:mrgState"},{"display_html":"<a href=\"#v:mrgRunStateT\">mrgRunStateT</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Lazy.html#t:StateT\" title=\"Control.Monad.State.Lazy\">StateT</a> s m a -&gt; s -&gt; m (a, s)","name":"mrgRunStateT","module":"Grisette.Lib.Control.Monad.Trans.State.Lazy","link":"Grisette-Lib-Control-Monad-Trans-State-Lazy.html#v:mrgRunStateT"},{"display_html":"<a href=\"#v:mrgEvalStateT\">mrgEvalStateT</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Lazy.html#t:StateT\" title=\"Control.Monad.State.Lazy\">StateT</a> s m a -&gt; s -&gt; m a","name":"mrgEvalStateT","module":"Grisette.Lib.Control.Monad.Trans.State.Lazy","link":"Grisette-Lib-Control-Monad-Trans-State-Lazy.html#v:mrgEvalStateT"},{"display_html":"<a href=\"#v:mrgExecStateT\">mrgExecStateT</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s) =&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Lazy.html#t:StateT\" title=\"Control.Monad.State.Lazy\">StateT</a> s m a -&gt; s -&gt; m s","name":"mrgExecStateT","module":"Grisette.Lib.Control.Monad.Trans.State.Lazy","link":"Grisette-Lib-Control-Monad-Trans-State-Lazy.html#v:mrgExecStateT"},{"display_html":"<a href=\"#v:mrgMapStateT\">mrgMapStateT</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> n, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s) =&gt; (m (a, s) -&gt; n (b, s)) -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Lazy.html#t:StateT\" title=\"Control.Monad.State.Lazy\">StateT</a> s m a -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Lazy.html#t:StateT\" title=\"Control.Monad.State.Lazy\">StateT</a> s n b","name":"mrgMapStateT","module":"Grisette.Lib.Control.Monad.Trans.State.Lazy","link":"Grisette-Lib-Control-Monad-Trans-State-Lazy.html#v:mrgMapStateT"},{"display_html":"<a href=\"#v:mrgWithStateT\">mrgWithStateT</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) s a. (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (s -&gt; s) -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Lazy.html#t:StateT\" title=\"Control.Monad.State.Lazy\">StateT</a> s m a -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Lazy.html#t:StateT\" title=\"Control.Monad.State.Lazy\">StateT</a> s m a","name":"mrgWithStateT","module":"Grisette.Lib.Control.Monad.Trans.State.Lazy","link":"Grisette-Lib-Control-Monad-Trans-State-Lazy.html#v:mrgWithStateT"},{"display_html":"<a href=\"#v:mrgGet\">mrgGet</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) s. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s) =&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Lazy.html#t:StateT\" title=\"Control.Monad.State.Lazy\">StateT</a> s m s","name":"mrgGet","module":"Grisette.Lib.Control.Monad.Trans.State.Lazy","link":"Grisette-Lib-Control-Monad-Trans-State-Lazy.html#v:mrgGet"},{"display_html":"<a href=\"#v:mrgPut\">mrgPut</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) s. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s) =&gt; s -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Lazy.html#t:StateT\" title=\"Control.Monad.State.Lazy\">StateT</a> s m ()","name":"mrgPut","module":"Grisette.Lib.Control.Monad.Trans.State.Lazy","link":"Grisette-Lib-Control-Monad-Trans-State-Lazy.html#v:mrgPut"},{"display_html":"<a href=\"#v:mrgModify\">mrgModify</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) s. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s) =&gt; (s -&gt; s) -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Lazy.html#t:StateT\" title=\"Control.Monad.State.Lazy\">StateT</a> s m ()","name":"mrgModify","module":"Grisette.Lib.Control.Monad.Trans.State.Lazy","link":"Grisette-Lib-Control-Monad-Trans-State-Lazy.html#v:mrgModify"},{"display_html":"<a href=\"#v:mrgModify-39-\">mrgModify'</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) s. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s) =&gt; (s -&gt; s) -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Lazy.html#t:StateT\" title=\"Control.Monad.State.Lazy\">StateT</a> s m ()","name":"mrgModify'","module":"Grisette.Lib.Control.Monad.Trans.State.Lazy","link":"Grisette-Lib-Control-Monad-Trans-State-Lazy.html#v:mrgModify-39-"},{"display_html":"<a href=\"#v:mrgGets\">mrgGets</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) s a. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (s -&gt; a) -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Lazy.html#t:StateT\" title=\"Control.Monad.State.Lazy\">StateT</a> s m a","name":"mrgGets","module":"Grisette.Lib.Control.Monad.Trans.State.Lazy","link":"Grisette-Lib-Control-Monad-Trans-State-Lazy.html#v:mrgGets"},{"display_html":"module <a href=\"Grisette-Lib-Control-Monad-Trans-State-Lazy.html\">Grisette.Lib.Control.Monad.Trans.State.Lazy</a>","name":"","module":"Grisette.Lib.Control.Monad.Trans.State","link":""},{"display_html":"<a href=\"#v:mrgRunContT\">mrgRunContT</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> r) =&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Cont.html#t:ContT\" title=\"Control.Monad.Cont\">ContT</a> r m a -&gt; (a -&gt; m r) -&gt; m r","name":"mrgRunContT","module":"Grisette.Lib.Control.Monad.Trans.Cont","link":"Grisette-Lib-Control-Monad-Trans-Cont.html#v:mrgRunContT"},{"display_html":"<a href=\"#v:mrgEvalContT\">mrgEvalContT</a> :: (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> r, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Cont.html#t:ContT\" title=\"Control.Monad.Cont\">ContT</a> r m r -&gt; m r","name":"mrgEvalContT","module":"Grisette.Lib.Control.Monad.Trans.Cont","link":"Grisette-Lib-Control-Monad-Trans-Cont.html#v:mrgEvalContT"},{"display_html":"<a href=\"#v:mrgResetT\">mrgResetT</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) r r'. (<a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> r, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Cont.html#t:ContT\" title=\"Control.Monad.Cont\">ContT</a> r m r -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Cont.html#t:ContT\" title=\"Control.Monad.Cont\">ContT</a> r' m r","name":"mrgResetT","module":"Grisette.Lib.Control.Monad.Trans.Cont","link":"Grisette-Lib-Control-Monad-Trans-Cont.html#v:mrgResetT"},{"display_html":"<a href=\"#v:mrgGet\">mrgGet</a> :: (<a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Class.html#t:MonadState\" title=\"Control.Monad.State.Class\">MonadState</a> s m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s) =&gt; m s","name":"mrgGet","module":"Grisette.Lib.Control.Monad.State.Class","link":"Grisette-Lib-Control-Monad-State-Class.html#v:mrgGet"},{"display_html":"<a href=\"#v:mrgPut\">mrgPut</a> :: (<a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Class.html#t:MonadState\" title=\"Control.Monad.State.Class\">MonadState</a> s m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m) =&gt; s -&gt; m ()","name":"mrgPut","module":"Grisette.Lib.Control.Monad.State.Class","link":"Grisette-Lib-Control-Monad-State-Class.html#v:mrgPut"},{"display_html":"<a href=\"#v:mrgState\">mrgState</a> :: (<a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Class.html#t:MonadState\" title=\"Control.Monad.State.Class\">MonadState</a> s m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (s -&gt; (a, s)) -&gt; m a","name":"mrgState","module":"Grisette.Lib.Control.Monad.State.Class","link":"Grisette-Lib-Control-Monad-State-Class.html#v:mrgState"},{"display_html":"<a href=\"#v:mrgModify\">mrgModify</a> :: (<a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Class.html#t:MonadState\" title=\"Control.Monad.State.Class\">MonadState</a> s m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s) =&gt; (s -&gt; s) -&gt; m ()","name":"mrgModify","module":"Grisette.Lib.Control.Monad.State.Class","link":"Grisette-Lib-Control-Monad-State-Class.html#v:mrgModify"},{"display_html":"<a href=\"#v:mrgModify-39-\">mrgModify'</a> :: (<a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Class.html#t:MonadState\" title=\"Control.Monad.State.Class\">MonadState</a> s m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s) =&gt; (s -&gt; s) -&gt; m ()","name":"mrgModify'","module":"Grisette.Lib.Control.Monad.State.Class","link":"Grisette-Lib-Control-Monad-State-Class.html#v:mrgModify-39-"},{"display_html":"<a href=\"#v:mrgGets\">mrgGets</a> :: (<a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Class.html#t:MonadState\" title=\"Control.Monad.State.Class\">MonadState</a> s m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> s, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; (s -&gt; a) -&gt; m a","name":"mrgGets","module":"Grisette.Lib.Control.Monad.State.Class","link":"Grisette-Lib-Control-Monad-State-Class.html#v:mrgGets"},{"display_html":"<a href=\"#v:mrgThrowError\">mrgThrowError</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; e -&gt; m a","name":"mrgThrowError","module":"Grisette.Lib.Control.Monad.Except","link":"Grisette-Lib-Control-Monad-Except.html#v:mrgThrowError"},{"display_html":"<a href=\"#v:mrgCatchError\">mrgCatchError</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a) =&gt; m a -&gt; (e -&gt; m a) -&gt; m a","name":"mrgCatchError","module":"Grisette.Lib.Control.Monad.Except","link":"Grisette-Lib-Control-Monad-Except.html#v:mrgCatchError"},{"display_html":"<a href=\"#v:mrgLiftEither\">mrgLiftEither</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e a -&gt; m a","name":"mrgLiftEither","module":"Grisette.Lib.Control.Monad.Except","link":"Grisette-Lib-Control-Monad-Except.html#v:mrgLiftEither"},{"display_html":"<a href=\"#v:mrgTryError\">mrgTryError</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e) =&gt; m a -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e a)","name":"mrgTryError","module":"Grisette.Lib.Control.Monad.Except","link":"Grisette-Lib-Control-Monad-Except.html#v:mrgTryError"},{"display_html":"<a href=\"#v:mrgWithError\">mrgWithError</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e) =&gt; (e -&gt; e) -&gt; m a -&gt; m a","name":"mrgWithError","module":"Grisette.Lib.Control.Monad.Except","link":"Grisette-Lib-Control-Monad-Except.html#v:mrgWithError"},{"display_html":"<a href=\"#v:mrgHandleError\">mrgHandleError</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e) =&gt; (e -&gt; m a) -&gt; m a -&gt; m a","name":"mrgHandleError","module":"Grisette.Lib.Control.Monad.Except","link":"Grisette-Lib-Control-Monad-Except.html#v:mrgHandleError"},{"display_html":"<a href=\"#v:mrgMapError\">mrgMapError</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e' n, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> n, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> b, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e') =&gt; (m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e a) -&gt; n (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e' b)) -&gt; m a -&gt; n b","name":"mrgMapError","module":"Grisette.Lib.Control.Monad.Except","link":"Grisette-Lib-Control-Monad-Except.html#v:mrgMapError"},{"display_html":"<a href=\"#v:mrgModifyError\">mrgModifyError</a> :: (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e' m, <a href=\"Grisette-Internal-Core-Data-Class-TryMerge.html#t:TryMerge\" title=\"Grisette.Internal.Core.Data.Class.TryMerge\">TryMerge</a> m, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> a, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e, <a href=\"Grisette-Internal-Core-Data-Class-Mergeable.html#t:Mergeable\" title=\"Grisette.Internal.Core.Data.Class.Mergeable\">Mergeable</a> e) =&gt; (e -&gt; e') -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> e m a -&gt; m a","name":"mrgModifyError","module":"Grisette.Lib.Control.Monad.Except","link":"Grisette-Lib-Control-Monad-Except.html#v:mrgModifyError"},{"display_html":"module <a href=\"Grisette-Lib-Control-Applicative.html\">Grisette.Lib.Control.Applicative</a>","name":"","module":"Grisette.Lib.Base","link":""},{"display_html":"module <a href=\"Grisette-Lib-Control-Monad.html\">Grisette.Lib.Control.Monad</a>","name":"","module":"Grisette.Lib.Base","link":""},{"display_html":"module <a href=\"Grisette-Lib-Data-Either.html\">Grisette.Lib.Data.Either</a>","name":"","module":"Grisette.Lib.Base","link":""},{"display_html":"module <a href=\"Grisette-Lib-Data-Foldable.html\">Grisette.Lib.Data.Foldable</a>","name":"","module":"Grisette.Lib.Base","link":""},{"display_html":"module <a href=\"Grisette-Lib-Data-Functor.html\">Grisette.Lib.Data.Functor</a>","name":"","module":"Grisette.Lib.Base","link":""},{"display_html":"module <a href=\"Grisette-Lib-Data-Functor-Sum.html\">Grisette.Lib.Data.Functor.Sum</a>","name":"","module":"Grisette.Lib.Base","link":""},{"display_html":"module <a href=\"Grisette-Lib-Data-List.html\">Grisette.Lib.Data.List</a>","name":"","module":"Grisette.Lib.Base","link":""},{"display_html":"module <a href=\"Grisette-Lib-Data-Maybe.html\">Grisette.Lib.Data.Maybe</a>","name":"","module":"Grisette.Lib.Base","link":""},{"display_html":"module <a href=\"Grisette-Lib-Data-Traversable.html\">Grisette.Lib.Data.Traversable</a>","name":"","module":"Grisette.Lib.Base","link":""},{"display_html":"module <a href=\"Grisette-Lib-Data-Tuple.html\">Grisette.Lib.Data.Tuple</a>","name":"","module":"Grisette.Lib.Base","link":""},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SExpr\">SExpr</a><ul class=\"subs\"><li>= <a href=\"#v:Atom\">Atom</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li>| <a href=\"#v:List\">List</a> [<a href=\"Grisette-Core.html#t:SExpr\" title=\"Grisette.Core\">SExpr</a>]</li><li>| <a href=\"#v:NumberAtom\">NumberAtom</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integer\" title=\"Prelude\">Integer</a></li><li>| <a href=\"#v:BoolAtom\">BoolAtom</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li></ul>","name":"SExpr List Atom NumberAtom BoolAtom","module":"Grisette.Core","link":"Grisette-Core.html#t:SExpr"},{"display_html":"<a href=\"#v:showsSExprWithParens\">showsSExprWithParens</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; <a href=\"Grisette-Core.html#t:SExpr\" title=\"Grisette.Core\">SExpr</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:ShowS\" title=\"Prelude\">ShowS</a>","name":"showsSExprWithParens","module":"Grisette.Core","link":"Grisette-Core.html#v:showsSExprWithParens"},{"display_html":"<a href=\"#v:fileLocation\">fileLocation</a> :: <a href=\"https://hackage.haskell.org/package/th-compat-0.1.5/docs/Language-Haskell-TH-Syntax-Compat.html#t:SpliceQ\" title=\"Language.Haskell.TH.Syntax.Compat\">SpliceQ</a> <a href=\"Grisette-Core.html#t:SExpr\" title=\"Grisette.Core\">SExpr</a>","name":"fileLocation","module":"Grisette.Core","link":"Grisette-Core.html#v:fileLocation"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Identifier\">Identifier</a> = <a href=\"#v:Identifier\">Identifier</a> {<ul class=\"subs\"><li><a href=\"#v:baseIdent\">baseIdent</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"Grisette-Core.html#t:SExpr\" title=\"Grisette.Core\">SExpr</a></li></ul>}","name":"Identifier Identifier baseIdent metadata","module":"Grisette.Core","link":"Grisette-Core.html#t:Identifier"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Symbol\">Symbol</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:SimpleSymbol\">SimpleSymbol</a> :: <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a> -&gt; <a href=\"Grisette-Core.html#t:Symbol\" title=\"Grisette.Core\">Symbol</a></li><li><a href=\"#v:IndexedSymbol\">IndexedSymbol</a> :: <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Core.html#t:Symbol\" title=\"Grisette.Core\">Symbol</a></li></ul>","name":"Symbol IndexedSymbol SimpleSymbol","module":"Grisette.Core","link":"Grisette-Core.html#t:Symbol"},{"display_html":"<a href=\"#v:identifier\">identifier</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a>","name":"identifier","module":"Grisette.Core","link":"Grisette-Core.html#v:identifier"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:AsMetadata\">AsMetadata</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:asMetadata\">asMetadata</a> :: a -&gt; <a href=\"Grisette-Core.html#t:SExpr\" title=\"Grisette.Core\">SExpr</a></li><li><a href=\"#v:fromMetadata\">fromMetadata</a> :: <a href=\"Grisette-Core.html#t:SExpr\" title=\"Grisette.Core\">SExpr</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> a</li></ul>","name":"AsMetadata asMetadata fromMetadata","module":"Grisette.Core","link":"Grisette-Core.html#t:AsMetadata"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:Metadata\">Metadata</a> :: <a href=\"Grisette-Core.html#t:AsMetadata\" title=\"Grisette.Core\">AsMetadata</a> a =&gt; a -&gt; <a href=\"Grisette-Core.html#t:SExpr\" title=\"Grisette.Core\">SExpr</a>","name":"Metadata","module":"Grisette.Core","link":"Grisette-Core.html#v:Metadata"},{"display_html":"<a href=\"#v:withMetadata\">withMetadata</a> :: <a href=\"Grisette-Core.html#t:AsMetadata\" title=\"Grisette.Core\">AsMetadata</a> a =&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; a -&gt; <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a>","name":"withMetadata","module":"Grisette.Core","link":"Grisette-Core.html#v:withMetadata"},{"display_html":"<a href=\"#v:mapMetadata\">mapMetadata</a> :: <a href=\"Grisette-Core.html#t:AsMetadata\" title=\"Grisette.Core\">AsMetadata</a> a =&gt; (<a href=\"Grisette-Core.html#t:SExpr\" title=\"Grisette.Core\">SExpr</a> -&gt; a) -&gt; <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a> -&gt; <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a>","name":"mapMetadata","module":"Grisette.Core","link":"Grisette-Core.html#v:mapMetadata"},{"display_html":"<a href=\"#v:withLocation\">withLocation</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; <a href=\"https://hackage.haskell.org/package/th-compat-0.1.5/docs/Language-Haskell-TH-Syntax-Compat.html#t:SpliceQ\" title=\"Language.Haskell.TH.Syntax.Compat\">SpliceQ</a> <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a>","name":"withLocation","module":"Grisette.Core","link":"Grisette-Core.html#v:withLocation"},{"display_html":"<a href=\"#v:uniqueIdentifier\">uniqueIdentifier</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a>","name":"uniqueIdentifier","module":"Grisette.Core","link":"Grisette-Core.html#v:uniqueIdentifier"},{"display_html":"<a href=\"#v:simple\">simple</a> :: <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a> -&gt; <a href=\"Grisette-Core.html#t:Symbol\" title=\"Grisette.Core\">Symbol</a>","name":"simple","module":"Grisette.Core","link":"Grisette-Core.html#v:simple"},{"display_html":"<a href=\"#v:indexed\">indexed</a> :: <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Core.html#t:Symbol\" title=\"Grisette.Core\">Symbol</a>","name":"indexed","module":"Grisette.Core","link":"Grisette-Core.html#v:indexed"},{"display_html":"<a href=\"#v:symbolIdentifier\">symbolIdentifier</a> :: <a href=\"Grisette-Core.html#t:Symbol\" title=\"Grisette.Core\">Symbol</a> -&gt; <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a>","name":"symbolIdentifier","module":"Grisette.Core","link":"Grisette-Core.html#v:symbolIdentifier"},{"display_html":"<a href=\"#v:mapIdentifier\">mapIdentifier</a> :: (<a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a> -&gt; <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a>) -&gt; <a href=\"Grisette-Core.html#t:Symbol\" title=\"Grisette.Core\">Symbol</a> -&gt; <a href=\"Grisette-Core.html#t:Symbol\" title=\"Grisette.Core\">Symbol</a>","name":"mapIdentifier","module":"Grisette.Core","link":"Grisette-Core.html#v:mapIdentifier"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:IsString\" title=\"Data.String\">IsString</a> t =&gt; <a href=\"#t:Solvable\">Solvable</a> c t | t -&gt; c <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:con\">con</a> :: c -&gt; t</li><li><a href=\"#v:conView\">conView</a> :: t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> c</li><li><a href=\"#v:sym\">sym</a> :: <a href=\"Grisette-Core.html#t:Symbol\" title=\"Grisette.Core\">Symbol</a> -&gt; t</li><li><a href=\"#v:ssym\">ssym</a> :: <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a> -&gt; t</li><li><a href=\"#v:isym\">isym</a> :: <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; t</li></ul>","name":"Solvable sym con isym conView ssym $dmisym $dmssym","module":"Grisette.Core","link":"Grisette-Core.html#t:Solvable"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:Con\">Con</a> :: <a href=\"Grisette-Core.html#t:Solvable\" title=\"Grisette.Core\">Solvable</a> c t =&gt; c -&gt; t","name":"Con","module":"Grisette.Core","link":"Grisette-Core.html#v:Con"},{"display_html":"<a href=\"#v:slocsym\">slocsym</a> :: <a href=\"Grisette-Core.html#t:Solvable\" title=\"Grisette.Core\">Solvable</a> c s =&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; <a href=\"https://hackage.haskell.org/package/th-compat-0.1.5/docs/Language-Haskell-TH-Syntax-Compat.html#t:SpliceQ\" title=\"Language.Haskell.TH.Syntax.Compat\">SpliceQ</a> s","name":"slocsym","module":"Grisette.Core","link":"Grisette-Core.html#v:slocsym"},{"display_html":"<a href=\"#v:ilocsym\">ilocsym</a> :: <a href=\"Grisette-Core.html#t:Solvable\" title=\"Grisette.Core\">Solvable</a> c s =&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/th-compat-0.1.5/docs/Language-Haskell-TH-Syntax-Compat.html#t:SpliceQ\" title=\"Language.Haskell.TH.Syntax.Compat\">SpliceQ</a> s","name":"ilocsym","module":"Grisette.Core","link":"Grisette-Core.html#v:ilocsym"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:LogicalOp\">LogicalOp</a> b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:true\">true</a> :: b</li><li><a href=\"#v:false\">false</a> :: b</li><li><a href=\"#v:.-124--124-\">(.||)</a> :: b -&gt; b -&gt; b</li><li><a href=\"#v:.-38--38-\">(.&amp;&amp;)</a> :: b -&gt; b -&gt; b</li><li><a href=\"#v:symNot\">symNot</a> :: b -&gt; b</li><li><a href=\"#v:symXor\">symXor</a> :: b -&gt; b -&gt; b</li><li><a href=\"#v:symImplies\">symImplies</a> :: b -&gt; b -&gt; b</li></ul>","name":"LogicalOp .|| .&& symNot false true symImplies symXor $dm.|| $dm.&& $dmfalse $dmtrue $dmsymImplies $dmsymXor","module":"Grisette.Core","link":"Grisette-Core.html#t:LogicalOp"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ITEOp\">ITEOp</a> v <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:symIte\">symIte</a> :: <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; v -&gt; v -&gt; v</li></ul>","name":"ITEOp symIte","module":"Grisette.Core","link":"Grisette-Core.html#t:ITEOp"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:SymEq\">SymEq</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:.-61--61-\">(.==)</a> :: a -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:.-47--61-\">(./=)</a> :: a -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symDistinct\">symDistinct</a> :: [a] -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li></ul>","name":"SymEq .== ./= symDistinct $dm.== $dm./= $dmsymDistinct","module":"Grisette.Core","link":"Grisette-Core.html#t:SymEq"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Core.html#t:SymEq\" title=\"Grisette.Core\">SymEq</a> a =&gt; <a href=\"Grisette-Core.html#t:SymEq\" title=\"Grisette.Core\">SymEq</a> (f a)) =&gt; <a href=\"#t:SymEq1\">SymEq1</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftSymEq\">liftSymEq</a> :: (a -&gt; b -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; f a -&gt; f b -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li></ul>","name":"SymEq1 liftSymEq","module":"Grisette.Core","link":"Grisette-Core.html#t:SymEq1"},{"display_html":"<a href=\"#v:symEq1\">symEq1</a> :: (<a href=\"Grisette-Core.html#t:SymEq\" title=\"Grisette.Core\">SymEq</a> a, <a href=\"Grisette-Core.html#t:SymEq1\" title=\"Grisette.Core\">SymEq1</a> f) =&gt; f a -&gt; f a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symEq1","module":"Grisette.Core","link":"Grisette-Core.html#v:symEq1"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Core.html#t:SymEq\" title=\"Grisette.Core\">SymEq</a> a =&gt; <a href=\"Grisette-Core.html#t:SymEq1\" title=\"Grisette.Core\">SymEq1</a> (f a)) =&gt; <a href=\"#t:SymEq2\">SymEq2</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftSymEq2\">liftSymEq2</a> :: (a -&gt; b -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; (c -&gt; d -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; f a c -&gt; f b d -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li></ul>","name":"SymEq2 liftSymEq2","module":"Grisette.Core","link":"Grisette-Core.html#t:SymEq2"},{"display_html":"<a href=\"#v:symEq2\">symEq2</a> :: (<a href=\"Grisette-Core.html#t:SymEq\" title=\"Grisette.Core\">SymEq</a> a, <a href=\"Grisette-Core.html#t:SymEq\" title=\"Grisette.Core\">SymEq</a> b, <a href=\"Grisette-Core.html#t:SymEq2\" title=\"Grisette.Core\">SymEq2</a> f) =&gt; f a b -&gt; f a b -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symEq2","module":"Grisette.Core","link":"Grisette-Core.html#v:symEq2"},{"display_html":"<a href=\"#v:distinct\">distinct</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a =&gt; [a] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"distinct","module":"Grisette.Core","link":"Grisette-Core.html#v:distinct"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Core.html#t:SymEq\" title=\"Grisette.Core\">SymEq</a> a =&gt; <a href=\"#t:SymOrd\">SymOrd</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:.-60-\">(.&lt;)</a> :: a -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:.-60--61-\">(.&lt;=)</a> :: a -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:.-62-\">(.&gt;)</a> :: a -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:.-62--61-\">(.&gt;=)</a> :: a -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symCompare\">symCompare</a> :: a -&gt; a -&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a></li></ul>","name":"SymOrd .< .<= .> .>= symCompare $dm.< $dm.<= $dm.> $dm.>= $dmsymCompare","module":"Grisette.Core","link":"Grisette-Core.html#t:SymOrd"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Core.html#t:SymEq1\" title=\"Grisette.Core\">SymEq1</a> f, <span class=\"keyword\">forall</span> a. <a href=\"Grisette-Core.html#t:SymOrd\" title=\"Grisette.Core\">SymOrd</a> a =&gt; <a href=\"Grisette-Core.html#t:SymOrd\" title=\"Grisette.Core\">SymOrd</a> (f a)) =&gt; <a href=\"#t:SymOrd1\">SymOrd1</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftSymCompare\">liftSymCompare</a> :: (a -&gt; b -&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; f a -&gt; f b -&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a></li></ul>","name":"SymOrd1 liftSymCompare","module":"Grisette.Core","link":"Grisette-Core.html#t:SymOrd1"},{"display_html":"<a href=\"#v:symCompare1\">symCompare1</a> :: (<a href=\"Grisette-Core.html#t:SymOrd1\" title=\"Grisette.Core\">SymOrd1</a> f, <a href=\"Grisette-Core.html#t:SymOrd\" title=\"Grisette.Core\">SymOrd</a> a) =&gt; f a -&gt; f a -&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>","name":"symCompare1","module":"Grisette.Core","link":"Grisette-Core.html#v:symCompare1"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Core.html#t:SymEq2\" title=\"Grisette.Core\">SymEq2</a> f, <span class=\"keyword\">forall</span> a. <a href=\"Grisette-Core.html#t:SymOrd\" title=\"Grisette.Core\">SymOrd</a> a =&gt; <a href=\"Grisette-Core.html#t:SymOrd1\" title=\"Grisette.Core\">SymOrd1</a> (f a)) =&gt; <a href=\"#t:SymOrd2\">SymOrd2</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftSymCompare2\">liftSymCompare2</a> :: (a -&gt; b -&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; (c -&gt; d -&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; f a c -&gt; f b d -&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a></li></ul>","name":"SymOrd2 liftSymCompare2","module":"Grisette.Core","link":"Grisette-Core.html#t:SymOrd2"},{"display_html":"<a href=\"#v:symCompare2\">symCompare2</a> :: (<a href=\"Grisette-Core.html#t:SymOrd2\" title=\"Grisette.Core\">SymOrd2</a> f, <a href=\"Grisette-Core.html#t:SymOrd\" title=\"Grisette.Core\">SymOrd</a> a, <a href=\"Grisette-Core.html#t:SymOrd\" title=\"Grisette.Core\">SymOrd</a> b) =&gt; f a b -&gt; f a b -&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>","name":"symCompare2","module":"Grisette.Core","link":"Grisette-Core.html#v:symCompare2"},{"display_html":"<a href=\"#v:symMax\">symMax</a> :: (<a href=\"Grisette-Core.html#t:SymOrd\" title=\"Grisette.Core\">SymOrd</a> a, <a href=\"Grisette-Core.html#t:ITEOp\" title=\"Grisette.Core\">ITEOp</a> a) =&gt; a -&gt; a -&gt; a","name":"symMax","module":"Grisette.Core","link":"Grisette-Core.html#v:symMax"},{"display_html":"<a href=\"#v:symMin\">symMin</a> :: (<a href=\"Grisette-Core.html#t:SymOrd\" title=\"Grisette.Core\">SymOrd</a> a, <a href=\"Grisette-Core.html#t:ITEOp\" title=\"Grisette.Core\">ITEOp</a> a) =&gt; a -&gt; a -&gt; a","name":"symMin","module":"Grisette.Core","link":"Grisette-Core.html#v:symMin"},{"display_html":"<a href=\"#v:mrgMax\">mrgMax</a> :: (<a href=\"Grisette-Core.html#t:SymOrd\" title=\"Grisette.Core\">SymOrd</a> a, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a, <a href=\"Grisette-Core.html#t:SymBranching\" title=\"Grisette.Core\">SymBranching</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m) =&gt; a -&gt; a -&gt; m a","name":"mrgMax","module":"Grisette.Core","link":"Grisette-Core.html#v:mrgMax"},{"display_html":"<a href=\"#v:mrgMin\">mrgMin</a> :: (<a href=\"Grisette-Core.html#t:SymOrd\" title=\"Grisette.Core\">SymOrd</a> a, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a, <a href=\"Grisette-Core.html#t:SymBranching\" title=\"Grisette.Core\">SymBranching</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m) =&gt; a -&gt; a -&gt; m a","name":"mrgMin","module":"Grisette.Core","link":"Grisette-Core.html#v:mrgMin"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:BV\">BV</a> bv <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:bvConcat\">bvConcat</a> :: bv -&gt; bv -&gt; bv</li><li><a href=\"#v:bvZext\">bvZext</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; bv -&gt; bv</li><li><a href=\"#v:bvSext\">bvSext</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; bv -&gt; bv</li><li><a href=\"#v:bvExt\">bvExt</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; bv -&gt; bv</li><li><a href=\"#v:bvSelect\">bvSelect</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; bv -&gt; bv</li><li><a href=\"#v:bv\">bv</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; bv</li></ul>","name":"BV bv bvConcat bvSelect bvExt bvSext bvZext","module":"Grisette.Core","link":"Grisette-Core.html#t:BV"},{"display_html":"<a href=\"#v:bvExtract\">bvExtract</a> :: <a href=\"Grisette-Core.html#t:BV\" title=\"Grisette.Core\">BV</a> bv =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; bv -&gt; bv","name":"bvExtract","module":"Grisette.Core","link":"Grisette-Core.html#v:bvExtract"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:SizedBV\">SizedBV</a> (bv :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:sizedBVConcat\">sizedBVConcat</a> :: <span class=\"keyword\">forall</span> (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r) =&gt; bv l -&gt; bv r -&gt; bv (l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> r)</li><li><a href=\"#v:sizedBVZext\">sizedBVZext</a> :: <span class=\"keyword\">forall</span> (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) proxy. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r) =&gt; proxy r -&gt; bv l -&gt; bv r</li><li><a href=\"#v:sizedBVSext\">sizedBVSext</a> :: <span class=\"keyword\">forall</span> (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) proxy. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r) =&gt; proxy r -&gt; bv l -&gt; bv r</li><li><a href=\"#v:sizedBVExt\">sizedBVExt</a> :: <span class=\"keyword\">forall</span> (l :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (r :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) proxy. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> l, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> r, l <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> r) =&gt; proxy r -&gt; bv l -&gt; bv r</li><li><a href=\"#v:sizedBVSelect\">sizedBVSelect</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (ix :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (w :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) p q. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> ix, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> w, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> w, (ix <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> w) <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; p ix -&gt; q w -&gt; bv n -&gt; bv w</li><li><a href=\"#v:sizedBVFromIntegral\">sizedBVFromIntegral</a> :: <span class=\"keyword\">forall</span> a (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; a -&gt; bv n</li></ul>","name":"SizedBV sizedBVConcat sizedBVExt sizedBVSelect sizedBVSext sizedBVZext sizedBVFromIntegral $dmsizedBVFromIntegral","module":"Grisette.Core","link":"Grisette-Core.html#t:SizedBV"},{"display_html":"<a href=\"#v:sizedBVExtract\">sizedBVExtract</a> :: <span class=\"keyword\">forall</span> p (i :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) q (j :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) bv. (<a href=\"Grisette-Core.html#t:SizedBV\" title=\"Grisette.Core\">SizedBV</a> bv, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> i, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> j, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n, (i <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> 1) <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n, j <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> i) =&gt; p i -&gt; q j -&gt; bv n -&gt; bv ((i <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-45-\" title=\"GHC.TypeLits\">-</a> j) <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> 1)","name":"sizedBVExtract","module":"Grisette.Core","link":"Grisette-Core.html#v:sizedBVExtract"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:Bits\" title=\"Data.Bits\">Bits</a> a =&gt; <a href=\"#t:SymShift\">SymShift</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:symShift\">symShift</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:symShiftNegated\">symShiftNegated</a> :: a -&gt; a -&gt; a</li></ul>","name":"SymShift symShift symShiftNegated","module":"Grisette.Core","link":"Grisette-Core.html#t:SymShift"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Core.html#t:TryMerge\" title=\"Grisette.Core\">TryMerge</a> m, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a) =&gt; <a href=\"#t:SafeSymShift\">SafeSymShift</a> e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:safeSymShiftL\">safeSymShiftL</a> :: a -&gt; a -&gt; m a</li><li><a href=\"#v:safeSymShiftR\">safeSymShiftR</a> :: a -&gt; a -&gt; m a</li><li><a href=\"#v:safeSymStrictShiftL\">safeSymStrictShiftL</a> :: a -&gt; a -&gt; m a</li><li><a href=\"#v:safeSymStrictShiftR\">safeSymStrictShiftR</a> :: a -&gt; a -&gt; m a</li></ul>","name":"SafeSymShift safeSymShiftL safeSymShiftR safeSymStrictShiftL safeSymStrictShiftR","module":"Grisette.Core","link":"Grisette-Core.html#t:SafeSymShift"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:Bits\" title=\"Data.Bits\">Bits</a> a =&gt; <a href=\"#t:SymRotate\">SymRotate</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:symRotate\">symRotate</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:symRotateNegated\">symRotateNegated</a> :: a -&gt; a -&gt; a</li></ul>","name":"SymRotate symRotate symRotateNegated","module":"Grisette.Core","link":"Grisette-Core.html#t:SymRotate"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Core.html#t:TryMerge\" title=\"Grisette.Core\">TryMerge</a> m, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a) =&gt; <a href=\"#t:SafeSymRotate\">SafeSymRotate</a> e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:safeSymRotateL\">safeSymRotateL</a> :: a -&gt; a -&gt; m a</li><li><a href=\"#v:safeSymRotateR\">safeSymRotateR</a> :: a -&gt; a -&gt; m a</li></ul>","name":"SafeSymRotate safeSymRotateL safeSymRotateR","module":"Grisette.Core","link":"Grisette-Core.html#t:SafeSymRotate"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:SignConversion\">SignConversion</a> ubv sbv | ubv -&gt; sbv, sbv -&gt; ubv <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toSigned\">toSigned</a> :: ubv -&gt; sbv</li><li><a href=\"#v:toUnsigned\">toUnsigned</a> :: sbv -&gt; ubv</li></ul>","name":"SignConversion toSigned toUnsigned","module":"Grisette.Core","link":"Grisette-Core.html#t:SignConversion"},{"display_html":"<a href=\"#v:lsb\">lsb</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:Bits\" title=\"Data.Bits\">Bits</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"lsb","module":"Grisette.Core","link":"Grisette-Core.html#v:lsb"},{"display_html":"<a href=\"#v:msb\">msb</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:FiniteBits\" title=\"Data.Bits\">FiniteBits</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"msb","module":"Grisette.Core","link":"Grisette-Core.html#v:msb"},{"display_html":"<a href=\"#v:setBitTo\">setBitTo</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:Bits\" title=\"Data.Bits\">Bits</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; a","name":"setBitTo","module":"Grisette.Core","link":"Grisette-Core.html#v:setBitTo"},{"display_html":"<a href=\"#v:bitBlast\">bitBlast</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:FiniteBits\" title=\"Data.Bits\">FiniteBits</a> a =&gt; a -&gt; [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>]","name":"bitBlast","module":"Grisette.Core","link":"Grisette-Core.html#v:bitBlast"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:FiniteBits\" title=\"Data.Bits\">FiniteBits</a> a =&gt; <a href=\"#t:FromBits\">FromBits</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fromBits\">fromBits</a> :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>] -&gt; a</li></ul>","name":"FromBits fromBits $dmfromBits","module":"Grisette.Core","link":"Grisette-Core.html#t:FromBits"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bits.html#t:FiniteBits\" title=\"Data.Bits\">FiniteBits</a> a, <a href=\"Grisette-Core.html#t:ITEOp\" title=\"Grisette.Core\">ITEOp</a> a) =&gt; <a href=\"#t:SymFiniteBits\">SymFiniteBits</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:symTestBit\">symTestBit</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symSetBitTo\">symSetBitTo</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; a</li><li><a href=\"#v:symFromBits\">symFromBits</a> :: [<a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>] -&gt; a</li></ul>","name":"SymFiniteBits symTestBit symSetBitTo symFromBits $dmsymSetBitTo","module":"Grisette.Core","link":"Grisette-Core.html#t:SymFiniteBits"},{"display_html":"<a href=\"#v:symBitBlast\">symBitBlast</a> :: <a href=\"Grisette-Core.html#t:SymFiniteBits\" title=\"Grisette.Core\">SymFiniteBits</a> a =&gt; a -&gt; [<a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>]","name":"symBitBlast","module":"Grisette.Core","link":"Grisette-Core.html#v:symBitBlast"},{"display_html":"<a href=\"#v:symLsb\">symLsb</a> :: <a href=\"Grisette-Core.html#t:SymFiniteBits\" title=\"Grisette.Core\">SymFiniteBits</a> a =&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symLsb","module":"Grisette.Core","link":"Grisette-Core.html#v:symLsb"},{"display_html":"<a href=\"#v:symMsb\">symMsb</a> :: <a href=\"Grisette-Core.html#t:SymFiniteBits\" title=\"Grisette.Core\">SymFiniteBits</a> a =&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"symMsb","module":"Grisette.Core","link":"Grisette-Core.html#v:symMsb"},{"display_html":"<a href=\"#v:symPopCount\">symPopCount</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a, <a href=\"Grisette-Core.html#t:ITEOp\" title=\"Grisette.Core\">ITEOp</a> a, <a href=\"Grisette-Core.html#t:SymFiniteBits\" title=\"Grisette.Core\">SymFiniteBits</a> a) =&gt; a -&gt; a","name":"symPopCount","module":"Grisette.Core","link":"Grisette-Core.html#v:symPopCount"},{"display_html":"<a href=\"#v:symCountLeadingZeros\">symCountLeadingZeros</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a, <a href=\"Grisette-Core.html#t:ITEOp\" title=\"Grisette.Core\">ITEOp</a> a, <a href=\"Grisette-Core.html#t:SymFiniteBits\" title=\"Grisette.Core\">SymFiniteBits</a> a) =&gt; a -&gt; a","name":"symCountLeadingZeros","module":"Grisette.Core","link":"Grisette-Core.html#v:symCountLeadingZeros"},{"display_html":"<a href=\"#v:symCountTrailingZeros\">symCountTrailingZeros</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a, <a href=\"Grisette-Core.html#t:ITEOp\" title=\"Grisette.Core\">ITEOp</a> a, <a href=\"Grisette-Core.html#t:SymFiniteBits\" title=\"Grisette.Core\">SymFiniteBits</a> a) =&gt; a -&gt; a","name":"symCountTrailingZeros","module":"Grisette.Core","link":"Grisette-Core.html#v:symCountTrailingZeros"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:DivOr\">DivOr</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:divOr\">divOr</a> :: a -&gt; a -&gt; a -&gt; a</li><li><a href=\"#v:modOr\">modOr</a> :: a -&gt; a -&gt; a -&gt; a</li><li><a href=\"#v:divModOr\">divModOr</a> :: (a, a) -&gt; a -&gt; a -&gt; (a, a)</li><li><a href=\"#v:quotOr\">quotOr</a> :: a -&gt; a -&gt; a -&gt; a</li><li><a href=\"#v:remOr\">remOr</a> :: a -&gt; a -&gt; a -&gt; a</li><li><a href=\"#v:quotRemOr\">quotRemOr</a> :: (a, a) -&gt; a -&gt; a -&gt; (a, a)</li></ul>","name":"DivOr divModOr divOr modOr quotOr quotRemOr remOr","module":"Grisette.Core","link":"Grisette-Core.html#t:DivOr"},{"display_html":"<a href=\"#v:divOrZero\">divOrZero</a> :: (<a href=\"Grisette-Core.html#t:DivOr\" title=\"Grisette.Core\">DivOr</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; a -&gt; a -&gt; a","name":"divOrZero","module":"Grisette.Core","link":"Grisette-Core.html#v:divOrZero"},{"display_html":"<a href=\"#v:modOrDividend\">modOrDividend</a> :: (<a href=\"Grisette-Core.html#t:DivOr\" title=\"Grisette.Core\">DivOr</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; a -&gt; a -&gt; a","name":"modOrDividend","module":"Grisette.Core","link":"Grisette-Core.html#v:modOrDividend"},{"display_html":"<a href=\"#v:quotOrZero\">quotOrZero</a> :: (<a href=\"Grisette-Core.html#t:DivOr\" title=\"Grisette.Core\">DivOr</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; a -&gt; a -&gt; a","name":"quotOrZero","module":"Grisette.Core","link":"Grisette-Core.html#v:quotOrZero"},{"display_html":"<a href=\"#v:remOrDividend\">remOrDividend</a> :: (<a href=\"Grisette-Core.html#t:DivOr\" title=\"Grisette.Core\">DivOr</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; a -&gt; a -&gt; a","name":"remOrDividend","module":"Grisette.Core","link":"Grisette-Core.html#v:remOrDividend"},{"display_html":"<a href=\"#v:divModOrZeroDividend\">divModOrZeroDividend</a> :: (<a href=\"Grisette-Core.html#t:DivOr\" title=\"Grisette.Core\">DivOr</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; a -&gt; a -&gt; (a, a)","name":"divModOrZeroDividend","module":"Grisette.Core","link":"Grisette-Core.html#v:divModOrZeroDividend"},{"display_html":"<a href=\"#v:quotRemOrZeroDividend\">quotRemOrZeroDividend</a> :: (<a href=\"Grisette-Core.html#t:DivOr\" title=\"Grisette.Core\">DivOr</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; a -&gt; a -&gt; (a, a)","name":"quotRemOrZeroDividend","module":"Grisette.Core","link":"Grisette-Core.html#v:quotRemOrZeroDividend"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Core.html#t:TryMerge\" title=\"Grisette.Core\">TryMerge</a> m, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a, <a href=\"Grisette-Core.html#t:DivOr\" title=\"Grisette.Core\">DivOr</a> a) =&gt; <a href=\"#t:SafeDiv\">SafeDiv</a> e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:safeDiv\">safeDiv</a> :: a -&gt; a -&gt; m a</li><li><a href=\"#v:safeMod\">safeMod</a> :: a -&gt; a -&gt; m a</li><li><a href=\"#v:safeDivMod\">safeDivMod</a> :: a -&gt; a -&gt; m (a, a)</li><li><a href=\"#v:safeQuot\">safeQuot</a> :: a -&gt; a -&gt; m a</li><li><a href=\"#v:safeRem\">safeRem</a> :: a -&gt; a -&gt; m a</li><li><a href=\"#v:safeQuotRem\">safeQuotRem</a> :: a -&gt; a -&gt; m (a, a)</li></ul>","name":"SafeDiv safeDiv safeDivMod safeMod safeQuot safeQuotRem safeRem $dmsafeDiv $dmsafeDivMod $dmsafeMod $dmsafeQuot $dmsafeQuotRem $dmsafeRem","module":"Grisette.Core","link":"Grisette-Core.html#t:SafeDiv"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Core.html#t:TryMerge\" title=\"Grisette.Core\">TryMerge</a> m, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a) =&gt; <a href=\"#t:SafeLinearArith\">SafeLinearArith</a> e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:safeAdd\">safeAdd</a> :: a -&gt; a -&gt; m a</li><li><a href=\"#v:safeNeg\">safeNeg</a> :: a -&gt; m a</li><li><a href=\"#v:safeSub\">safeSub</a> :: a -&gt; a -&gt; m a</li></ul>","name":"SafeLinearArith safeAdd safeNeg safeSub","module":"Grisette.Core","link":"Grisette-Core.html#t:SafeLinearArith"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:FdivOr\">FdivOr</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fdivOr\">fdivOr</a> :: a -&gt; a -&gt; a -&gt; a</li><li><a href=\"#v:recipOr\">recipOr</a> :: a -&gt; a -&gt; a</li></ul>","name":"FdivOr fdivOr recipOr","module":"Grisette.Core","link":"Grisette-Core.html#t:FdivOr"},{"display_html":"<a href=\"#v:fdivOrZero\">fdivOrZero</a> :: (<a href=\"Grisette-Core.html#t:FdivOr\" title=\"Grisette.Core\">FdivOr</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; a -&gt; a -&gt; a","name":"fdivOrZero","module":"Grisette.Core","link":"Grisette-Core.html#v:fdivOrZero"},{"display_html":"<a href=\"#v:recipOrZero\">recipOrZero</a> :: (<a href=\"Grisette-Core.html#t:FdivOr\" title=\"Grisette.Core\">FdivOr</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; a -&gt; a","name":"recipOrZero","module":"Grisette.Core","link":"Grisette-Core.html#v:recipOrZero"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Core.html#t:TryMerge\" title=\"Grisette.Core\">TryMerge</a> m, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a) =&gt; <a href=\"#t:SafeFdiv\">SafeFdiv</a> e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:safeFdiv\">safeFdiv</a> :: a -&gt; a -&gt; m a</li><li><a href=\"#v:safeRecip\">safeRecip</a> :: a -&gt; m a</li></ul>","name":"SafeFdiv safeFdiv safeRecip $dmsafeRecip","module":"Grisette.Core","link":"Grisette-Core.html#t:SafeFdiv"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:LogBaseOr\">LogBaseOr</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:logBaseOr\">logBaseOr</a> :: a -&gt; a -&gt; a -&gt; a</li></ul>","name":"LogBaseOr logBaseOr","module":"Grisette.Core","link":"Grisette-Core.html#t:LogBaseOr"},{"display_html":"<a href=\"#v:logBaseOrZero\">logBaseOrZero</a> :: (<a href=\"Grisette-Core.html#t:LogBaseOr\" title=\"Grisette.Core\">LogBaseOr</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; a -&gt; a -&gt; a","name":"logBaseOrZero","module":"Grisette.Core","link":"Grisette-Core.html#v:logBaseOrZero"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Core.html#t:TryMerge\" title=\"Grisette.Core\">TryMerge</a> m, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a) =&gt; <a href=\"#t:SafeLogBase\">SafeLogBase</a> e a (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:safeLogBase\">safeLogBase</a> :: a -&gt; a -&gt; m a</li></ul>","name":"SafeLogBase safeLogBase $dmsafeLogBase","module":"Grisette.Core","link":"Grisette-Core.html#t:SafeLogBase"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Function\">Function</a> f arg ret | f -&gt; arg ret <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:-35-\">(#)</a> :: f -&gt; arg -&gt; ret</li></ul>","name":"Function #","module":"Grisette.Core","link":"Grisette-Core.html#t:Function"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Apply\">Apply</a> uf <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:FunType\">FunType</a> uf</li><li><a href=\"#v:apply\">apply</a> :: uf -&gt; <a href=\"Grisette-Core.html#t:FunType\" title=\"Grisette.Core\">FunType</a> uf</li></ul>","name":"Apply apply FunType","module":"Grisette.Core","link":"Grisette-Core.html#t:Apply"},{"display_html":"<a href=\"#v:fpIsNaN\">fpIsNaN</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsNaN","module":"Grisette.Core","link":"Grisette-Core.html#v:fpIsNaN"},{"display_html":"<a href=\"#v:fpIsPositiveZero\">fpIsPositiveZero</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsPositiveZero","module":"Grisette.Core","link":"Grisette-Core.html#v:fpIsPositiveZero"},{"display_html":"<a href=\"#v:fpIsNegativeZero\">fpIsNegativeZero</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsNegativeZero","module":"Grisette.Core","link":"Grisette-Core.html#v:fpIsNegativeZero"},{"display_html":"<a href=\"#v:fpIsPositiveInfinite\">fpIsPositiveInfinite</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsPositiveInfinite","module":"Grisette.Core","link":"Grisette-Core.html#v:fpIsPositiveInfinite"},{"display_html":"<a href=\"#v:fpIsNegativeInfinite\">fpIsNegativeInfinite</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsNegativeInfinite","module":"Grisette.Core","link":"Grisette-Core.html#v:fpIsNegativeInfinite"},{"display_html":"<a href=\"#v:fpIsPositive\">fpIsPositive</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsPositive","module":"Grisette.Core","link":"Grisette-Core.html#v:fpIsPositive"},{"display_html":"<a href=\"#v:fpIsNegative\">fpIsNegative</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsNegative","module":"Grisette.Core","link":"Grisette-Core.html#v:fpIsNegative"},{"display_html":"<a href=\"#v:fpIsInfinite\">fpIsInfinite</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsInfinite","module":"Grisette.Core","link":"Grisette-Core.html#v:fpIsInfinite"},{"display_html":"<a href=\"#v:fpIsZero\">fpIsZero</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsZero","module":"Grisette.Core","link":"Grisette-Core.html#v:fpIsZero"},{"display_html":"<a href=\"#v:fpIsNormal\">fpIsNormal</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsNormal","module":"Grisette.Core","link":"Grisette-Core.html#v:fpIsNormal"},{"display_html":"<a href=\"#v:fpIsSubnormal\">fpIsSubnormal</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsSubnormal","module":"Grisette.Core","link":"Grisette-Core.html#v:fpIsSubnormal"},{"display_html":"<a href=\"#v:fpIsPoint\">fpIsPoint</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:RealFloat\" title=\"Prelude\">RealFloat</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"fpIsPoint","module":"Grisette.Core","link":"Grisette-Core.html#v:fpIsPoint"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:SymIEEEFPTraits\">SymIEEEFPTraits</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:symFpIsNaN\">symFpIsNaN</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsPositive\">symFpIsPositive</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsNegative\">symFpIsNegative</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsPositiveInfinite\">symFpIsPositiveInfinite</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsNegativeInfinite\">symFpIsNegativeInfinite</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsInfinite\">symFpIsInfinite</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsPositiveZero\">symFpIsPositiveZero</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsNegativeZero\">symFpIsNegativeZero</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsZero\">symFpIsZero</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsNormal\">symFpIsNormal</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsSubnormal\">symFpIsSubnormal</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li><a href=\"#v:symFpIsPoint\">symFpIsPoint</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li></ul>","name":"SymIEEEFPTraits symFpIsNaN symFpIsNegativeInfinite symFpIsPositiveInfinite symFpIsInfinite symFpIsNegative symFpIsNegativeZero symFpIsNormal symFpIsPoint symFpIsPositive symFpIsPositiveZero symFpIsSubnormal symFpIsZero","module":"Grisette.Core","link":"Grisette-Core.html#t:SymIEEEFPTraits"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IEEEFPConstants\">IEEEFPConstants</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fpPositiveInfinite\">fpPositiveInfinite</a> :: a</li><li><a href=\"#v:fpNegativeInfinite\">fpNegativeInfinite</a> :: a</li><li><a href=\"#v:fpNaN\">fpNaN</a> :: a</li><li><a href=\"#v:fpNegativeZero\">fpNegativeZero</a> :: a</li><li><a href=\"#v:fpPositiveZero\">fpPositiveZero</a> :: a</li><li><a href=\"#v:fpMinNormalized\">fpMinNormalized</a> :: a</li><li><a href=\"#v:fpMinSubnormal\">fpMinSubnormal</a> :: a</li><li><a href=\"#v:fpMaxNormalized\">fpMaxNormalized</a> :: a</li><li><a href=\"#v:fpMaxSubnormal\">fpMaxSubnormal</a> :: a</li></ul>","name":"IEEEFPConstants fpNaN fpMaxNormalized fpMaxSubnormal fpMinNormalized fpMinSubnormal fpNegativeInfinite fpNegativeZero fpPositiveInfinite fpPositiveZero","module":"Grisette.Core","link":"Grisette-Core.html#t:IEEEFPConstants"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IEEEFPRoundingMode\">IEEEFPRoundingMode</a> mode <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:rne\">rne</a> :: mode</li><li><a href=\"#v:rna\">rna</a> :: mode</li><li><a href=\"#v:rtp\">rtp</a> :: mode</li><li><a href=\"#v:rtn\">rtn</a> :: mode</li><li><a href=\"#v:rtz\">rtz</a> :: mode</li></ul>","name":"IEEEFPRoundingMode rna rne rtn rtp rtz","module":"Grisette.Core","link":"Grisette-Core.html#t:IEEEFPRoundingMode"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IEEEFPOp\">IEEEFPOp</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fpAbs\">fpAbs</a> :: a -&gt; a</li><li><a href=\"#v:fpNeg\">fpNeg</a> :: a -&gt; a</li><li><a href=\"#v:fpRem\">fpRem</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:fpMinimum\">fpMinimum</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:fpMinimumNumber\">fpMinimumNumber</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:fpMaximum\">fpMaximum</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:fpMaximumNumber\">fpMaximumNumber</a> :: a -&gt; a -&gt; a</li></ul>","name":"IEEEFPOp fpAbs fpNeg fpRem fpMaximum fpMaximumNumber fpMinimum fpMinimumNumber","module":"Grisette.Core","link":"Grisette-Core.html#t:IEEEFPOp"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Core.html#t:IEEEFPRoundingMode\" title=\"Grisette.Core\">IEEEFPRoundingMode</a> mode =&gt; <a href=\"#t:IEEEFPRoundingOp\">IEEEFPRoundingOp</a> a mode | a -&gt; mode <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fpAdd\">fpAdd</a> :: mode -&gt; a -&gt; a -&gt; a</li><li><a href=\"#v:fpSub\">fpSub</a> :: mode -&gt; a -&gt; a -&gt; a</li><li><a href=\"#v:fpMul\">fpMul</a> :: mode -&gt; a -&gt; a -&gt; a</li><li><a href=\"#v:fpDiv\">fpDiv</a> :: mode -&gt; a -&gt; a -&gt; a</li><li><a href=\"#v:fpFMA\">fpFMA</a> :: mode -&gt; a -&gt; a -&gt; a -&gt; a</li><li><a href=\"#v:fpSqrt\">fpSqrt</a> :: mode -&gt; a -&gt; a</li><li><a href=\"#v:fpRoundToIntegral\">fpRoundToIntegral</a> :: mode -&gt; a -&gt; a</li></ul>","name":"IEEEFPRoundingOp fpAdd fpSub fpMul fpDiv fpFMA fpSqrt fpRoundToIntegral","module":"Grisette.Core","link":"Grisette-Core.html#t:IEEEFPRoundingOp"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IEEEFPConvertible\">IEEEFPConvertible</a> a fp mode | fp -&gt; mode <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fromFPOr\">fromFPOr</a> :: a -&gt; mode -&gt; fp -&gt; a</li><li><a href=\"#v:toFP\">toFP</a> :: mode -&gt; a -&gt; fp</li></ul>","name":"IEEEFPConvertible fromFPOr toFP","module":"Grisette.Core","link":"Grisette-Core.html#t:IEEEFPConvertible"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Core.html#t:IEEEFPConvertible\" title=\"Grisette.Core\">IEEEFPConvertible</a> a fp mode, <a href=\"Grisette-Core.html#t:IEEEFPRoundingMode\" title=\"Grisette.Core\">IEEEFPRoundingMode</a> mode) =&gt; <a href=\"#t:IEEEFPToAlgReal\">IEEEFPToAlgReal</a> a fp mode | fp -&gt; mode <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fpToAlgReal\">fpToAlgReal</a> :: a -&gt; fp -&gt; a</li></ul>","name":"IEEEFPToAlgReal fpToAlgReal $dmfpToAlgReal","module":"Grisette.Core","link":"Grisette-Core.html#t:IEEEFPToAlgReal"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToCon\">ToCon</a> a b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toCon\">toCon</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> b</li></ul>","name":"ToCon toCon","module":"Grisette.Core","link":"Grisette-Core.html#t:ToCon"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a b. <a href=\"Grisette-Core.html#t:ToCon\" title=\"Grisette.Core\">ToCon</a> a b =&gt; <a href=\"Grisette-Core.html#t:ToCon\" title=\"Grisette.Core\">ToCon</a> (f1 a) (f2 b)) =&gt; <a href=\"#t:ToCon1\">ToCon1</a> (f1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (f2 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftToCon\">liftToCon</a> :: (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> b) -&gt; f1 a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (f2 b)</li></ul>","name":"ToCon1 liftToCon","module":"Grisette.Core","link":"Grisette-Core.html#t:ToCon1"},{"display_html":"<a href=\"#v:toCon1\">toCon1</a> :: (<a href=\"Grisette-Core.html#t:ToCon1\" title=\"Grisette.Core\">ToCon1</a> f1 f2, <a href=\"Grisette-Core.html#t:ToCon\" title=\"Grisette.Core\">ToCon</a> a b) =&gt; f1 a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (f2 b)","name":"toCon1","module":"Grisette.Core","link":"Grisette-Core.html#v:toCon1"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a b. <a href=\"Grisette-Core.html#t:ToCon\" title=\"Grisette.Core\">ToCon</a> a b =&gt; <a href=\"Grisette-Core.html#t:ToCon1\" title=\"Grisette.Core\">ToCon1</a> (f1 a) (f2 b)) =&gt; <a href=\"#t:ToCon2\">ToCon2</a> (f1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (f2 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftToCon2\">liftToCon2</a> :: (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> b) -&gt; (c -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> d) -&gt; f1 a c -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (f2 b d)</li></ul>","name":"ToCon2 liftToCon2","module":"Grisette.Core","link":"Grisette-Core.html#t:ToCon2"},{"display_html":"<a href=\"#v:toCon2\">toCon2</a> :: (<a href=\"Grisette-Core.html#t:ToCon2\" title=\"Grisette.Core\">ToCon2</a> f1 f2, <a href=\"Grisette-Core.html#t:ToCon\" title=\"Grisette.Core\">ToCon</a> a b, <a href=\"Grisette-Core.html#t:ToCon\" title=\"Grisette.Core\">ToCon</a> c d) =&gt; f1 a c -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (f2 b d)","name":"toCon2","module":"Grisette.Core","link":"Grisette-Core.html#v:toCon2"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToSym\">ToSym</a> a b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toSym\">toSym</a> :: a -&gt; b</li></ul>","name":"ToSym toSym","module":"Grisette.Core","link":"Grisette-Core.html#t:ToSym"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a b. <a href=\"Grisette-Core.html#t:ToSym\" title=\"Grisette.Core\">ToSym</a> a b =&gt; <a href=\"Grisette-Core.html#t:ToSym\" title=\"Grisette.Core\">ToSym</a> (f1 a) (f2 b)) =&gt; <a href=\"#t:ToSym1\">ToSym1</a> (f1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (f2 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftToSym\">liftToSym</a> :: (a -&gt; b) -&gt; f1 a -&gt; f2 b</li></ul>","name":"ToSym1 liftToSym","module":"Grisette.Core","link":"Grisette-Core.html#t:ToSym1"},{"display_html":"<a href=\"#v:toSym1\">toSym1</a> :: (<a href=\"Grisette-Core.html#t:ToSym1\" title=\"Grisette.Core\">ToSym1</a> f1 f2, <a href=\"Grisette-Core.html#t:ToSym\" title=\"Grisette.Core\">ToSym</a> a b) =&gt; f1 a -&gt; f2 b","name":"toSym1","module":"Grisette.Core","link":"Grisette-Core.html#v:toSym1"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a b. <a href=\"Grisette-Core.html#t:ToSym\" title=\"Grisette.Core\">ToSym</a> a b =&gt; <a href=\"Grisette-Core.html#t:ToSym1\" title=\"Grisette.Core\">ToSym1</a> (f1 a) (f2 b)) =&gt; <a href=\"#t:ToSym2\">ToSym2</a> (f1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (f2 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftToSym2\">liftToSym2</a> :: (a -&gt; b) -&gt; (c -&gt; d) -&gt; f1 a c -&gt; f2 b d</li></ul>","name":"ToSym2 liftToSym2","module":"Grisette.Core","link":"Grisette-Core.html#t:ToSym2"},{"display_html":"<a href=\"#v:toSym2\">toSym2</a> :: (<a href=\"Grisette-Core.html#t:ToSym2\" title=\"Grisette.Core\">ToSym2</a> f1 f2, <a href=\"Grisette-Core.html#t:ToSym\" title=\"Grisette.Core\">ToSym</a> a b, <a href=\"Grisette-Core.html#t:ToSym\" title=\"Grisette.Core\">ToSym</a> c d) =&gt; f1 a c -&gt; f2 b d","name":"toSym2","module":"Grisette.Core","link":"Grisette-Core.html#v:toSym2"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:BitCast\">BitCast</a> from to <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:bitCast\">bitCast</a> :: from -&gt; to</li></ul>","name":"BitCast bitCast","module":"Grisette.Core","link":"Grisette-Core.html#t:BitCast"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:BitCastCanonical\">BitCastCanonical</a> from to <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:bitCastCanonicalValue\">bitCastCanonicalValue</a> :: proxy from -&gt; to</li></ul>","name":"BitCastCanonical bitCastCanonicalValue","module":"Grisette.Core","link":"Grisette-Core.html#t:BitCastCanonical"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:BitCastOr\">BitCastOr</a> from to <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:bitCastOr\">bitCastOr</a> :: to -&gt; from -&gt; to</li></ul>","name":"BitCastOr bitCastOr","module":"Grisette.Core","link":"Grisette-Core.html#t:BitCastOr"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:BitCastOrCanonical\">BitCastOrCanonical</a> a b = (<a href=\"Grisette-Core.html#t:BitCastCanonical\" title=\"Grisette.Core\">BitCastCanonical</a> a b, <a href=\"Grisette-Core.html#t:BitCastOr\" title=\"Grisette.Core\">BitCastOr</a> a b)","name":"BitCastOrCanonical","module":"Grisette.Core","link":"Grisette-Core.html#t:BitCastOrCanonical"},{"display_html":"<a href=\"#v:bitCastOrCanonical\">bitCastOrCanonical</a> :: <a href=\"Grisette-Core.html#t:BitCastOrCanonical\" title=\"Grisette.Core\">BitCastOrCanonical</a> from to =&gt; from -&gt; to","name":"bitCastOrCanonical","module":"Grisette.Core","link":"Grisette-Core.html#v:bitCastOrCanonical"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e m, <a href=\"Grisette-Core.html#t:TryMerge\" title=\"Grisette.Core\">TryMerge</a> m, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> b, <a href=\"Grisette-Core.html#t:BitCastOr\" title=\"Grisette.Core\">BitCastOr</a> a b) =&gt; <a href=\"#t:SafeBitCast\">SafeBitCast</a> e a b (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:safeBitCast\">safeBitCast</a> :: a -&gt; m b</li></ul>","name":"SafeBitCast safeBitCast","module":"Grisette.Core","link":"Grisette-Core.html#t:SafeBitCast"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:SymFromIntegral\">SymFromIntegral</a> from to <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:symFromIntegral\">symFromIntegral</a> :: from -&gt; to</li></ul>","name":"SymFromIntegral symFromIntegral","module":"Grisette.Core","link":"Grisette-Core.html#t:SymFromIntegral"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Union\">Union</a> a","name":"Union","module":"Grisette.Core","link":"Grisette-Core.html#t:Union"},{"display_html":"<a href=\"#v:unionUnaryOp\">unionUnaryOp</a> :: (a -&gt; a) -&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> a -&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> a","name":"unionUnaryOp","module":"Grisette.Core","link":"Grisette-Core.html#v:unionUnaryOp"},{"display_html":"<a href=\"#v:unionBinOp\">unionBinOp</a> :: (a -&gt; a -&gt; a) -&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> a -&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> a -&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> a","name":"unionBinOp","module":"Grisette.Core","link":"Grisette-Core.html#v:unionBinOp"},{"display_html":"<a href=\"#v:liftUnion\">liftUnion</a> :: <span class=\"keyword\">forall</span> u a. (<a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a, <a href=\"Grisette-Core.html#t:SymBranching\" title=\"Grisette.Core\">SymBranching</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> u) =&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> a -&gt; u a","name":"liftUnion","module":"Grisette.Core","link":"Grisette-Core.html#v:liftUnion"},{"display_html":"<a href=\"#v:unionMergingStrategy\">unionMergingStrategy</a> :: <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> a)","name":"unionMergingStrategy","module":"Grisette.Core","link":"Grisette-Core.html#v:unionMergingStrategy"},{"display_html":"<a href=\"#v:liftToMonadUnion\">liftToMonadUnion</a> :: (<a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a, <a href=\"Grisette-Core.html#t:MonadUnion\" title=\"Grisette.Core\">MonadUnion</a> u) =&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> a -&gt; u a","name":"liftToMonadUnion","module":"Grisette.Core","link":"Grisette-Core.html#v:liftToMonadUnion"},{"display_html":"<a href=\"#v:unionSize\">unionSize</a> :: <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"unionSize","module":"Grisette.Core","link":"Grisette-Core.html#v:unionSize"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Concrete\">Concrete</a> a","name":"Concrete","module":"Grisette.Core","link":"Grisette-Core.html#t:Concrete"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Mergeable\">Mergeable</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:rootStrategy\">rootStrategy</a> :: <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> a</li><li><a href=\"#v:sortIndices\">sortIndices</a> :: a -&gt; [<a href=\"Grisette-Core.html#t:DynamicSortedIdx\" title=\"Grisette.Core\">DynamicSortedIdx</a>]</li></ul>","name":"Mergeable rootStrategy sortIndices $dmsortIndices","module":"Grisette.Core","link":"Grisette-Core.html#t:Mergeable"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a =&gt; <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> (u a)) =&gt; <a href=\"#t:Mergeable1\">Mergeable1</a> (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftRootStrategy\">liftRootStrategy</a> :: <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> a -&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> (u a)</li></ul>","name":"Mergeable1 liftRootStrategy","module":"Grisette.Core","link":"Grisette-Core.html#t:Mergeable1"},{"display_html":"<a href=\"#v:rootStrategy1\">rootStrategy1</a> :: (<a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a, <a href=\"Grisette-Core.html#t:Mergeable1\" title=\"Grisette.Core\">Mergeable1</a> u) =&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> (u a)","name":"rootStrategy1","module":"Grisette.Core","link":"Grisette-Core.html#v:rootStrategy1"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a =&gt; <a href=\"Grisette-Core.html#t:Mergeable1\" title=\"Grisette.Core\">Mergeable1</a> (u a)) =&gt; <a href=\"#t:Mergeable2\">Mergeable2</a> (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftRootStrategy2\">liftRootStrategy2</a> :: <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> a -&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> b -&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> (u a b)</li></ul>","name":"Mergeable2 liftRootStrategy2","module":"Grisette.Core","link":"Grisette-Core.html#t:Mergeable2"},{"display_html":"<a href=\"#v:rootStrategy2\">rootStrategy2</a> :: (<a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> b, <a href=\"Grisette-Core.html#t:Mergeable2\" title=\"Grisette.Core\">Mergeable2</a> u) =&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> (u a b)","name":"rootStrategy2","module":"Grisette.Core","link":"Grisette-Core.html#v:rootStrategy2"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a =&gt; <a href=\"Grisette-Core.html#t:Mergeable2\" title=\"Grisette.Core\">Mergeable2</a> (u a)) =&gt; <a href=\"#t:Mergeable3\">Mergeable3</a> (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftRootStrategy3\">liftRootStrategy3</a> :: <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> a -&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> b -&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> c -&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> (u a b c)</li></ul>","name":"Mergeable3 liftRootStrategy3","module":"Grisette.Core","link":"Grisette-Core.html#t:Mergeable3"},{"display_html":"<a href=\"#v:rootStrategy3\">rootStrategy3</a> :: (<a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> b, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> c, <a href=\"Grisette-Core.html#t:Mergeable3\" title=\"Grisette.Core\">Mergeable3</a> u) =&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> (u a b c)","name":"rootStrategy3","module":"Grisette.Core","link":"Grisette-Core.html#v:rootStrategy3"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MergingStrategy\">MergingStrategy</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:SimpleStrategy\">SimpleStrategy</a> :: <span class=\"keyword\">forall</span> a. (<a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; a -&gt; a -&gt; a) -&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> a</li><li><a href=\"#v:SortedStrategy\">SortedStrategy</a> :: <span class=\"keyword\">forall</span> idx a. <a href=\"Grisette-Core.html#t:MergingIndex\" title=\"Grisette.Core\">MergingIndex</a> idx =&gt; (a -&gt; idx) -&gt; (idx -&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> a) -&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> a</li><li><a href=\"#v:NoStrategy\">NoStrategy</a> :: <span class=\"keyword\">forall</span> a. <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> a</li></ul>","name":"MergingStrategy NoStrategy SimpleStrategy SortedStrategy","module":"Grisette.Core","link":"Grisette-Core.html#t:MergingStrategy"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MergingIndex\">MergingIndex</a> a = (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ord\" title=\"Data.Ord\">Ord</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> a)","name":"MergingIndex","module":"Grisette.Core","link":"Grisette-Core.html#t:MergingIndex"},{"display_html":"<a href=\"#v:wrapStrategy\">wrapStrategy</a> :: <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> a -&gt; (a -&gt; b) -&gt; (b -&gt; a) -&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> b","name":"wrapStrategy","module":"Grisette.Core","link":"Grisette-Core.html#v:wrapStrategy"},{"display_html":"<a href=\"#v:product2Strategy\">product2Strategy</a> :: (a -&gt; b -&gt; r) -&gt; (r -&gt; (a, b)) -&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> a -&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> b -&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> r","name":"product2Strategy","module":"Grisette.Core","link":"Grisette-Core.html#v:product2Strategy"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DynamicSortedIdx\">DynamicSortedIdx</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:DynamicSortedIdx\">DynamicSortedIdx</a> :: <span class=\"keyword\">forall</span> idx. <a href=\"Grisette-Core.html#t:MergingIndex\" title=\"Grisette.Core\">MergingIndex</a> idx =&gt; idx -&gt; <a href=\"Grisette-Core.html#t:DynamicSortedIdx\" title=\"Grisette.Core\">DynamicSortedIdx</a></li></ul>","name":"DynamicSortedIdx DynamicSortedIdx","module":"Grisette.Core","link":"Grisette-Core.html#t:DynamicSortedIdx"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:StrategyList\">StrategyList</a> (container :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:StrategyList\">StrategyList</a> :: <span class=\"keyword\">forall</span> a (container :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). container [<a href=\"Grisette-Core.html#t:DynamicSortedIdx\" title=\"Grisette.Core\">DynamicSortedIdx</a>] -&gt; container (<a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> a) -&gt; <a href=\"Grisette-Core.html#t:StrategyList\" title=\"Grisette.Core\">StrategyList</a> container</li></ul>","name":"StrategyList StrategyList","module":"Grisette.Core","link":"Grisette-Core.html#t:StrategyList"},{"display_html":"<a href=\"#v:buildStrategyList\">buildStrategyList</a> :: <span class=\"keyword\">forall</span> a container. <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> container =&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> a -&gt; container a -&gt; <a href=\"Grisette-Core.html#t:StrategyList\" title=\"Grisette.Core\">StrategyList</a> container","name":"buildStrategyList","module":"Grisette.Core","link":"Grisette-Core.html#v:buildStrategyList"},{"display_html":"<a href=\"#v:resolveStrategy\">resolveStrategy</a> :: <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> x -&gt; x -&gt; ([<a href=\"Grisette-Core.html#t:DynamicSortedIdx\" title=\"Grisette.Core\">DynamicSortedIdx</a>], <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> x)","name":"resolveStrategy","module":"Grisette.Core","link":"Grisette-Core.html#v:resolveStrategy"},{"display_html":"<a href=\"#v:resolveStrategy-39-\">resolveStrategy'</a> :: x -&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> x -&gt; ([<a href=\"Grisette-Core.html#t:DynamicSortedIdx\" title=\"Grisette.Core\">DynamicSortedIdx</a>], <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> x)","name":"resolveStrategy'","module":"Grisette.Core","link":"Grisette-Core.html#v:resolveStrategy-39-"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a =&gt; <a href=\"#t:SimpleMergeable\">SimpleMergeable</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:mrgIte\">mrgIte</a> :: <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; a -&gt; a -&gt; a</li></ul>","name":"SimpleMergeable mrgIte","module":"Grisette.Core","link":"Grisette-Core.html#t:SimpleMergeable"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Core.html#t:Mergeable1\" title=\"Grisette.Core\">Mergeable1</a> u, <span class=\"keyword\">forall</span> a. <a href=\"Grisette-Core.html#t:SimpleMergeable\" title=\"Grisette.Core\">SimpleMergeable</a> a =&gt; <a href=\"Grisette-Core.html#t:SimpleMergeable\" title=\"Grisette.Core\">SimpleMergeable</a> (u a)) =&gt; <a href=\"#t:SimpleMergeable1\">SimpleMergeable1</a> (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftMrgIte\">liftMrgIte</a> :: (<a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; a -&gt; a -&gt; a) -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; u a -&gt; u a -&gt; u a</li></ul>","name":"SimpleMergeable1 liftMrgIte","module":"Grisette.Core","link":"Grisette-Core.html#t:SimpleMergeable1"},{"display_html":"<a href=\"#v:mrgIte1\">mrgIte1</a> :: (<a href=\"Grisette-Core.html#t:SimpleMergeable1\" title=\"Grisette.Core\">SimpleMergeable1</a> u, <a href=\"Grisette-Core.html#t:SimpleMergeable\" title=\"Grisette.Core\">SimpleMergeable</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; u a -&gt; u a -&gt; u a","name":"mrgIte1","module":"Grisette.Core","link":"Grisette-Core.html#v:mrgIte1"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Core.html#t:Mergeable2\" title=\"Grisette.Core\">Mergeable2</a> u, <span class=\"keyword\">forall</span> a. <a href=\"Grisette-Core.html#t:SimpleMergeable\" title=\"Grisette.Core\">SimpleMergeable</a> a =&gt; <a href=\"Grisette-Core.html#t:SimpleMergeable1\" title=\"Grisette.Core\">SimpleMergeable1</a> (u a)) =&gt; <a href=\"#t:SimpleMergeable2\">SimpleMergeable2</a> (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftMrgIte2\">liftMrgIte2</a> :: (<a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; a -&gt; a -&gt; a) -&gt; (<a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; b -&gt; b -&gt; b) -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; u a b -&gt; u a b -&gt; u a b</li></ul>","name":"SimpleMergeable2 liftMrgIte2","module":"Grisette.Core","link":"Grisette-Core.html#t:SimpleMergeable2"},{"display_html":"<a href=\"#v:mrgIte2\">mrgIte2</a> :: (<a href=\"Grisette-Core.html#t:SimpleMergeable2\" title=\"Grisette.Core\">SimpleMergeable2</a> u, <a href=\"Grisette-Core.html#t:SimpleMergeable\" title=\"Grisette.Core\">SimpleMergeable</a> a, <a href=\"Grisette-Core.html#t:SimpleMergeable\" title=\"Grisette.Core\">SimpleMergeable</a> b) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; u a b -&gt; u a b -&gt; u a b","name":"mrgIte2","module":"Grisette.Core","link":"Grisette-Core.html#v:mrgIte2"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Grisette-Core.html#t:SimpleMergeable1\" title=\"Grisette.Core\">SimpleMergeable1</a> u, <span class=\"keyword\">forall</span> a. <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a =&gt; <a href=\"Grisette-Core.html#t:SimpleMergeable\" title=\"Grisette.Core\">SimpleMergeable</a> (u a), <a href=\"Grisette-Core.html#t:TryMerge\" title=\"Grisette.Core\">TryMerge</a> u) =&gt; <a href=\"#t:SymBranching\">SymBranching</a> (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:mrgIfWithStrategy\">mrgIfWithStrategy</a> :: <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; u a -&gt; u a -&gt; u a</li><li><a href=\"#v:mrgIfPropagatedStrategy\">mrgIfPropagatedStrategy</a> :: <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; u a -&gt; u a -&gt; u a</li></ul>","name":"SymBranching mrgIfPropagatedStrategy mrgIfWithStrategy","module":"Grisette.Core","link":"Grisette-Core.html#t:SymBranching"},{"display_html":"<a href=\"#v:mrgIf\">mrgIf</a> :: (<a href=\"Grisette-Core.html#t:SymBranching\" title=\"Grisette.Core\">SymBranching</a> u, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; u a -&gt; u a -&gt; u a","name":"mrgIf","module":"Grisette.Core","link":"Grisette-Core.html#v:mrgIf"},{"display_html":"<a href=\"#v:mergeWithStrategy\">mergeWithStrategy</a> :: <a href=\"Grisette-Core.html#t:SymBranching\" title=\"Grisette.Core\">SymBranching</a> m =&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> a -&gt; m a -&gt; m a","name":"mergeWithStrategy","module":"Grisette.Core","link":"Grisette-Core.html#v:mergeWithStrategy"},{"display_html":"<a href=\"#v:merge\">merge</a> :: (<a href=\"Grisette-Core.html#t:SymBranching\" title=\"Grisette.Core\">SymBranching</a> m, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a) =&gt; m a -&gt; m a","name":"merge","module":"Grisette.Core","link":"Grisette-Core.html#v:merge"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MonadTryMerge\">MonadTryMerge</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) = (<a href=\"Grisette-Core.html#t:TryMerge\" title=\"Grisette.Core\">TryMerge</a> f, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> f)","name":"MonadTryMerge","module":"Grisette.Core","link":"Grisette-Core.html#t:MonadTryMerge"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:TryMerge\">TryMerge</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:tryMergeWithStrategy\">tryMergeWithStrategy</a> :: <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> a -&gt; m a -&gt; m a</li></ul>","name":"TryMerge tryMergeWithStrategy","module":"Grisette.Core","link":"Grisette-Core.html#t:TryMerge"},{"display_html":"<a href=\"#v:mrgSingle\">mrgSingle</a> :: (<a href=\"Grisette-Core.html#t:TryMerge\" title=\"Grisette.Core\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a) =&gt; a -&gt; m a","name":"mrgSingle","module":"Grisette.Core","link":"Grisette-Core.html#v:mrgSingle"},{"display_html":"<a href=\"#v:mrgSingleWithStrategy\">mrgSingleWithStrategy</a> :: (<a href=\"Grisette-Core.html#t:TryMerge\" title=\"Grisette.Core\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m) =&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> a -&gt; a -&gt; m a","name":"mrgSingleWithStrategy","module":"Grisette.Core","link":"Grisette-Core.html#v:mrgSingleWithStrategy"},{"display_html":"<a href=\"#v:tryMerge\">tryMerge</a> :: (<a href=\"Grisette-Core.html#t:TryMerge\" title=\"Grisette.Core\">TryMerge</a> m, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a) =&gt; m a -&gt; m a","name":"tryMerge","module":"Grisette.Core","link":"Grisette-Core.html#v:tryMerge"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> u, <a href=\"Grisette-Core.html#t:SymBranching\" title=\"Grisette.Core\">SymBranching</a> u) =&gt; <a href=\"#t:PlainUnion\">PlainUnion</a> (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:singleView\">singleView</a> :: u a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> a</li><li><a href=\"#v:ifView\">ifView</a> :: u a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>, u a, u a)</li><li><a href=\"#v:toGuardedList\">toGuardedList</a> :: u a -&gt; [(<a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>, a)]</li><li><a href=\"#v:overestimateUnionValues\">overestimateUnionValues</a> :: <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a =&gt; u a -&gt; [a]</li></ul>","name":"PlainUnion ifView singleView toGuardedList overestimateUnionValues $dmtoGuardedList $dmoverestimateUnionValues","module":"Grisette.Core","link":"Grisette-Core.html#t:PlainUnion"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:Single\">Single</a> :: (<a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a) =&gt; a -&gt; u a","name":"Single","module":"Grisette.Core","link":"Grisette-Core.html#v:Single"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:If\">If</a> :: (<a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; u a -&gt; u a -&gt; u a","name":"If","module":"Grisette.Core","link":"Grisette-Core.html#v:If"},{"display_html":"<a href=\"#v:simpleMerge\">simpleMerge</a> :: <span class=\"keyword\">forall</span> u a. (<a href=\"Grisette-Core.html#t:SimpleMergeable\" title=\"Grisette.Core\">SimpleMergeable</a> a, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u) =&gt; u a -&gt; a","name":"simpleMerge","module":"Grisette.Core","link":"Grisette-Core.html#v:simpleMerge"},{"display_html":"<a href=\"#v:.-35-\">(.#)</a> :: (<a href=\"Grisette-Core.html#t:Function\" title=\"Grisette.Core\">Function</a> f a r, <a href=\"Grisette-Core.html#t:SimpleMergeable\" title=\"Grisette.Core\">SimpleMergeable</a> r, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u) =&gt; f -&gt; u a -&gt; r","name":".#","module":"Grisette.Core","link":"Grisette-Core.html#v:.-35-"},{"display_html":"<a href=\"#v:onUnion\">onUnion</a> :: <span class=\"keyword\">forall</span> u a r. (<a href=\"Grisette-Core.html#t:SimpleMergeable\" title=\"Grisette.Core\">SimpleMergeable</a> r, <a href=\"Grisette-Core.html#t:SymBranching\" title=\"Grisette.Core\">SymBranching</a> u, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a) =&gt; (a -&gt; r) -&gt; u a -&gt; r","name":"onUnion","module":"Grisette.Core","link":"Grisette-Core.html#v:onUnion"},{"display_html":"<a href=\"#v:onUnion2\">onUnion2</a> :: <span class=\"keyword\">forall</span> u a b r. (<a href=\"Grisette-Core.html#t:SimpleMergeable\" title=\"Grisette.Core\">SimpleMergeable</a> r, <a href=\"Grisette-Core.html#t:SymBranching\" title=\"Grisette.Core\">SymBranching</a> u, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> b) =&gt; (a -&gt; b -&gt; r) -&gt; u a -&gt; u b -&gt; r","name":"onUnion2","module":"Grisette.Core","link":"Grisette-Core.html#v:onUnion2"},{"display_html":"<a href=\"#v:onUnion3\">onUnion3</a> :: <span class=\"keyword\">forall</span> u a b c r. (<a href=\"Grisette-Core.html#t:SimpleMergeable\" title=\"Grisette.Core\">SimpleMergeable</a> r, <a href=\"Grisette-Core.html#t:SymBranching\" title=\"Grisette.Core\">SymBranching</a> u, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> b, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> c) =&gt; (a -&gt; b -&gt; c -&gt; r) -&gt; u a -&gt; u b -&gt; u c -&gt; r","name":"onUnion3","module":"Grisette.Core","link":"Grisette-Core.html#v:onUnion3"},{"display_html":"<a href=\"#v:onUnion4\">onUnion4</a> :: <span class=\"keyword\">forall</span> u a b c d r. (<a href=\"Grisette-Core.html#t:SimpleMergeable\" title=\"Grisette.Core\">SimpleMergeable</a> r, <a href=\"Grisette-Core.html#t:SymBranching\" title=\"Grisette.Core\">SymBranching</a> u, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> b, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> c, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> d) =&gt; (a -&gt; b -&gt; c -&gt; d -&gt; r) -&gt; u a -&gt; u b -&gt; u c -&gt; u d -&gt; r","name":"onUnion4","module":"Grisette.Core","link":"Grisette-Core.html#v:onUnion4"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MonadUnion\">MonadUnion</a> (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) = (<a href=\"Grisette-Core.html#t:SymBranching\" title=\"Grisette.Core\">SymBranching</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u)","name":"MonadUnion","module":"Grisette.Core","link":"Grisette-Core.html#t:MonadUnion"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PPrint\">PPrint</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pformat\">pformat</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann</li><li><a href=\"#v:pformatPrec\">pformatPrec</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann</li><li><a href=\"#v:pformatList\">pformatList</a> :: [a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann</li></ul>","name":"PPrint pformat pformatList pformatPrec $dmpformat $dmpformatList $dmpformatPrec","module":"Grisette.Core","link":"Grisette-Core.html#t:PPrint"},{"display_html":"<a href=\"#v:docToTextWith\">docToTextWith</a> :: <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:LayoutOptions\" title=\"Prettyprinter\">LayoutOptions</a> -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>","name":"docToTextWith","module":"Grisette.Core","link":"Grisette-Core.html#v:docToTextWith"},{"display_html":"<a href=\"#v:docToTextWithWidth\">docToTextWithWidth</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>","name":"docToTextWithWidth","module":"Grisette.Core","link":"Grisette-Core.html#v:docToTextWithWidth"},{"display_html":"<a href=\"#v:docToText\">docToText</a> :: <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>","name":"docToText","module":"Grisette.Core","link":"Grisette-Core.html#v:docToText"},{"display_html":"<a href=\"#v:pformatTextWith\">pformatTextWith</a> :: <a href=\"Grisette-Core.html#t:PPrint\" title=\"Grisette.Core\">PPrint</a> a =&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:LayoutOptions\" title=\"Prettyprinter\">LayoutOptions</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>","name":"pformatTextWith","module":"Grisette.Core","link":"Grisette-Core.html#v:pformatTextWith"},{"display_html":"<a href=\"#v:pformatTextWithWidth\">pformatTextWithWidth</a> :: <a href=\"Grisette-Core.html#t:PPrint\" title=\"Grisette.Core\">PPrint</a> a =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>","name":"pformatTextWithWidth","module":"Grisette.Core","link":"Grisette-Core.html#v:pformatTextWithWidth"},{"display_html":"<a href=\"#v:pformatText\">pformatText</a> :: <a href=\"Grisette-Core.html#t:PPrint\" title=\"Grisette.Core\">PPrint</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>","name":"pformatText","module":"Grisette.Core","link":"Grisette-Core.html#v:pformatText"},{"display_html":"<a href=\"#v:pprint\">pprint</a> :: <a href=\"Grisette-Core.html#t:PPrint\" title=\"Grisette.Core\">PPrint</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ()","name":"pprint","module":"Grisette.Core","link":"Grisette-Core.html#v:pprint"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Core.html#t:PPrint\" title=\"Grisette.Core\">PPrint</a> a =&gt; <a href=\"Grisette-Core.html#t:PPrint\" title=\"Grisette.Core\">PPrint</a> (f a)) =&gt; <a href=\"#t:PPrint1\">PPrint1</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftPFormatPrec\">liftPFormatPrec</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; ([a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; f a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann</li><li><a href=\"#v:liftPFormatList\">liftPFormatList</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; ([a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; [f a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann</li></ul>","name":"PPrint1 liftPFormatList liftPFormatPrec $dmliftPFormatList","module":"Grisette.Core","link":"Grisette-Core.html#t:PPrint1"},{"display_html":"<a href=\"#v:pformatPrec1\">pformatPrec1</a> :: (<a href=\"Grisette-Core.html#t:PPrint1\" title=\"Grisette.Core\">PPrint1</a> f, <a href=\"Grisette-Core.html#t:PPrint\" title=\"Grisette.Core\">PPrint</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; f a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"pformatPrec1","module":"Grisette.Core","link":"Grisette-Core.html#v:pformatPrec1"},{"display_html":"<a href=\"#v:pformatList1\">pformatList1</a> :: (<a href=\"Grisette-Core.html#t:PPrint1\" title=\"Grisette.Core\">PPrint1</a> f, <a href=\"Grisette-Core.html#t:PPrint\" title=\"Grisette.Core\">PPrint</a> a) =&gt; [f a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"pformatList1","module":"Grisette.Core","link":"Grisette-Core.html#v:pformatList1"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Core.html#t:PPrint\" title=\"Grisette.Core\">PPrint</a> a =&gt; <a href=\"Grisette-Core.html#t:PPrint1\" title=\"Grisette.Core\">PPrint1</a> (f a), <span class=\"keyword\">forall</span> a b. (<a href=\"Grisette-Core.html#t:PPrint\" title=\"Grisette.Core\">PPrint</a> a, <a href=\"Grisette-Core.html#t:PPrint\" title=\"Grisette.Core\">PPrint</a> b) =&gt; <a href=\"Grisette-Core.html#t:PPrint\" title=\"Grisette.Core\">PPrint</a> (f a b)) =&gt; <a href=\"#t:PPrint2\">PPrint2</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftPFormatPrec2\">liftPFormatPrec2</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; ([a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; b -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; ([b] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; f a b -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann</li><li><a href=\"#v:liftPFormatList2\">liftPFormatList2</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; ([a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; b -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; ([b] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; [f a b] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann</li></ul>","name":"PPrint2 liftPFormatList2 liftPFormatPrec2 $dmliftPFormatList2","module":"Grisette.Core","link":"Grisette-Core.html#t:PPrint2"},{"display_html":"<a href=\"#v:pformatPrec2\">pformatPrec2</a> :: (<a href=\"Grisette-Core.html#t:PPrint2\" title=\"Grisette.Core\">PPrint2</a> f, <a href=\"Grisette-Core.html#t:PPrint\" title=\"Grisette.Core\">PPrint</a> a, <a href=\"Grisette-Core.html#t:PPrint\" title=\"Grisette.Core\">PPrint</a> b) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; f a b -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"pformatPrec2","module":"Grisette.Core","link":"Grisette-Core.html#v:pformatPrec2"},{"display_html":"<a href=\"#v:pformatList2\">pformatList2</a> :: (<a href=\"Grisette-Core.html#t:PPrint2\" title=\"Grisette.Core\">PPrint2</a> f, <a href=\"Grisette-Core.html#t:PPrint\" title=\"Grisette.Core\">PPrint</a> a, <a href=\"Grisette-Core.html#t:PPrint\" title=\"Grisette.Core\">PPrint</a> b) =&gt; [f a b] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"pformatList2","module":"Grisette.Core","link":"Grisette-Core.html#v:pformatList2"},{"display_html":"<a href=\"#v:groupedEnclose\">groupedEnclose</a> :: <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"groupedEnclose","module":"Grisette.Core","link":"Grisette-Core.html#v:groupedEnclose"},{"display_html":"<a href=\"#v:condEnclose\">condEnclose</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"condEnclose","module":"Grisette.Core","link":"Grisette-Core.html#v:condEnclose"},{"display_html":"<a href=\"#v:pformatWithConstructor\">pformatWithConstructor</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; [<a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"pformatWithConstructor","module":"Grisette.Core","link":"Grisette-Core.html#v:pformatWithConstructor"},{"display_html":"<a href=\"#v:pformatWithConstructorNoAlign\">pformatWithConstructorNoAlign</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann -&gt; [<a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"pformatWithConstructorNoAlign","module":"Grisette.Core","link":"Grisette-Core.html#v:pformatWithConstructorNoAlign"},{"display_html":"<a href=\"#v:viaShowsPrec\">viaShowsPrec</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:ShowS\" title=\"Prelude\">ShowS</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"viaShowsPrec","module":"Grisette.Core","link":"Grisette-Core.html#v:viaShowsPrec"},{"display_html":"module <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html\">Prettyprinter</a>","name":"","module":"Grisette.Core","link":""},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:FreshIndex\">FreshIndex</a> = <a href=\"#v:FreshIndex\">FreshIndex</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"FreshIndex FreshIndex","module":"Grisette.Core","link":"Grisette-Core.html#t:FreshIndex"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"#t:MonadFresh\">MonadFresh</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:getFreshIndex\">getFreshIndex</a> :: m <a href=\"Grisette-Core.html#t:FreshIndex\" title=\"Grisette.Core\">FreshIndex</a></li><li><a href=\"#v:setFreshIndex\">setFreshIndex</a> :: <a href=\"Grisette-Core.html#t:FreshIndex\" title=\"Grisette.Core\">FreshIndex</a> -&gt; m ()</li><li><a href=\"#v:getIdentifier\">getIdentifier</a> :: m <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a></li><li><a href=\"#v:localIdentifier\">localIdentifier</a> :: (<a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a> -&gt; <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a>) -&gt; m a -&gt; m a</li></ul>","name":"MonadFresh getFreshIndex setFreshIndex getIdentifier localIdentifier","module":"Grisette.Core","link":"Grisette-Core.html#t:MonadFresh"},{"display_html":"<a href=\"#v:nextFreshIndex\">nextFreshIndex</a> :: <a href=\"Grisette-Core.html#t:MonadFresh\" title=\"Grisette.Core\">MonadFresh</a> m =&gt; m <a href=\"Grisette-Core.html#t:FreshIndex\" title=\"Grisette.Core\">FreshIndex</a>","name":"nextFreshIndex","module":"Grisette.Core","link":"Grisette-Core.html#v:nextFreshIndex"},{"display_html":"<a href=\"#v:liftFresh\">liftFresh</a> :: <a href=\"Grisette-Core.html#t:MonadFresh\" title=\"Grisette.Core\">MonadFresh</a> m =&gt; <a href=\"Grisette-Core.html#t:Fresh\" title=\"Grisette.Core\">Fresh</a> a -&gt; m a","name":"liftFresh","module":"Grisette.Core","link":"Grisette-Core.html#v:liftFresh"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Fresh\">Fresh</a> = <a href=\"Grisette-Core.html#t:FreshT\" title=\"Grisette.Core\">FreshT</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Functor-Identity.html#t:Identity\" title=\"Data.Functor.Identity\">Identity</a>","name":"Fresh","module":"Grisette.Core","link":"Grisette-Core.html#t:Fresh"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:FreshT\">FreshT</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) a = <a href=\"#v:FreshT\">FreshT</a> {<ul class=\"subs\"><li><a href=\"#v:runFreshTFromIndex\">runFreshTFromIndex</a> :: <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a> -&gt; <a href=\"Grisette-Core.html#t:FreshIndex\" title=\"Grisette.Core\">FreshIndex</a> -&gt; m (a, <a href=\"Grisette-Core.html#t:FreshIndex\" title=\"Grisette.Core\">FreshIndex</a>)</li></ul>}","name":"FreshT FreshT runFreshTFromIndex","module":"Grisette.Core","link":"Grisette-Core.html#t:FreshT"},{"display_html":"<a href=\"#v:runFresh\">runFresh</a> :: <a href=\"Grisette-Core.html#t:Fresh\" title=\"Grisette.Core\">Fresh</a> a -&gt; <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a> -&gt; a","name":"runFresh","module":"Grisette.Core","link":"Grisette-Core.html#v:runFresh"},{"display_html":"<a href=\"#v:runFreshT\">runFreshT</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"Grisette-Core.html#t:FreshT\" title=\"Grisette.Core\">FreshT</a> m a -&gt; <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a> -&gt; m a","name":"runFreshT","module":"Grisette.Core","link":"Grisette-Core.html#v:runFreshT"},{"display_html":"<a href=\"#v:mrgRunFreshT\">mrgRunFreshT</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m, <a href=\"Grisette-Core.html#t:TryMerge\" title=\"Grisette.Core\">TryMerge</a> m, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a) =&gt; <a href=\"Grisette-Core.html#t:FreshT\" title=\"Grisette.Core\">FreshT</a> m a -&gt; <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a> -&gt; m a","name":"mrgRunFreshT","module":"Grisette.Core","link":"Grisette-Core.html#v:mrgRunFreshT"},{"display_html":"<a href=\"#v:freshString\">freshString</a> :: (<a href=\"Grisette-Core.html#t:MonadFresh\" title=\"Grisette.Core\">MonadFresh</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:IsString\" title=\"Data.String\">IsString</a> s) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; m s","name":"freshString","module":"Grisette.Core","link":"Grisette-Core.html#v:freshString"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a =&gt; <a href=\"#t:GenSym\">GenSym</a> spec a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fresh\">fresh</a> :: <a href=\"Grisette-Core.html#t:MonadFresh\" title=\"Grisette.Core\">MonadFresh</a> m =&gt; spec -&gt; m (<a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> a)</li></ul>","name":"GenSym fresh $dmfresh","module":"Grisette.Core","link":"Grisette-Core.html#t:GenSym"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GenSymSimple\">GenSymSimple</a> spec a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:simpleFresh\">simpleFresh</a> :: <a href=\"Grisette-Core.html#t:MonadFresh\" title=\"Grisette.Core\">MonadFresh</a> m =&gt; spec -&gt; m a</li></ul>","name":"GenSymSimple simpleFresh","module":"Grisette.Core","link":"Grisette-Core.html#t:GenSymSimple"},{"display_html":"<a href=\"#v:genSym\">genSym</a> :: <a href=\"Grisette-Core.html#t:GenSym\" title=\"Grisette.Core\">GenSym</a> spec a =&gt; spec -&gt; <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a> -&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> a","name":"genSym","module":"Grisette.Core","link":"Grisette-Core.html#v:genSym"},{"display_html":"<a href=\"#v:genSymSimple\">genSymSimple</a> :: <a href=\"Grisette-Core.html#t:GenSymSimple\" title=\"Grisette.Core\">GenSymSimple</a> spec a =&gt; spec -&gt; <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a> -&gt; a","name":"genSymSimple","module":"Grisette.Core","link":"Grisette-Core.html#v:genSymSimple"},{"display_html":"<a href=\"#v:derivedNoSpecFresh\">derivedNoSpecFresh</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, GenSymNoSpec (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a), <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a, <a href=\"Grisette-Core.html#t:MonadFresh\" title=\"Grisette.Core\">MonadFresh</a> m) =&gt; () -&gt; m (<a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> a)","name":"derivedNoSpecFresh","module":"Grisette.Core","link":"Grisette-Core.html#v:derivedNoSpecFresh"},{"display_html":"<a href=\"#v:derivedNoSpecSimpleFresh\">derivedNoSpecSimpleFresh</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, GenSymSimpleNoSpec (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a), <a href=\"Grisette-Core.html#t:MonadFresh\" title=\"Grisette.Core\">MonadFresh</a> m) =&gt; () -&gt; m a","name":"derivedNoSpecSimpleFresh","module":"Grisette.Core","link":"Grisette-Core.html#v:derivedNoSpecSimpleFresh"},{"display_html":"<a href=\"#v:derivedSameShapeSimpleFresh\">derivedSameShapeSimpleFresh</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, GenSymSameShape (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a), <a href=\"Grisette-Core.html#t:MonadFresh\" title=\"Grisette.Core\">MonadFresh</a> m) =&gt; a -&gt; m a","name":"derivedSameShapeSimpleFresh","module":"Grisette.Core","link":"Grisette-Core.html#v:derivedSameShapeSimpleFresh"},{"display_html":"<a href=\"#v:chooseFresh\">chooseFresh</a> :: (<a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a, <a href=\"Grisette-Core.html#t:MonadFresh\" title=\"Grisette.Core\">MonadFresh</a> m) =&gt; [a] -&gt; m (<a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> a)","name":"chooseFresh","module":"Grisette.Core","link":"Grisette-Core.html#v:chooseFresh"},{"display_html":"<a href=\"#v:chooseSimpleFresh\">chooseSimpleFresh</a> :: (<a href=\"Grisette-Core.html#t:SimpleMergeable\" title=\"Grisette.Core\">SimpleMergeable</a> a, <a href=\"Grisette-Core.html#t:MonadFresh\" title=\"Grisette.Core\">MonadFresh</a> m) =&gt; [a] -&gt; m a","name":"chooseSimpleFresh","module":"Grisette.Core","link":"Grisette-Core.html#v:chooseSimpleFresh"},{"display_html":"<a href=\"#v:chooseUnionFresh\">chooseUnionFresh</a> :: (<a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a, <a href=\"Grisette-Core.html#t:MonadFresh\" title=\"Grisette.Core\">MonadFresh</a> m) =&gt; [<a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> a] -&gt; m (<a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> a)","name":"chooseUnionFresh","module":"Grisette.Core","link":"Grisette-Core.html#v:chooseUnionFresh"},{"display_html":"<a href=\"#v:choose\">choose</a> :: <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a =&gt; [a] -&gt; <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a> -&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> a","name":"choose","module":"Grisette.Core","link":"Grisette-Core.html#v:choose"},{"display_html":"<a href=\"#v:chooseSimple\">chooseSimple</a> :: <a href=\"Grisette-Core.html#t:SimpleMergeable\" title=\"Grisette.Core\">SimpleMergeable</a> a =&gt; [a] -&gt; <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a> -&gt; a","name":"chooseSimple","module":"Grisette.Core","link":"Grisette-Core.html#v:chooseSimple"},{"display_html":"<a href=\"#v:chooseUnion\">chooseUnion</a> :: <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a =&gt; [<a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> a] -&gt; <a href=\"Grisette-Core.html#t:Identifier\" title=\"Grisette.Core\">Identifier</a> -&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> a","name":"chooseUnion","module":"Grisette.Core","link":"Grisette-Core.html#v:chooseUnion"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:EnumGenBound\">EnumGenBound</a> a = <a href=\"#v:EnumGenBound\">EnumGenBound</a> a a","name":"EnumGenBound EnumGenBound","module":"Grisette.Core","link":"Grisette-Core.html#t:EnumGenBound"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:EnumGenUpperBound\">EnumGenUpperBound</a> a = <a href=\"#v:EnumGenUpperBound\">EnumGenUpperBound</a> a","name":"EnumGenUpperBound EnumGenUpperBound","module":"Grisette.Core","link":"Grisette-Core.html#t:EnumGenUpperBound"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ListSpec\">ListSpec</a> spec = <a href=\"#v:ListSpec\">ListSpec</a> {<ul class=\"subs\"><li><a href=\"#v:genListMinLength\">genListMinLength</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li><a href=\"#v:genListMaxLength\">genListMaxLength</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li><a href=\"#v:genListSubSpec\">genListSubSpec</a> :: spec</li></ul>}","name":"ListSpec ListSpec genListMinLength genListMaxLength genListSubSpec","module":"Grisette.Core","link":"Grisette-Core.html#t:ListSpec"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SimpleListSpec\">SimpleListSpec</a> spec = <a href=\"#v:SimpleListSpec\">SimpleListSpec</a> {<ul class=\"subs\"><li><a href=\"#v:genSimpleListLength\">genSimpleListLength</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li><a href=\"#v:genSimpleListSubSpec\">genSimpleListSubSpec</a> :: spec</li></ul>}","name":"SimpleListSpec SimpleListSpec genSimpleListLength genSimpleListSubSpec","module":"Grisette.Core","link":"Grisette-Core.html#t:SimpleListSpec"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AssertionError\">AssertionError</a> = <a href=\"#v:AssertionError\">AssertionError</a>","name":"AssertionError AssertionError","module":"Grisette.Core","link":"Grisette-Core.html#t:AssertionError"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:VerificationConditions\">VerificationConditions</a><ul class=\"subs\"><li>= <a href=\"#v:AssertionViolation\">AssertionViolation</a></li><li>| <a href=\"#v:AssumptionViolation\">AssumptionViolation</a></li></ul>","name":"VerificationConditions AssertionViolation AssumptionViolation","module":"Grisette.Core","link":"Grisette-Core.html#t:VerificationConditions"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:TransformError\">TransformError</a> from to <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:transformError\">transformError</a> :: from -&gt; to</li></ul>","name":"TransformError transformError","module":"Grisette.Core","link":"Grisette-Core.html#t:TransformError"},{"display_html":"<a href=\"#v:symAssert\">symAssert</a> :: (<a href=\"Grisette-Core.html#t:TransformError\" title=\"Grisette.Core\">TransformError</a> <a href=\"Grisette-Core.html#t:AssertionError\" title=\"Grisette.Core\">AssertionError</a> to, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> to, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> to erm, <a href=\"Grisette-Core.html#t:MonadUnion\" title=\"Grisette.Core\">MonadUnion</a> erm) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; erm ()","name":"symAssert","module":"Grisette.Core","link":"Grisette-Core.html#v:symAssert"},{"display_html":"<a href=\"#v:symAssume\">symAssume</a> :: (<a href=\"Grisette-Core.html#t:TransformError\" title=\"Grisette.Core\">TransformError</a> <a href=\"Grisette-Core.html#t:VerificationConditions\" title=\"Grisette.Core\">VerificationConditions</a> to, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> to, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> to erm, <a href=\"Grisette-Core.html#t:MonadUnion\" title=\"Grisette.Core\">MonadUnion</a> erm) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; erm ()","name":"symAssume","module":"Grisette.Core","link":"Grisette-Core.html#v:symAssume"},{"display_html":"<a href=\"#v:symAssertWith\">symAssertWith</a> :: (<a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> e, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> e erm, <a href=\"Grisette-Core.html#t:MonadUnion\" title=\"Grisette.Core\">MonadUnion</a> erm) =&gt; e -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; erm ()","name":"symAssertWith","module":"Grisette.Core","link":"Grisette-Core.html#v:symAssertWith"},{"display_html":"<a href=\"#v:symAssertTransformableError\">symAssertTransformableError</a> :: (<a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> to, <a href=\"Grisette-Core.html#t:TransformError\" title=\"Grisette.Core\">TransformError</a> from to, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> to erm, <a href=\"Grisette-Core.html#t:MonadUnion\" title=\"Grisette.Core\">MonadUnion</a> erm) =&gt; from -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; erm ()","name":"symAssertTransformableError","module":"Grisette.Core","link":"Grisette-Core.html#v:symAssertTransformableError"},{"display_html":"<a href=\"#v:symThrowTransformableError\">symThrowTransformableError</a> :: (<a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> to, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> a, <a href=\"Grisette-Core.html#t:TransformError\" title=\"Grisette.Core\">TransformError</a> from to, <a href=\"Grisette-Internal-Core-Control-Monad-CBMCExcept.html#t:MonadError\" title=\"Grisette.Internal.Core.Control.Monad.CBMCExcept\">MonadError</a> to erm, <a href=\"Grisette-Core.html#t:MonadUnion\" title=\"Grisette.Core\">MonadUnion</a> erm) =&gt; from -&gt; erm a","name":"symThrowTransformableError","module":"Grisette.Core","link":"Grisette-Core.html#v:symThrowTransformableError"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:CBMCEither\">CBMCEither</a> a b = <a href=\"#v:CBMCEither\">CBMCEither</a> {<ul class=\"subs\"><li><a href=\"#v:runCBMCEither\">runCBMCEither</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> a b</li></ul>}","name":"CBMCEither CBMCEither runCBMCEither","module":"Grisette.Core","link":"Grisette-Core.html#t:CBMCEither"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:CBMCExceptT\">CBMCExceptT</a> e (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) a = <a href=\"#v:CBMCExceptT\">CBMCExceptT</a> {<ul class=\"subs\"><li><a href=\"#v:runCBMCExceptT\">runCBMCExceptT</a> :: m (<a href=\"Grisette-Core.html#t:CBMCEither\" title=\"Grisette.Core\">CBMCEither</a> e a)</li></ul>}","name":"CBMCExceptT CBMCExceptT runCBMCExceptT","module":"Grisette.Core","link":"Grisette-Core.html#t:CBMCExceptT"},{"display_html":"<a href=\"#v:cbmcExcept\">cbmcExcept</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e a. <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e a -&gt; <a href=\"Grisette-Core.html#t:CBMCExceptT\" title=\"Grisette.Core\">CBMCExceptT</a> e m a","name":"cbmcExcept","module":"Grisette.Core","link":"Grisette-Core.html#v:cbmcExcept"},{"display_html":"<a href=\"#v:mapCBMCExceptT\">mapCBMCExceptT</a> :: (m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e a) -&gt; n (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e' b)) -&gt; <a href=\"Grisette-Core.html#t:CBMCExceptT\" title=\"Grisette.Core\">CBMCExceptT</a> e m a -&gt; <a href=\"Grisette-Core.html#t:CBMCExceptT\" title=\"Grisette.Core\">CBMCExceptT</a> e' n b","name":"mapCBMCExceptT","module":"Grisette.Core","link":"Grisette-Core.html#v:mapCBMCExceptT"},{"display_html":"<a href=\"#v:withCBMCExceptT\">withCBMCExceptT</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e e' a. <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> m =&gt; (e -&gt; e') -&gt; <a href=\"Grisette-Core.html#t:CBMCExceptT\" title=\"Grisette.Core\">CBMCExceptT</a> e m a -&gt; <a href=\"Grisette-Core.html#t:CBMCExceptT\" title=\"Grisette.Core\">CBMCExceptT</a> e' m a","name":"withCBMCExceptT","module":"Grisette.Core","link":"Grisette-Core.html#v:withCBMCExceptT"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SolvingFailure\">SolvingFailure</a><ul class=\"subs\"><li>= <a href=\"#v:Unsat\">Unsat</a></li><li>| <a href=\"#v:Unk\">Unk</a></li><li>| <a href=\"#v:ResultNumLimitReached\">ResultNumLimitReached</a></li><li>| <a href=\"#v:SolvingError\">SolvingError</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li>| <a href=\"#v:Terminated\">Terminated</a></li></ul>","name":"SolvingFailure Unsat Unk Terminated SolvingError ResultNumLimitReached","module":"Grisette.Core","link":"Grisette-Core.html#t:SolvingFailure"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"#t:MonadicSolver\">MonadicSolver</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:monadicSolverPush\">monadicSolverPush</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; m ()</li><li><a href=\"#v:monadicSolverPop\">monadicSolverPop</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; m ()</li><li><a href=\"#v:monadicSolverResetAssertions\">monadicSolverResetAssertions</a> :: m ()</li><li><a href=\"#v:monadicSolverAssert\">monadicSolverAssert</a> :: <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; m ()</li><li><a href=\"#v:monadicSolverCheckSat\">monadicSolverCheckSat</a> :: m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a> <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>)</li></ul>","name":"MonadicSolver monadicSolverAssert monadicSolverCheckSat monadicSolverPop monadicSolverPush monadicSolverResetAssertions","module":"Grisette.Core","link":"Grisette-Core.html#t:MonadicSolver"},{"display_html":"<a href=\"#v:monadicSolverSolve\">monadicSolverSolve</a> :: <a href=\"Grisette-Core.html#t:MonadicSolver\" title=\"Grisette.Core\">MonadicSolver</a> m =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a> <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>)","name":"monadicSolverSolve","module":"Grisette.Core","link":"Grisette-Core.html#v:monadicSolverSolve"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SolverCommand\">SolverCommand</a><ul class=\"subs\"><li>= <a href=\"#v:SolverAssert\">SolverAssert</a> !<a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li><li>| <a href=\"#v:SolverCheckSat\">SolverCheckSat</a></li><li>| <a href=\"#v:SolverPush\">SolverPush</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li>| <a href=\"#v:SolverPop\">SolverPop</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li>| <a href=\"#v:SolverResetAssertions\">SolverResetAssertions</a></li><li>| <a href=\"#v:SolverTerminate\">SolverTerminate</a></li></ul>","name":"SolverCommand SolverAssert SolverCheckSat SolverPop SolverPush SolverResetAssertions SolverTerminate","module":"Grisette.Core","link":"Grisette-Core.html#t:SolverCommand"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Core.html#t:Solver\" title=\"Grisette.Core\">Solver</a> handle =&gt; <a href=\"#t:ConfigurableSolver\">ConfigurableSolver</a> config handle | config -&gt; handle <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:newSolver\">newSolver</a> :: config -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> handle</li></ul>","name":"ConfigurableSolver newSolver","module":"Grisette.Core","link":"Grisette-Core.html#t:ConfigurableSolver"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Solver\">Solver</a> handle <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:solverRunCommand\">solverRunCommand</a> :: (handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a> a)) -&gt; handle -&gt; <a href=\"Grisette-Core.html#t:SolverCommand\" title=\"Grisette.Core\">SolverCommand</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a> a)</li><li><a href=\"#v:solverAssert\">solverAssert</a> :: handle -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a> ())</li><li><a href=\"#v:solverCheckSat\">solverCheckSat</a> :: handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a> <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>)</li><li><a href=\"#v:solverPush\">solverPush</a> :: handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a> ())</li><li><a href=\"#v:solverPop\">solverPop</a> :: handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a> ())</li><li><a href=\"#v:solverResetAssertions\">solverResetAssertions</a> :: handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a> ())</li><li><a href=\"#v:solverTerminate\">solverTerminate</a> :: handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ()</li><li><a href=\"#v:solverForceTerminate\">solverForceTerminate</a> :: handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ()</li></ul>","name":"Solver solverCheckSat solverForceTerminate solverRunCommand solverTerminate solverResetAssertions solverAssert solverPush solverPop $dmsolverResetAssertions $dmsolverAssert $dmsolverPush $dmsolverPop","module":"Grisette.Core","link":"Grisette-Core.html#t:Solver"},{"display_html":"<a href=\"#v:solverSolve\">solverSolve</a> :: <a href=\"Grisette-Core.html#t:Solver\" title=\"Grisette.Core\">Solver</a> handle =&gt; handle -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a> <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>)","name":"solverSolve","module":"Grisette.Core","link":"Grisette-Core.html#v:solverSolve"},{"display_html":"<a href=\"#v:withSolver\">withSolver</a> :: <a href=\"Grisette-Core.html#t:ConfigurableSolver\" title=\"Grisette.Core\">ConfigurableSolver</a> config handle =&gt; config -&gt; (handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> a) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> a","name":"withSolver","module":"Grisette.Core","link":"Grisette-Core.html#v:withSolver"},{"display_html":"<a href=\"#v:solve\">solve</a> :: <a href=\"Grisette-Core.html#t:ConfigurableSolver\" title=\"Grisette.Core\">ConfigurableSolver</a> config handle =&gt; config -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a> <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>)","name":"solve","module":"Grisette.Core","link":"Grisette-Core.html#v:solve"},{"display_html":"<a href=\"#v:solverSolveMulti\">solverSolveMulti</a> :: <a href=\"Grisette-Core.html#t:Solver\" title=\"Grisette.Core\">Solver</a> handle =&gt; handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"solverSolveMulti","module":"Grisette.Core","link":"Grisette-Core.html#v:solverSolveMulti"},{"display_html":"<a href=\"#v:solveMulti\">solveMulti</a> :: <a href=\"Grisette-Core.html#t:ConfigurableSolver\" title=\"Grisette.Core\">ConfigurableSolver</a> config handle =&gt; config -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"solveMulti","module":"Grisette.Core","link":"Grisette-Core.html#v:solveMulti"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UnionWithExcept\">UnionWithExcept</a> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v | t -&gt; u e v <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:extractUnionExcept\">extractUnionExcept</a> :: t -&gt; u (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v)</li></ul>","name":"UnionWithExcept extractUnionExcept","module":"Grisette.Core","link":"Grisette-Core.html#t:UnionWithExcept"},{"display_html":"<a href=\"#v:solverSolveExcept\">solverSolveExcept</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v handle. (<a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> u, <a href=\"Grisette-Core.html#t:Solver\" title=\"Grisette.Core\">Solver</a> handle) =&gt; handle -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a> <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>)","name":"solverSolveExcept","module":"Grisette.Core","link":"Grisette-Core.html#v:solverSolveExcept"},{"display_html":"<a href=\"#v:solveExcept\">solveExcept</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v config handle. (<a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> u, <a href=\"Grisette-Core.html#t:ConfigurableSolver\" title=\"Grisette.Core\">ConfigurableSolver</a> config handle) =&gt; config -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a> <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>)","name":"solveExcept","module":"Grisette.Core","link":"Grisette-Core.html#v:solveExcept"},{"display_html":"<a href=\"#v:solverSolveMultiExcept\">solverSolveMultiExcept</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v handle. (<a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> u, <a href=\"Grisette-Core.html#t:Solver\" title=\"Grisette.Core\">Solver</a> handle) =&gt; handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"solverSolveMultiExcept","module":"Grisette.Core","link":"Grisette-Core.html#v:solverSolveMultiExcept"},{"display_html":"<a href=\"#v:solveMultiExcept\">solveMultiExcept</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v config handle. (<a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> u, <a href=\"Grisette-Core.html#t:ConfigurableSolver\" title=\"Grisette.Core\">ConfigurableSolver</a> config handle) =&gt; config -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"solveMultiExcept","module":"Grisette.Core","link":"Grisette-Core.html#v:solveMultiExcept"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:VerifierResult\">VerifierResult</a> cex exception<ul class=\"subs\"><li>= <a href=\"#v:CEGISVerifierFoundCex\">CEGISVerifierFoundCex</a> cex</li><li>| <a href=\"#v:CEGISVerifierNoCex\">CEGISVerifierNoCex</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li>| <a href=\"#v:CEGISVerifierException\">CEGISVerifierException</a> exception</li></ul>","name":"VerifierResult CEGISVerifierFoundCex CEGISVerifierNoCex CEGISVerifierException","module":"Grisette.Core","link":"Grisette-Core.html#t:VerifierResult"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SynthesisConstraintFun\">SynthesisConstraintFun</a> cex = cex -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"SynthesisConstraintFun","module":"Grisette.Core","link":"Grisette-Core.html#t:SynthesisConstraintFun"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:VerifierFun\">VerifierFun</a> cex exception = <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"Grisette-Core.html#t:VerifierResult\" title=\"Grisette.Core\">VerifierResult</a> cex exception)","name":"VerifierFun","module":"Grisette.Core","link":"Grisette-Core.html#t:VerifierFun"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CEGISResult\">CEGISResult</a> exception<ul class=\"subs\"><li>= <a href=\"#v:CEGISSuccess\">CEGISSuccess</a> <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a></li><li>| <a href=\"#v:CEGISVerifierFailure\">CEGISVerifierFailure</a> exception</li><li>| <a href=\"#v:CEGISSolverFailure\">CEGISSolverFailure</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a></li></ul>","name":"CEGISResult CEGISSuccess CEGISVerifierFailure CEGISSolverFailure","module":"Grisette.Core","link":"Grisette-Core.html#t:CEGISResult"},{"display_html":"<a href=\"#v:solverGenericCEGIS\">solverGenericCEGIS</a> :: <a href=\"Grisette-Core.html#t:Solver\" title=\"Grisette.Core\">Solver</a> handle =&gt; handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Core.html#t:SynthesisConstraintFun\" title=\"Grisette.Core\">SynthesisConstraintFun</a> input -&gt; [<a href=\"Grisette-Core.html#t:VerifierFun\" title=\"Grisette.Core\">VerifierFun</a> input exception] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([input], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> exception)","name":"solverGenericCEGIS","module":"Grisette.Core","link":"Grisette-Core.html#v:solverGenericCEGIS"},{"display_html":"<a href=\"#v:solverGenericCEGISWithRefinement\">solverGenericCEGISWithRefinement</a> :: <a href=\"Grisette-Core.html#t:Solver\" title=\"Grisette.Core\">Solver</a> handle =&gt; handle -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Core.html#t:SynthesisConstraintFun\" title=\"Grisette.Core\">SynthesisConstraintFun</a> input -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> RefinementConditionFun -&gt; [<a href=\"Grisette-Core.html#t:VerifierFun\" title=\"Grisette.Core\">VerifierFun</a> input exception] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([input], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> exception)","name":"solverGenericCEGISWithRefinement","module":"Grisette.Core","link":"Grisette-Core.html#v:solverGenericCEGISWithRefinement"},{"display_html":"<a href=\"#v:genericCEGIS\">genericCEGIS</a> :: <a href=\"Grisette-Core.html#t:ConfigurableSolver\" title=\"Grisette.Core\">ConfigurableSolver</a> config handle =&gt; config -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Core.html#t:SynthesisConstraintFun\" title=\"Grisette.Core\">SynthesisConstraintFun</a> input -&gt; [<a href=\"Grisette-Core.html#t:VerifierFun\" title=\"Grisette.Core\">VerifierFun</a> input exception] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([input], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> exception)","name":"genericCEGIS","module":"Grisette.Core","link":"Grisette-Core.html#v:genericCEGIS"},{"display_html":"<a href=\"#v:genericCEGISWithRefinement\">genericCEGISWithRefinement</a> :: <a href=\"Grisette-Core.html#t:ConfigurableSolver\" title=\"Grisette.Core\">ConfigurableSolver</a> config handle =&gt; config -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Core.html#t:SynthesisConstraintFun\" title=\"Grisette.Core\">SynthesisConstraintFun</a> input -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> RefinementConditionFun -&gt; [<a href=\"Grisette-Core.html#t:VerifierFun\" title=\"Grisette.Core\">VerifierFun</a> input exception] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([input], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> exception)","name":"genericCEGISWithRefinement","module":"Grisette.Core","link":"Grisette-Core.html#v:genericCEGISWithRefinement"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CEGISCondition\">CEGISCondition</a> = <a href=\"#v:CEGISCondition\">CEGISCondition</a> <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"CEGISCondition CEGISCondition","module":"Grisette.Core","link":"Grisette-Core.html#t:CEGISCondition"},{"display_html":"<a href=\"#v:solverCegisMultiInputs\">solverCegisMultiInputs</a> :: (<a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> input, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> input, <a href=\"Grisette-Core.html#t:Solver\" title=\"Grisette.Core\">Solver</a> handle) =&gt; handle -&gt; handle -&gt; [input] -&gt; (input -&gt; <a href=\"Grisette-Core.html#t:CEGISCondition\" title=\"Grisette.Core\">CEGISCondition</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([input], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"solverCegisMultiInputs","module":"Grisette.Core","link":"Grisette-Core.html#v:solverCegisMultiInputs"},{"display_html":"<a href=\"#v:solverCegis\">solverCegis</a> :: (<a href=\"Grisette-Core.html#t:Solver\" title=\"Grisette.Core\">Solver</a> handle, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> inputs, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> inputs, <a href=\"Grisette-Core.html#t:SymEq\" title=\"Grisette.Core\">SymEq</a> inputs) =&gt; handle -&gt; handle -&gt; inputs -&gt; (inputs -&gt; <a href=\"Grisette-Core.html#t:CEGISCondition\" title=\"Grisette.Core\">CEGISCondition</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"solverCegis","module":"Grisette.Core","link":"Grisette-Core.html#v:solverCegis"},{"display_html":"<a href=\"#v:solverCegisExcept\">solverCegisExcept</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v inputs handle. (<a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> u, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> inputs, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> inputs, <a href=\"Grisette-Core.html#t:Solver\" title=\"Grisette.Core\">Solver</a> handle, <a href=\"Grisette-Core.html#t:SymEq\" title=\"Grisette.Core\">SymEq</a> inputs) =&gt; handle -&gt; handle -&gt; inputs -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; <a href=\"Grisette-Core.html#t:CEGISCondition\" title=\"Grisette.Core\">CEGISCondition</a>) -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"solverCegisExcept","module":"Grisette.Core","link":"Grisette-Core.html#v:solverCegisExcept"},{"display_html":"<a href=\"#v:solverCegisExceptStdVC\">solverCegisExceptStdVC</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) inputs handle. (<a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u <a href=\"Grisette-Core.html#t:VerificationConditions\" title=\"Grisette.Core\">VerificationConditions</a> (), <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> inputs, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> inputs, <a href=\"Grisette-Core.html#t:Solver\" title=\"Grisette.Core\">Solver</a> handle, <a href=\"Grisette-Core.html#t:SymEq\" title=\"Grisette.Core\">SymEq</a> inputs) =&gt; handle -&gt; handle -&gt; inputs -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"solverCegisExceptStdVC","module":"Grisette.Core","link":"Grisette-Core.html#v:solverCegisExceptStdVC"},{"display_html":"<a href=\"#v:solverCegisExceptVC\">solverCegisExceptVC</a> :: (<a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> inputs, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> inputs, <a href=\"Grisette-Core.html#t:Solver\" title=\"Grisette.Core\">Solver</a> handle, <a href=\"Grisette-Core.html#t:SymEq\" title=\"Grisette.Core\">SymEq</a> inputs) =&gt; handle -&gt; handle -&gt; inputs -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; u (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Core.html#t:VerificationConditions\" title=\"Grisette.Core\">VerificationConditions</a> ())) -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"solverCegisExceptVC","module":"Grisette.Core","link":"Grisette-Core.html#v:solverCegisExceptVC"},{"display_html":"<a href=\"#v:solverCegisExceptMultiInputs\">solverCegisExceptMultiInputs</a> :: <span class=\"keyword\">forall</span> handle inputs t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v. (<a href=\"Grisette-Core.html#t:Solver\" title=\"Grisette.Core\">Solver</a> handle, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> inputs, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> inputs, <a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u) =&gt; handle -&gt; handle -&gt; [inputs] -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; <a href=\"Grisette-Core.html#t:CEGISCondition\" title=\"Grisette.Core\">CEGISCondition</a>) -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"solverCegisExceptMultiInputs","module":"Grisette.Core","link":"Grisette-Core.html#v:solverCegisExceptMultiInputs"},{"display_html":"<a href=\"#v:solverCegisExceptStdVCMultiInputs\">solverCegisExceptStdVCMultiInputs</a> :: <span class=\"keyword\">forall</span> handle inputs t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Core.html#t:Solver\" title=\"Grisette.Core\">Solver</a> handle, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> inputs, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> inputs, <a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u <a href=\"Grisette-Core.html#t:VerificationConditions\" title=\"Grisette.Core\">VerificationConditions</a> (), <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u) =&gt; handle -&gt; handle -&gt; [inputs] -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"solverCegisExceptStdVCMultiInputs","module":"Grisette.Core","link":"Grisette-Core.html#v:solverCegisExceptStdVCMultiInputs"},{"display_html":"<a href=\"#v:solverCegisExceptVCMultiInputs\">solverCegisExceptVCMultiInputs</a> :: (<a href=\"Grisette-Core.html#t:Solver\" title=\"Grisette.Core\">Solver</a> handle, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> inputs, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> inputs, <a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u) =&gt; handle -&gt; handle -&gt; [inputs] -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; u (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Core.html#t:VerificationConditions\" title=\"Grisette.Core\">VerificationConditions</a> ())) -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"solverCegisExceptVCMultiInputs","module":"Grisette.Core","link":"Grisette-Core.html#v:solverCegisExceptVCMultiInputs"},{"display_html":"<a href=\"#v:solverCegisForAll\">solverCegisForAll</a> :: (<a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> forallInput, <a href=\"Grisette-Core.html#t:Solver\" title=\"Grisette.Core\">Solver</a> handle) =&gt; handle -&gt; handle -&gt; forallInput -&gt; <a href=\"Grisette-Core.html#t:CEGISCondition\" title=\"Grisette.Core\">CEGISCondition</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"solverCegisForAll","module":"Grisette.Core","link":"Grisette-Core.html#v:solverCegisForAll"},{"display_html":"<a href=\"#v:solverCegisForAllExcept\">solverCegisForAllExcept</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v inputs handle. (<a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> u, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> inputs, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> inputs, <a href=\"Grisette-Core.html#t:Solver\" title=\"Grisette.Core\">Solver</a> handle, <a href=\"Grisette-Core.html#t:SymEq\" title=\"Grisette.Core\">SymEq</a> inputs) =&gt; handle -&gt; handle -&gt; inputs -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; <a href=\"Grisette-Core.html#t:CEGISCondition\" title=\"Grisette.Core\">CEGISCondition</a>) -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"solverCegisForAllExcept","module":"Grisette.Core","link":"Grisette-Core.html#v:solverCegisForAllExcept"},{"display_html":"<a href=\"#v:solverCegisForAllExceptStdVC\">solverCegisForAllExceptStdVC</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) inputs handle. (<a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u <a href=\"Grisette-Core.html#t:VerificationConditions\" title=\"Grisette.Core\">VerificationConditions</a> (), <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> inputs, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> inputs, <a href=\"Grisette-Core.html#t:Solver\" title=\"Grisette.Core\">Solver</a> handle, <a href=\"Grisette-Core.html#t:SymEq\" title=\"Grisette.Core\">SymEq</a> inputs) =&gt; handle -&gt; handle -&gt; inputs -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"solverCegisForAllExceptStdVC","module":"Grisette.Core","link":"Grisette-Core.html#v:solverCegisForAllExceptStdVC"},{"display_html":"<a href=\"#v:solverCegisForAllExceptVC\">solverCegisForAllExceptVC</a> :: (<a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> inputs, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> inputs, <a href=\"Grisette-Core.html#t:Solver\" title=\"Grisette.Core\">Solver</a> handle, <a href=\"Grisette-Core.html#t:SymEq\" title=\"Grisette.Core\">SymEq</a> inputs) =&gt; handle -&gt; handle -&gt; inputs -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; u (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Core.html#t:VerificationConditions\" title=\"Grisette.Core\">VerificationConditions</a> ())) -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"solverCegisForAllExceptVC","module":"Grisette.Core","link":"Grisette-Core.html#v:solverCegisForAllExceptVC"},{"display_html":"<a href=\"#v:cegisPostCond\">cegisPostCond</a> :: <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Core.html#t:CEGISCondition\" title=\"Grisette.Core\">CEGISCondition</a>","name":"cegisPostCond","module":"Grisette.Core","link":"Grisette-Core.html#v:cegisPostCond"},{"display_html":"<a href=\"#v:cegisPrePost\">cegisPrePost</a> :: <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; <a href=\"Grisette-Core.html#t:CEGISCondition\" title=\"Grisette.Core\">CEGISCondition</a>","name":"cegisPrePost","module":"Grisette.Core","link":"Grisette-Core.html#v:cegisPrePost"},{"display_html":"<a href=\"#v:cegisMultiInputs\">cegisMultiInputs</a> :: (<a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> input, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> input, <a href=\"Grisette-Core.html#t:ConfigurableSolver\" title=\"Grisette.Core\">ConfigurableSolver</a> config handle) =&gt; config -&gt; [input] -&gt; (input -&gt; <a href=\"Grisette-Core.html#t:CEGISCondition\" title=\"Grisette.Core\">CEGISCondition</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([input], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"cegisMultiInputs","module":"Grisette.Core","link":"Grisette-Core.html#v:cegisMultiInputs"},{"display_html":"<a href=\"#v:cegis\">cegis</a> :: (<a href=\"Grisette-Core.html#t:ConfigurableSolver\" title=\"Grisette.Core\">ConfigurableSolver</a> config handle, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> inputs, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> inputs, <a href=\"Grisette-Core.html#t:SymEq\" title=\"Grisette.Core\">SymEq</a> inputs) =&gt; config -&gt; inputs -&gt; (inputs -&gt; <a href=\"Grisette-Core.html#t:CEGISCondition\" title=\"Grisette.Core\">CEGISCondition</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"cegis","module":"Grisette.Core","link":"Grisette-Core.html#v:cegis"},{"display_html":"<a href=\"#v:cegisExcept\">cegisExcept</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v inputs config handle. (<a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> u, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> inputs, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> inputs, <a href=\"Grisette-Core.html#t:ConfigurableSolver\" title=\"Grisette.Core\">ConfigurableSolver</a> config handle, <a href=\"Grisette-Core.html#t:SymEq\" title=\"Grisette.Core\">SymEq</a> inputs) =&gt; config -&gt; inputs -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; <a href=\"Grisette-Core.html#t:CEGISCondition\" title=\"Grisette.Core\">CEGISCondition</a>) -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"cegisExcept","module":"Grisette.Core","link":"Grisette-Core.html#v:cegisExcept"},{"display_html":"<a href=\"#v:cegisExceptStdVC\">cegisExceptStdVC</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) inputs config handle. (<a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u <a href=\"Grisette-Core.html#t:VerificationConditions\" title=\"Grisette.Core\">VerificationConditions</a> (), <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> inputs, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> inputs, <a href=\"Grisette-Core.html#t:ConfigurableSolver\" title=\"Grisette.Core\">ConfigurableSolver</a> config handle, <a href=\"Grisette-Core.html#t:SymEq\" title=\"Grisette.Core\">SymEq</a> inputs) =&gt; config -&gt; inputs -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"cegisExceptStdVC","module":"Grisette.Core","link":"Grisette-Core.html#v:cegisExceptStdVC"},{"display_html":"<a href=\"#v:cegisExceptVC\">cegisExceptVC</a> :: (<a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> inputs, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> inputs, <a href=\"Grisette-Core.html#t:ConfigurableSolver\" title=\"Grisette.Core\">ConfigurableSolver</a> config handle, <a href=\"Grisette-Core.html#t:SymEq\" title=\"Grisette.Core\">SymEq</a> inputs) =&gt; config -&gt; inputs -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; u (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Core.html#t:VerificationConditions\" title=\"Grisette.Core\">VerificationConditions</a> ())) -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"cegisExceptVC","module":"Grisette.Core","link":"Grisette-Core.html#v:cegisExceptVC"},{"display_html":"<a href=\"#v:cegisExceptMultiInputs\">cegisExceptMultiInputs</a> :: <span class=\"keyword\">forall</span> config handle inputs t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v. (<a href=\"Grisette-Core.html#t:ConfigurableSolver\" title=\"Grisette.Core\">ConfigurableSolver</a> config handle, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> inputs, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> inputs, <a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u) =&gt; config -&gt; [inputs] -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; <a href=\"Grisette-Core.html#t:CEGISCondition\" title=\"Grisette.Core\">CEGISCondition</a>) -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"cegisExceptMultiInputs","module":"Grisette.Core","link":"Grisette-Core.html#v:cegisExceptMultiInputs"},{"display_html":"<a href=\"#v:cegisExceptStdVCMultiInputs\">cegisExceptStdVCMultiInputs</a> :: <span class=\"keyword\">forall</span> config handle inputs t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Grisette-Core.html#t:ConfigurableSolver\" title=\"Grisette.Core\">ConfigurableSolver</a> config handle, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> inputs, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> inputs, <a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u <a href=\"Grisette-Core.html#t:VerificationConditions\" title=\"Grisette.Core\">VerificationConditions</a> (), <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u) =&gt; config -&gt; [inputs] -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"cegisExceptStdVCMultiInputs","module":"Grisette.Core","link":"Grisette-Core.html#v:cegisExceptStdVCMultiInputs"},{"display_html":"<a href=\"#v:cegisExceptVCMultiInputs\">cegisExceptVCMultiInputs</a> :: (<a href=\"Grisette-Core.html#t:ConfigurableSolver\" title=\"Grisette.Core\">ConfigurableSolver</a> config handle, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> inputs, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> inputs, <a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u) =&gt; config -&gt; [inputs] -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; u (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Core.html#t:VerificationConditions\" title=\"Grisette.Core\">VerificationConditions</a> ())) -&gt; (inputs -&gt; t) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([inputs], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"cegisExceptVCMultiInputs","module":"Grisette.Core","link":"Grisette-Core.html#v:cegisExceptVCMultiInputs"},{"display_html":"<a href=\"#v:cegisForAll\">cegisForAll</a> :: (<a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> forallInput, <a href=\"Grisette-Core.html#t:ConfigurableSolver\" title=\"Grisette.Core\">ConfigurableSolver</a> config handle) =&gt; config -&gt; forallInput -&gt; <a href=\"Grisette-Core.html#t:CEGISCondition\" title=\"Grisette.Core\">CEGISCondition</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"cegisForAll","module":"Grisette.Core","link":"Grisette-Core.html#v:cegisForAll"},{"display_html":"<a href=\"#v:cegisForAllExcept\">cegisForAllExcept</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e v inputs config handle. (<a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> u, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> inputs, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> inputs, <a href=\"Grisette-Core.html#t:ConfigurableSolver\" title=\"Grisette.Core\">ConfigurableSolver</a> config handle, <a href=\"Grisette-Core.html#t:SymEq\" title=\"Grisette.Core\">SymEq</a> inputs) =&gt; config -&gt; inputs -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; <a href=\"Grisette-Core.html#t:CEGISCondition\" title=\"Grisette.Core\">CEGISCondition</a>) -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"cegisForAllExcept","module":"Grisette.Core","link":"Grisette-Core.html#v:cegisForAllExcept"},{"display_html":"<a href=\"#v:cegisForAllExceptStdVC\">cegisForAllExceptStdVC</a> :: <span class=\"keyword\">forall</span> t (u :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) inputs config handle. (<a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u <a href=\"Grisette-Core.html#t:VerificationConditions\" title=\"Grisette.Core\">VerificationConditions</a> (), <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> inputs, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> inputs, <a href=\"Grisette-Core.html#t:ConfigurableSolver\" title=\"Grisette.Core\">ConfigurableSolver</a> config handle, <a href=\"Grisette-Core.html#t:SymEq\" title=\"Grisette.Core\">SymEq</a> inputs) =&gt; config -&gt; inputs -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"cegisForAllExceptStdVC","module":"Grisette.Core","link":"Grisette-Core.html#v:cegisForAllExceptStdVC"},{"display_html":"<a href=\"#v:cegisForAllExceptVC\">cegisForAllExceptVC</a> :: (<a href=\"Grisette-Core.html#t:UnionWithExcept\" title=\"Grisette.Core\">UnionWithExcept</a> t u e v, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> u, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> inputs, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> inputs, <a href=\"Grisette-Core.html#t:ConfigurableSolver\" title=\"Grisette.Core\">ConfigurableSolver</a> config handle, <a href=\"Grisette-Core.html#t:SymEq\" title=\"Grisette.Core\">SymEq</a> inputs) =&gt; config -&gt; inputs -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> e v -&gt; u (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Grisette-Core.html#t:VerificationConditions\" title=\"Grisette.Core\">VerificationConditions</a> ())) -&gt; t -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ([<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a>], <a href=\"Grisette-Core.html#t:CEGISResult\" title=\"Grisette.Core\">CEGISResult</a> <a href=\"Grisette-Core.html#t:SolvingFailure\" title=\"Grisette.Core\">SolvingFailure</a>)","name":"cegisForAllExceptVC","module":"Grisette.Core","link":"Grisette-Core.html#v:cegisForAllExceptVC"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Monoid.html#t:Monoid\" title=\"Data.Monoid\">Monoid</a> symbolSet =&gt; <a href=\"#t:SymbolSetOps\">SymbolSetOps</a> symbolSet (typedSymbol :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) | symbolSet -&gt; typedSymbol <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:emptySet\">emptySet</a> :: symbolSet</li><li><a href=\"#v:isEmptySet\">isEmptySet</a> :: symbolSet -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:containsSymbol\">containsSymbol</a> :: typedSymbol a -&gt; symbolSet -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:insertSymbol\">insertSymbol</a> :: typedSymbol a -&gt; symbolSet -&gt; symbolSet</li><li><a href=\"#v:intersectionSet\">intersectionSet</a> :: symbolSet -&gt; symbolSet -&gt; symbolSet</li><li><a href=\"#v:unionSet\">unionSet</a> :: symbolSet -&gt; symbolSet -&gt; symbolSet</li><li><a href=\"#v:differenceSet\">differenceSet</a> :: symbolSet -&gt; symbolSet -&gt; symbolSet</li></ul>","name":"SymbolSetOps isEmptySet containsSymbol differenceSet emptySet insertSymbol intersectionSet unionSet","module":"Grisette.Core","link":"Grisette-Core.html#t:SymbolSetOps"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Core.html#t:SymbolSetOps\" title=\"Grisette.Core\">SymbolSetOps</a> symbolSet typedSymbol =&gt; <a href=\"#t:SymbolSetRep\">SymbolSetRep</a> rep symbolSet (typedSymbol :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:buildSymbolSet\">buildSymbolSet</a> :: rep -&gt; symbolSet</li></ul>","name":"SymbolSetRep buildSymbolSet","module":"Grisette.Core","link":"Grisette-Core.html#t:SymbolSetRep"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ExtractSym\">ExtractSym</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:extractSym\">extractSym</a> :: a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:AnySymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">AnySymbolSet</a></li><li><a href=\"#v:extractSymMaybe\">extractSymMaybe</a> :: <span class=\"keyword\">forall</span> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)</li></ul>","name":"ExtractSym extractSymMaybe extractSym $dmextractSym","module":"Grisette.Core","link":"Grisette-Core.html#t:ExtractSym"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> a =&gt; <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> (f a)) =&gt; <a href=\"#t:ExtractSym1\">ExtractSym1</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftExtractSymMaybe\">liftExtractSymMaybe</a> :: <span class=\"keyword\">forall</span> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)) -&gt; f a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)</li></ul>","name":"ExtractSym1 liftExtractSymMaybe","module":"Grisette.Core","link":"Grisette-Core.html#t:ExtractSym1"},{"display_html":"<a href=\"#v:extractSym1\">extractSym1</a> :: <span class=\"keyword\">forall</span> f a (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). (<a href=\"Grisette-Core.html#t:ExtractSym1\" title=\"Grisette.Core\">ExtractSym1</a> f, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; f a -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd","name":"extractSym1","module":"Grisette.Core","link":"Grisette-Core.html#v:extractSym1"},{"display_html":"<a href=\"#v:extractSymMaybe1\">extractSymMaybe1</a> :: <span class=\"keyword\">forall</span> f a (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). (<a href=\"Grisette-Core.html#t:ExtractSym1\" title=\"Grisette.Core\">ExtractSym1</a> f, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; f a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)","name":"extractSymMaybe1","module":"Grisette.Core","link":"Grisette-Core.html#v:extractSymMaybe1"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> a =&gt; <a href=\"Grisette-Core.html#t:ExtractSym1\" title=\"Grisette.Core\">ExtractSym1</a> (f a)) =&gt; <a href=\"#t:ExtractSym2\">ExtractSym2</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftExtractSymMaybe2\">liftExtractSymMaybe2</a> :: <span class=\"keyword\">forall</span> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a b. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)) -&gt; (b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)) -&gt; f a b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)</li></ul>","name":"ExtractSym2 liftExtractSymMaybe2","module":"Grisette.Core","link":"Grisette-Core.html#t:ExtractSym2"},{"display_html":"<a href=\"#v:extractSym2\">extractSym2</a> :: <span class=\"keyword\">forall</span> f a b (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). (<a href=\"Grisette-Core.html#t:ExtractSym2\" title=\"Grisette.Core\">ExtractSym2</a> f, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> a, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> b, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; f a b -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd","name":"extractSym2","module":"Grisette.Core","link":"Grisette-Core.html#v:extractSym2"},{"display_html":"<a href=\"#v:extractSymMaybe2\">extractSymMaybe2</a> :: <span class=\"keyword\">forall</span> f a b (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). (<a href=\"Grisette-Core.html#t:ExtractSym2\" title=\"Grisette.Core\">ExtractSym2</a> f, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> a, <a href=\"Grisette-Core.html#t:ExtractSym\" title=\"Grisette.Core\">ExtractSym</a> b, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; f a b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)","name":"extractSymMaybe2","module":"Grisette.Core","link":"Grisette-Core.html#v:extractSymMaybe2"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Grisette-Core.html#t:SymbolSetOps\" title=\"Grisette.Core\">SymbolSetOps</a> symbolSet typedSymbol =&gt; <a href=\"#t:ModelOps\">ModelOps</a> model symbolSet (typedSymbol :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) | model -&gt; symbolSet typedSymbol <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:emptyModel\">emptyModel</a> :: model</li><li><a href=\"#v:isEmptyModel\">isEmptyModel</a> :: model -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:modelContains\">modelContains</a> :: typedSymbol a -&gt; model -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:valueOf\">valueOf</a> :: typedSymbol t -&gt; model -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> t</li><li><a href=\"#v:insertValue\">insertValue</a> :: typedSymbol t -&gt; t -&gt; model -&gt; model</li><li><a href=\"#v:exceptFor\">exceptFor</a> :: symbolSet -&gt; model -&gt; model</li><li><a href=\"#v:exceptFor-39-\">exceptFor'</a> :: typedSymbol t -&gt; model -&gt; model</li><li><a href=\"#v:restrictTo\">restrictTo</a> :: symbolSet -&gt; model -&gt; model</li><li><a href=\"#v:extendTo\">extendTo</a> :: symbolSet -&gt; model -&gt; model</li><li><a href=\"#v:exact\">exact</a> :: symbolSet -&gt; model -&gt; model</li></ul>","name":"ModelOps emptyModel insertValue exact exceptFor exceptFor' extendTo isEmptyModel modelContains restrictTo valueOf $dmexact","module":"Grisette.Core","link":"Grisette-Core.html#t:ModelOps"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ModelRep\">ModelRep</a> rep model | rep -&gt; model <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:buildModel\">buildModel</a> :: rep -&gt; model</li></ul>","name":"ModelRep buildModel","module":"Grisette.Core","link":"Grisette-Core.html#t:ModelRep"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:EvalSym\">EvalSym</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:evalSym\">evalSym</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; a -&gt; a</li></ul>","name":"EvalSym evalSym","module":"Grisette.Core","link":"Grisette-Core.html#t:EvalSym"},{"display_html":"<a href=\"#v:evalSymToCon\">evalSymToCon</a> :: (<a href=\"Grisette-Core.html#t:ToCon\" title=\"Grisette.Core\">ToCon</a> a b, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> a) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; a -&gt; b","name":"evalSymToCon","module":"Grisette.Core","link":"Grisette-Core.html#v:evalSymToCon"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> a =&gt; <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> (f a)) =&gt; <a href=\"#t:EvalSym1\">EvalSym1</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftEvalSym\">liftEvalSym</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; a -&gt; a) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; f a -&gt; f a</li></ul>","name":"EvalSym1 liftEvalSym","module":"Grisette.Core","link":"Grisette-Core.html#t:EvalSym1"},{"display_html":"<a href=\"#v:evalSym1\">evalSym1</a> :: (<a href=\"Grisette-Core.html#t:EvalSym1\" title=\"Grisette.Core\">EvalSym1</a> f, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; f a -&gt; f a","name":"evalSym1","module":"Grisette.Core","link":"Grisette-Core.html#v:evalSym1"},{"display_html":"<a href=\"#v:evalSymToCon1\">evalSymToCon1</a> :: (<a href=\"Grisette-Core.html#t:EvalSym1\" title=\"Grisette.Core\">EvalSym1</a> f, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> a, <a href=\"Grisette-Core.html#t:ToCon1\" title=\"Grisette.Core\">ToCon1</a> f g, <a href=\"Grisette-Core.html#t:ToCon\" title=\"Grisette.Core\">ToCon</a> a b) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; f a -&gt; g b","name":"evalSymToCon1","module":"Grisette.Core","link":"Grisette-Core.html#v:evalSymToCon1"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> a =&gt; <a href=\"Grisette-Core.html#t:EvalSym1\" title=\"Grisette.Core\">EvalSym1</a> (f a)) =&gt; <a href=\"#t:EvalSym2\">EvalSym2</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftEvalSym2\">liftEvalSym2</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; a -&gt; a) -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; b -&gt; b) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; f a b -&gt; f a b</li></ul>","name":"EvalSym2 liftEvalSym2","module":"Grisette.Core","link":"Grisette-Core.html#t:EvalSym2"},{"display_html":"<a href=\"#v:evalSym2\">evalSym2</a> :: (<a href=\"Grisette-Core.html#t:EvalSym2\" title=\"Grisette.Core\">EvalSym2</a> f, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> a, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> b) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; f a b -&gt; f a b","name":"evalSym2","module":"Grisette.Core","link":"Grisette-Core.html#v:evalSym2"},{"display_html":"<a href=\"#v:evalSymToCon2\">evalSymToCon2</a> :: (<a href=\"Grisette-Core.html#t:EvalSym2\" title=\"Grisette.Core\">EvalSym2</a> f, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> a, <a href=\"Grisette-Core.html#t:EvalSym\" title=\"Grisette.Core\">EvalSym</a> c, <a href=\"Grisette-Core.html#t:ToCon2\" title=\"Grisette.Core\">ToCon2</a> f g, <a href=\"Grisette-Core.html#t:ToCon\" title=\"Grisette.Core\">ToCon</a> a b, <a href=\"Grisette-Core.html#t:ToCon\" title=\"Grisette.Core\">ToCon</a> c d) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; f a c -&gt; g b d","name":"evalSymToCon2","module":"Grisette.Core","link":"Grisette-Core.html#v:evalSymToCon2"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:SubstSym\">SubstSym</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:substSym\">substSym</a> :: <span class=\"keyword\">forall</span> cb sb (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> cb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; a -&gt; a</li></ul>","name":"SubstSym substSym","module":"Grisette.Core","link":"Grisette-Core.html#t:SubstSym"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Core.html#t:SubstSym\" title=\"Grisette.Core\">SubstSym</a> a =&gt; <a href=\"Grisette-Core.html#t:SubstSym\" title=\"Grisette.Core\">SubstSym</a> (f a)) =&gt; <a href=\"#t:SubstSym1\">SubstSym1</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftSubstSym\">liftSubstSym</a> :: <span class=\"keyword\">forall</span> cb sb (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> cb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; a -&gt; a) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; f a -&gt; f a</li></ul>","name":"SubstSym1 liftSubstSym","module":"Grisette.Core","link":"Grisette-Core.html#t:SubstSym1"},{"display_html":"<a href=\"#v:substSym1\">substSym1</a> :: <span class=\"keyword\">forall</span> f a cb sb (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). (<a href=\"Grisette-Core.html#t:SubstSym1\" title=\"Grisette.Core\">SubstSym1</a> f, <a href=\"Grisette-Core.html#t:SubstSym\" title=\"Grisette.Core\">SubstSym</a> a, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> cb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; f a -&gt; f a","name":"substSym1","module":"Grisette.Core","link":"Grisette-Core.html#v:substSym1"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Grisette-Core.html#t:SubstSym\" title=\"Grisette.Core\">SubstSym</a> a =&gt; <a href=\"Grisette-Core.html#t:SubstSym1\" title=\"Grisette.Core\">SubstSym1</a> (f a)) =&gt; <a href=\"#t:SubstSym2\">SubstSym2</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftSubstSym2\">liftSubstSym2</a> :: <span class=\"keyword\">forall</span> cb sb (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a b. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> cb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; a -&gt; a) -&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; b -&gt; b) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; f a b -&gt; f a b</li></ul>","name":"SubstSym2 liftSubstSym2","module":"Grisette.Core","link":"Grisette-Core.html#t:SubstSym2"},{"display_html":"<a href=\"#v:substSym2\">substSym2</a> :: <span class=\"keyword\">forall</span> f a b cb sb (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). (<a href=\"Grisette-Core.html#t:SubstSym2\" title=\"Grisette.Core\">SubstSym2</a> f, <a href=\"Grisette-Core.html#t:SubstSym\" title=\"Grisette.Core\">SubstSym</a> a, <a href=\"Grisette-Core.html#t:SubstSym\" title=\"Grisette.Core\">SubstSym</a> b, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> cb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; f a b -&gt; f a b","name":"substSym2","module":"Grisette.Core","link":"Grisette-Core.html#v:substSym2"},{"display_html":"<a href=\"#v:stableMemo\">stableMemo</a> :: (a -&gt; b) -&gt; a -&gt; b","name":"stableMemo","module":"Grisette.Core","link":"Grisette-Core.html#v:stableMemo"},{"display_html":"<a href=\"#v:stableMemo2\">stableMemo2</a> :: (a -&gt; b -&gt; c) -&gt; a -&gt; b -&gt; c","name":"stableMemo2","module":"Grisette.Core","link":"Grisette-Core.html#v:stableMemo2"},{"display_html":"<a href=\"#v:stableMemo3\">stableMemo3</a> :: (a -&gt; b -&gt; c -&gt; d) -&gt; a -&gt; b -&gt; c -&gt; d","name":"stableMemo3","module":"Grisette.Core","link":"Grisette-Core.html#v:stableMemo3"},{"display_html":"<a href=\"#v:stableMup\">stableMup</a> :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c","name":"stableMup","module":"Grisette.Core","link":"Grisette-Core.html#v:stableMup"},{"display_html":"<a href=\"#v:stableMemoFix\">stableMemoFix</a> :: ((a -&gt; b) -&gt; a -&gt; b) -&gt; a -&gt; b","name":"stableMemoFix","module":"Grisette.Core","link":"Grisette-Core.html#v:stableMemoFix"},{"display_html":"<a href=\"#v:weakStableMemo\">weakStableMemo</a> :: (a -&gt; b) -&gt; a -&gt; b","name":"weakStableMemo","module":"Grisette.Core","link":"Grisette-Core.html#v:weakStableMemo"},{"display_html":"<a href=\"#v:weakStableMemo2\">weakStableMemo2</a> :: (a -&gt; b -&gt; c) -&gt; a -&gt; b -&gt; c","name":"weakStableMemo2","module":"Grisette.Core","link":"Grisette-Core.html#v:weakStableMemo2"},{"display_html":"<a href=\"#v:weakStableMemo3\">weakStableMemo3</a> :: (a -&gt; b -&gt; c -&gt; d) -&gt; a -&gt; b -&gt; c -&gt; d","name":"weakStableMemo3","module":"Grisette.Core","link":"Grisette-Core.html#v:weakStableMemo3"},{"display_html":"<a href=\"#v:weakStableMup\">weakStableMup</a> :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c","name":"weakStableMup","module":"Grisette.Core","link":"Grisette-Core.html#v:weakStableMup"},{"display_html":"<a href=\"#v:weakStableMemoFix\">weakStableMemoFix</a> :: ((a -&gt; b) -&gt; a -&gt; b) -&gt; a -&gt; b","name":"weakStableMemoFix","module":"Grisette.Core","link":"Grisette-Core.html#v:weakStableMemoFix"},{"display_html":"<a href=\"#v:htmemo\">htmemo</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> k, <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> k) =&gt; (k -&gt; a) -&gt; k -&gt; a","name":"htmemo","module":"Grisette.Core","link":"Grisette-Core.html#v:htmemo"},{"display_html":"<a href=\"#v:htmemo2\">htmemo2</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> k1, <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> k1, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> k2, <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> k2) =&gt; (k1 -&gt; k2 -&gt; a) -&gt; k1 -&gt; k2 -&gt; a","name":"htmemo2","module":"Grisette.Core","link":"Grisette-Core.html#v:htmemo2"},{"display_html":"<a href=\"#v:htmemo3\">htmemo3</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> k1, <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> k1, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> k2, <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> k2, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> k3, <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> k3) =&gt; (k1 -&gt; k2 -&gt; k3 -&gt; a) -&gt; k1 -&gt; k2 -&gt; k3 -&gt; a","name":"htmemo3","module":"Grisette.Core","link":"Grisette-Core.html#v:htmemo3"},{"display_html":"<a href=\"#v:htmemoFix\">htmemoFix</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> k, <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> k) =&gt; ((k -&gt; a) -&gt; k -&gt; a) -&gt; k -&gt; a","name":"htmemoFix","module":"Grisette.Core","link":"Grisette-Core.html#v:htmemoFix"},{"display_html":"<a href=\"#v:htmup\">htmup</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> k, <a href=\"https://hackage.haskell.org/package/hashable-1.4.7.0/docs/Data-Hashable.html#t:Hashable\" title=\"Data.Hashable\">Hashable</a> k) =&gt; (b -&gt; c) -&gt; (k -&gt; b) -&gt; k -&gt; c","name":"htmup","module":"Grisette.Core","link":"Grisette-Core.html#v:htmup"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Default\">Default</a> a = <a href=\"#v:Default\">Default</a> {<ul class=\"subs\"><li><a href=\"#v:unDefault\">unDefault</a> :: a</li></ul>}","name":"Default Default unDefault","module":"Grisette.Core","link":"Grisette-Core.html#t:Default"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Default1\">Default1</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) a = <a href=\"#v:Default1\">Default1</a> {<ul class=\"subs\"><li><a href=\"#v:unDefault1\">unDefault1</a> :: f a</li></ul>}","name":"Default1 Default1 unDefault1","module":"Grisette.Core","link":"Grisette-Core.html#t:Default1"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:SymEqArgs\">SymEqArgs</a> arity a b","name":"SymEqArgs SymEqArgs0 SymEqArgs1","module":"Grisette.Core","link":"Grisette-Core.html#t:SymEqArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GSymEq\">GSymEq</a> arity (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:gsymEq\">gsymEq</a> :: <a href=\"Grisette-Core.html#t:SymEqArgs\" title=\"Grisette.Core\">SymEqArgs</a> arity a b -&gt; f a -&gt; f b -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a></li></ul>","name":"GSymEq gsymEq","module":"Grisette.Core","link":"Grisette-Core.html#t:GSymEq"},{"display_html":"<a href=\"#v:genericSymEq\">genericSymEq</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"Grisette-Core.html#t:GSymEq\" title=\"Grisette.Core\">GSymEq</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a)) =&gt; a -&gt; a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"genericSymEq","module":"Grisette.Core","link":"Grisette-Core.html#v:genericSymEq"},{"display_html":"<a href=\"#v:genericLiftSymEq\">genericLiftSymEq</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f, <a href=\"Grisette-Core.html#t:GSymEq\" title=\"Grisette.Core\">GSymEq</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f)) =&gt; (a -&gt; b -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>) -&gt; f a -&gt; f b -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a>","name":"genericLiftSymEq","module":"Grisette.Core","link":"Grisette-Core.html#v:genericLiftSymEq"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:SymOrdArgs\">SymOrdArgs</a> arity a b","name":"SymOrdArgs SymOrdArgs0 SymOrdArgs1","module":"Grisette.Core","link":"Grisette-Core.html#t:SymOrdArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GSymOrd\">GSymOrd</a> arity (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:gsymCompare\">gsymCompare</a> :: <a href=\"Grisette-Core.html#t:SymOrdArgs\" title=\"Grisette.Core\">SymOrdArgs</a> arity a b -&gt; f a -&gt; f b -&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a></li></ul>","name":"GSymOrd gsymCompare","module":"Grisette.Core","link":"Grisette-Core.html#t:GSymOrd"},{"display_html":"<a href=\"#v:genericSymCompare\">genericSymCompare</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"Grisette-Core.html#t:GSymOrd\" title=\"Grisette.Core\">GSymOrd</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a)) =&gt; a -&gt; a -&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>","name":"genericSymCompare","module":"Grisette.Core","link":"Grisette-Core.html#v:genericSymCompare"},{"display_html":"<a href=\"#v:genericLiftSymCompare\">genericLiftSymCompare</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f, <a href=\"Grisette-Core.html#t:GSymOrd\" title=\"Grisette.Core\">GSymOrd</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f)) =&gt; (a -&gt; b -&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>) -&gt; f a -&gt; f b -&gt; <a href=\"Grisette-Core.html#t:Union\" title=\"Grisette.Core\">Union</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Ord.html#t:Ordering\" title=\"Data.Ord\">Ordering</a>","name":"genericLiftSymCompare","module":"Grisette.Core","link":"Grisette-Core.html#v:genericLiftSymCompare"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:MergeableArgs\">MergeableArgs</a> arity a","name":"MergeableArgs MergeableArgs0 MergeableArgs1","module":"Grisette.Core","link":"Grisette-Core.html#t:MergeableArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GMergeable\">GMergeable</a> arity (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:grootStrategy\">grootStrategy</a> :: <a href=\"Grisette-Core.html#t:MergeableArgs\" title=\"Grisette.Core\">MergeableArgs</a> arity a -&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> (f a)</li></ul>","name":"GMergeable grootStrategy","module":"Grisette.Core","link":"Grisette-Core.html#t:GMergeable"},{"display_html":"<a href=\"#v:genericRootStrategy\">genericRootStrategy</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"Grisette-Core.html#t:GMergeable\" title=\"Grisette.Core\">GMergeable</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a)) =&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> a","name":"genericRootStrategy","module":"Grisette.Core","link":"Grisette-Core.html#v:genericRootStrategy"},{"display_html":"<a href=\"#v:genericLiftRootStrategy\">genericLiftRootStrategy</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f, <a href=\"Grisette-Core.html#t:GMergeable\" title=\"Grisette.Core\">GMergeable</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f)) =&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> a -&gt; <a href=\"Grisette-Core.html#t:MergingStrategy\" title=\"Grisette.Core\">MergingStrategy</a> (f a)","name":"genericLiftRootStrategy","module":"Grisette.Core","link":"Grisette-Core.html#v:genericLiftRootStrategy"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:SimpleMergeableArgs\">SimpleMergeableArgs</a> arity a","name":"SimpleMergeableArgs SimpleMergeableArgs0 SimpleMergeableArgs1","module":"Grisette.Core","link":"Grisette-Core.html#t:SimpleMergeableArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GSimpleMergeable\">GSimpleMergeable</a> arity (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:gmrgIte\">gmrgIte</a> :: <a href=\"Grisette-Core.html#t:SimpleMergeableArgs\" title=\"Grisette.Core\">SimpleMergeableArgs</a> arity a -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; f a -&gt; f a -&gt; f a</li></ul>","name":"GSimpleMergeable gmrgIte","module":"Grisette.Core","link":"Grisette-Core.html#t:GSimpleMergeable"},{"display_html":"<a href=\"#v:genericMrgIte\">genericMrgIte</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"Grisette-Core.html#t:GSimpleMergeable\" title=\"Grisette.Core\">GSimpleMergeable</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a)) =&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; a -&gt; a -&gt; a","name":"genericMrgIte","module":"Grisette.Core","link":"Grisette-Core.html#v:genericMrgIte"},{"display_html":"<a href=\"#v:genericLiftMrgIte\">genericLiftMrgIte</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f, <a href=\"Grisette-Core.html#t:GSimpleMergeable\" title=\"Grisette.Core\">GSimpleMergeable</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f)) =&gt; (<a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; a -&gt; a -&gt; a) -&gt; <a href=\"Grisette-Internal-SymPrim-SymBool.html#t:SymBool\" title=\"Grisette.Internal.SymPrim.SymBool\">SymBool</a> -&gt; f a -&gt; f a -&gt; f a","name":"genericLiftMrgIte","module":"Grisette.Core","link":"Grisette-Core.html#v:genericLiftMrgIte"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:ToConArgs\">ToConArgs</a> arity a b","name":"ToConArgs ToConArgs0 ToConArgs1","module":"Grisette.Core","link":"Grisette-Core.html#t:ToConArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GToCon\">GToCon</a> arity (f1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (f2 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:gtoCon\">gtoCon</a> :: <a href=\"Grisette-Core.html#t:ToConArgs\" title=\"Grisette.Core\">ToConArgs</a> arity a b -&gt; f1 a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (f2 b)</li></ul>","name":"GToCon gtoCon","module":"Grisette.Core","link":"Grisette-Core.html#t:GToCon"},{"display_html":"<a href=\"#v:genericToCon\">genericToCon</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> b, <a href=\"Grisette-Core.html#t:GToCon\" title=\"Grisette.Core\">GToCon</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> b)) =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> b","name":"genericToCon","module":"Grisette.Core","link":"Grisette-Core.html#v:genericToCon"},{"display_html":"<a href=\"#v:genericLiftToCon\">genericLiftToCon</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f1, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f2, <a href=\"Grisette-Core.html#t:GToCon\" title=\"Grisette.Core\">GToCon</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f1) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f2)) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> b) -&gt; f1 a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (f2 b)","name":"genericLiftToCon","module":"Grisette.Core","link":"Grisette-Core.html#v:genericLiftToCon"},{"display_html":"<a href=\"#v:unionToCon\">unionToCon</a> :: (<a href=\"Grisette-Core.html#t:ToCon\" title=\"Grisette.Core\">ToCon</a> a b, <a href=\"Grisette-Core.html#t:PlainUnion\" title=\"Grisette.Core\">PlainUnion</a> u) =&gt; u a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> b","name":"unionToCon","module":"Grisette.Core","link":"Grisette-Core.html#v:unionToCon"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:ToSymArgs\">ToSymArgs</a> arity a b","name":"ToSymArgs ToSymArgs0 ToSymArgs1","module":"Grisette.Core","link":"Grisette-Core.html#t:ToSymArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GToSym\">GToSym</a> arity (f1 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (f2 :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:gtoSym\">gtoSym</a> :: <a href=\"Grisette-Core.html#t:ToSymArgs\" title=\"Grisette.Core\">ToSymArgs</a> arity a b -&gt; f1 a -&gt; f2 b</li></ul>","name":"GToSym gtoSym","module":"Grisette.Core","link":"Grisette-Core.html#t:GToSym"},{"display_html":"<a href=\"#v:genericToSym\">genericToSym</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> b, <a href=\"Grisette-Core.html#t:GToSym\" title=\"Grisette.Core\">GToSym</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> b)) =&gt; a -&gt; b","name":"genericToSym","module":"Grisette.Core","link":"Grisette-Core.html#v:genericToSym"},{"display_html":"<a href=\"#v:genericLiftToSym\">genericLiftToSym</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f1, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f2, <a href=\"Grisette-Core.html#t:GToSym\" title=\"Grisette.Core\">GToSym</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f1) (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f2)) =&gt; (a -&gt; b) -&gt; f1 a -&gt; f2 b","name":"genericLiftToSym","module":"Grisette.Core","link":"Grisette-Core.html#v:genericLiftToSym"},{"display_html":"<a href=\"#v:mrgToSym\">mrgToSym</a> :: (<a href=\"Grisette-Core.html#t:ToSym\" title=\"Grisette.Core\">ToSym</a> a b, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> b, <a href=\"Grisette-Core.html#t:TryMerge\" title=\"Grisette.Core\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m) =&gt; a -&gt; m b","name":"mrgToSym","module":"Grisette.Core","link":"Grisette-Core.html#v:mrgToSym"},{"display_html":"<a href=\"#v:toUnionSym\">toUnionSym</a> :: (<a href=\"Grisette-Core.html#t:ToSym\" title=\"Grisette.Core\">ToSym</a> a b, <a href=\"Grisette-Core.html#t:Mergeable\" title=\"Grisette.Core\">Mergeable</a> b, <a href=\"Grisette-Core.html#t:TryMerge\" title=\"Grisette.Core\">TryMerge</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m) =&gt; a -&gt; m b","name":"toUnionSym","module":"Grisette.Core","link":"Grisette-Core.html#v:toUnionSym"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:EvalSymArgs\">EvalSymArgs</a> arity a","name":"EvalSymArgs EvalSymArgs0 EvalSymArgs1","module":"Grisette.Core","link":"Grisette-Core.html#t:EvalSymArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GEvalSym\">GEvalSym</a> arity (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:gevalSym\">gevalSym</a> :: <a href=\"Grisette-Core.html#t:EvalSymArgs\" title=\"Grisette.Core\">EvalSymArgs</a> arity a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; f a -&gt; f a</li></ul>","name":"GEvalSym gevalSym","module":"Grisette.Core","link":"Grisette-Core.html#t:GEvalSym"},{"display_html":"<a href=\"#v:genericEvalSym\">genericEvalSym</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"Grisette-Core.html#t:GEvalSym\" title=\"Grisette.Core\">GEvalSym</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a)) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; a -&gt; a","name":"genericEvalSym","module":"Grisette.Core","link":"Grisette-Core.html#v:genericEvalSym"},{"display_html":"<a href=\"#v:genericLiftEvalSym\">genericLiftEvalSym</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f, <a href=\"Grisette-Core.html#t:GEvalSym\" title=\"Grisette.Core\">GEvalSym</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f)) =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; a -&gt; a) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:Model\" title=\"Grisette.Internal.SymPrim.Prim.Model\">Model</a> -&gt; f a -&gt; f a","name":"genericLiftEvalSym","module":"Grisette.Core","link":"Grisette-Core.html#v:genericLiftEvalSym"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:ExtractSymArgs\">ExtractSymArgs</a> arity (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a","name":"ExtractSymArgs ExtractSymArgs0 ExtractSymArgs1","module":"Grisette.Core","link":"Grisette-Core.html#t:ExtractSymArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GExtractSym\">GExtractSym</a> arity (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:gextractSymMaybe\">gextractSymMaybe</a> :: <span class=\"keyword\">forall</span> (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a. <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd =&gt; <a href=\"Grisette-Core.html#t:ExtractSymArgs\" title=\"Grisette.Core\">ExtractSymArgs</a> arity knd a -&gt; f a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)</li></ul>","name":"GExtractSym gextractSymMaybe","module":"Grisette.Core","link":"Grisette-Core.html#t:GExtractSym"},{"display_html":"<a href=\"#v:genericExtractSymMaybe\">genericExtractSymMaybe</a> :: <span class=\"keyword\">forall</span> a (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"Grisette-Core.html#t:GExtractSym\" title=\"Grisette.Core\">GExtractSym</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)","name":"genericExtractSymMaybe","module":"Grisette.Core","link":"Grisette-Core.html#v:genericExtractSymMaybe"},{"display_html":"<a href=\"#v:genericLiftExtractSymMaybe\">genericLiftExtractSymMaybe</a> :: <span class=\"keyword\">forall</span> f (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f, <a href=\"Grisette-Core.html#t:GExtractSym\" title=\"Grisette.Core\">GExtractSym</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)) -&gt; f a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Internal-SymPrim-Prim-Model.html#t:SymbolSet\" title=\"Grisette.Internal.SymPrim.Prim.Model\">SymbolSet</a> knd)","name":"genericLiftExtractSymMaybe","module":"Grisette.Core","link":"Grisette-Core.html#v:genericLiftExtractSymMaybe"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:SubstSymArgs\">SubstSymArgs</a> arity (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a cb sb","name":"SubstSymArgs SubstSymArgs0 SubstSymArgs1","module":"Grisette.Core","link":"Grisette-Core.html#t:SubstSymArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GSubstSym\">GSubstSym</a> arity (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:gsubstSym\">gsubstSym</a> :: <span class=\"keyword\">forall</span> cb sb (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a. (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> cb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; <a href=\"Grisette-Core.html#t:SubstSymArgs\" title=\"Grisette.Core\">SubstSymArgs</a> arity knd a cb sb -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; f a -&gt; f a</li></ul>","name":"GSubstSym gsubstSym","module":"Grisette.Core","link":"Grisette-Core.html#t:GSubstSym"},{"display_html":"<a href=\"#v:genericSubstSym\">genericSubstSym</a> :: <span class=\"keyword\">forall</span> a cb sb (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"Grisette-Core.html#t:GSubstSym\" title=\"Grisette.Core\">GSubstSym</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> cb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; a -&gt; a","name":"genericSubstSym","module":"Grisette.Core","link":"Grisette-Core.html#v:genericSubstSym"},{"display_html":"<a href=\"#v:genericLiftSubstSym\">genericLiftSubstSym</a> :: <span class=\"keyword\">forall</span> f cb sb (knd :: <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:SymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">SymbolKind</a>) a. (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f, <a href=\"Grisette-Core.html#t:GSubstSym\" title=\"Grisette.Core\">GSubstSym</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f), <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:LinkedRep\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">LinkedRep</a> cb sb, <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:IsSymbolKind\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">IsSymbolKind</a> knd) =&gt; (<a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; a -&gt; a) -&gt; <a href=\"Grisette-Internal-SymPrim-Prim-Internal-Term.html#t:TypedSymbol\" title=\"Grisette.Internal.SymPrim.Prim.Internal.Term\">TypedSymbol</a> knd cb -&gt; sb -&gt; f a -&gt; f a","name":"genericLiftSubstSym","module":"Grisette.Core","link":"Grisette-Core.html#v:genericLiftSubstSym"},{"display_html":"<a href=\"#v:genericPFormatPrec\">genericPFormatPrec</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"Grisette-Core.html#t:GPPrint\" title=\"Grisette.Core\">GPPrint</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a)) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"genericPFormatPrec","module":"Grisette.Core","link":"Grisette-Core.html#v:genericPFormatPrec"},{"display_html":"<a href=\"#v:genericLiftPFormatPrec\">genericLiftPFormatPrec</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f, <a href=\"Grisette-Core.html#t:GPPrint\" title=\"Grisette.Core\">GPPrint</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f)) =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; ([a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; f a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"genericLiftPFormatPrec","module":"Grisette.Core","link":"Grisette-Core.html#v:genericLiftPFormatPrec"},{"display_html":"<a href=\"#v:genericPFormatList\">genericPFormatList</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic\" title=\"GHC.Generics\">Generic</a> a, <a href=\"Grisette-Core.html#t:GPPrint\" title=\"Grisette.Core\">GPPrint</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity0\" title=\"Grisette.Internal.Utils.Derive\">Arity0</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a)) =&gt; [a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"genericPFormatList","module":"Grisette.Core","link":"Grisette-Core.html#v:genericPFormatList"},{"display_html":"<a href=\"#v:genericLiftPFormatList\">genericLiftPFormatList</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f, <a href=\"Grisette-Core.html#t:GPPrint\" title=\"Grisette.Core\">GPPrint</a> <a href=\"Grisette-Internal-Utils-Derive.html#t:Arity1\" title=\"Grisette.Internal.Utils.Derive\">Arity1</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f)) =&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; ([a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann) -&gt; [f a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann","name":"genericLiftPFormatList","module":"Grisette.Core","link":"Grisette-Core.html#v:genericLiftPFormatList"},{"display_html":"<span class=\"keyword\">data family</span> <a href=\"#t:PPrintArgs\">PPrintArgs</a> arity a ann","name":"PPrintArgs PPrintArgs0 PPrintArgs1","module":"Grisette.Core","link":"Grisette-Core.html#t:PPrintArgs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GPPrint\">GPPrint</a> arity (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:gpformatPrec\">gpformatPrec</a> :: <a href=\"Grisette-Core.html#t:PPrintArgs\" title=\"Grisette.Core\">PPrintArgs</a> arity a ann -&gt; <a href=\"Grisette-Core.html#t:PPrintType\" title=\"Grisette.Core\">PPrintType</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; f a -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann</li><li><a href=\"#v:gpformatList\">gpformatList</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"Grisette-Core.html#t:PPrintArgs\" title=\"Grisette.Core\">PPrintArgs</a> arity a ann -&gt; [f a] -&gt; <a href=\"https://hackage.haskell.org/package/prettyprinter-1.7.1/docs/Prettyprinter.html#t:Doc\" title=\"Prettyprinter\">Doc</a> ann</li><li><a href=\"#v:gisNullary\">gisNullary</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"Grisette-Core.html#t:PPrintArgs\" title=\"Grisette.Core\">PPrintArgs</a> arity a ann -&gt; f a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li></ul>","name":"GPPrint gpformatPrec gpformatList gisNullary $dmgpformatList $dmgisNullary","module":"Grisette.Core","link":"Grisette-Core.html#t:GPPrint"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PPrintType\">PPrintType</a><ul class=\"subs\"><li>= <a href=\"#v:Rec\">Rec</a></li><li>| <a href=\"#v:Tup\">Tup</a></li><li>| <a href=\"#v:Pref\">Pref</a></li><li>| <a href=\"#v:Inf\">Inf</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li></ul>","name":"PPrintType Inf Rec Tup Pref","module":"Grisette.Core","link":"Grisette-Core.html#t:PPrintType"},{"display_html":"<a href=\"#v:unsafeAxiom\">unsafeAxiom</a> :: <span class=\"keyword\">forall</span> {k} (a :: k) (b :: k). a <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t::-126-:\" title=\"Data.Type.Equality\">:~:</a> b","name":"unsafeAxiom","module":"Grisette.Utils","link":"Grisette-Utils.html#v:unsafeAxiom"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:NatRepr\">NatRepr</a> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>)","name":"NatRepr","module":"Grisette.Utils","link":"Grisette-Utils.html#t:NatRepr"},{"display_html":"<a href=\"#v:natValue\">natValue</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> n -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a>","name":"natValue","module":"Grisette.Utils","link":"Grisette-Utils.html#v:natValue"},{"display_html":"<a href=\"#v:natRepr\">natRepr</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n =&gt; <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> n","name":"natRepr","module":"Grisette.Utils","link":"Grisette-Utils.html#v:natRepr"},{"display_html":"<a href=\"#v:decNat\">decNat</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a>). 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n =&gt; <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> n -&gt; <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> (n <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-45-\" title=\"GHC.TypeLits\">-</a> 1)","name":"decNat","module":"Grisette.Utils","link":"Grisette-Utils.html#v:decNat"},{"display_html":"<a href=\"#v:predNat\">predNat</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a>). <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> (n <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> 1) -&gt; <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> n","name":"predNat","module":"Grisette.Utils","link":"Grisette-Utils.html#v:predNat"},{"display_html":"<a href=\"#v:incNat\">incNat</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> n -&gt; <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> (n <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> 1)","name":"incNat","module":"Grisette.Utils","link":"Grisette-Utils.html#v:incNat"},{"display_html":"<a href=\"#v:addNat\">addNat</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> m -&gt; <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> n -&gt; <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> (m <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> n)","name":"addNat","module":"Grisette.Utils","link":"Grisette-Utils.html#v:addNat"},{"display_html":"<a href=\"#v:subNat\">subNat</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). n <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> m =&gt; <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> m -&gt; <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> n -&gt; <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> (m <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-45-\" title=\"GHC.TypeLits\">-</a> n)","name":"subNat","module":"Grisette.Utils","link":"Grisette-Utils.html#v:subNat"},{"display_html":"<a href=\"#v:divNat\">divNat</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a>) (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n =&gt; <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> m -&gt; <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> n -&gt; <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Div\" title=\"GHC.TypeLits\">Div</a> m n)","name":"divNat","module":"Grisette.Utils","link":"Grisette-Utils.html#v:divNat"},{"display_html":"<a href=\"#v:halfNat\">halfNat</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a>). <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> (n <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> n) -&gt; <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> n","name":"halfNat","module":"Grisette.Utils","link":"Grisette-Utils.html#v:halfNat"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:KnownProof\">KnownProof</a> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:KnownProof\">KnownProof</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n =&gt; <a href=\"Grisette-Utils.html#t:KnownProof\" title=\"Grisette.Utils\">KnownProof</a> n</li></ul>","name":"KnownProof KnownProof","module":"Grisette.Utils","link":"Grisette-Utils.html#t:KnownProof"},{"display_html":"<a href=\"#v:hasRepr\">hasRepr</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> n -&gt; <a href=\"Grisette-Utils.html#t:KnownProof\" title=\"Grisette.Utils\">KnownProof</a> n","name":"hasRepr","module":"Grisette.Utils","link":"Grisette-Utils.html#v:hasRepr"},{"display_html":"<a href=\"#v:withKnownProof\">withKnownProof</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) r. <a href=\"Grisette-Utils.html#t:KnownProof\" title=\"Grisette.Utils\">KnownProof</a> n -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:KnownNat\" title=\"GHC.TypeLits\">KnownNat</a> n =&gt; r) -&gt; r","name":"withKnownProof","module":"Grisette.Utils","link":"Grisette-Utils.html#v:withKnownProof"},{"display_html":"<a href=\"#v:unsafeKnownProof\">unsafeKnownProof</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a> -&gt; <a href=\"Grisette-Utils.html#t:KnownProof\" title=\"Grisette.Utils\">KnownProof</a> n","name":"unsafeKnownProof","module":"Grisette.Utils","link":"Grisette-Utils.html#v:unsafeKnownProof"},{"display_html":"<a href=\"#v:knownAdd\">knownAdd</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Utils.html#t:KnownProof\" title=\"Grisette.Utils\">KnownProof</a> m -&gt; <a href=\"Grisette-Utils.html#t:KnownProof\" title=\"Grisette.Utils\">KnownProof</a> n -&gt; <a href=\"Grisette-Utils.html#t:KnownProof\" title=\"Grisette.Utils\">KnownProof</a> (m <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> n)","name":"knownAdd","module":"Grisette.Utils","link":"Grisette-Utils.html#v:knownAdd"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:LeqProof\">LeqProof</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:LeqProof\">LeqProof</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). m <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n =&gt; <a href=\"Grisette-Utils.html#t:LeqProof\" title=\"Grisette.Utils\">LeqProof</a> m n</li></ul>","name":"LeqProof LeqProof","module":"Grisette.Utils","link":"Grisette-Utils.html#t:LeqProof"},{"display_html":"<a href=\"#v:withLeqProof\">withLeqProof</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) r. <a href=\"Grisette-Utils.html#t:LeqProof\" title=\"Grisette.Utils\">LeqProof</a> m n -&gt; (m <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n =&gt; r) -&gt; r","name":"withLeqProof","module":"Grisette.Utils","link":"Grisette-Utils.html#v:withLeqProof"},{"display_html":"<a href=\"#v:unsafeLeqProof\">unsafeLeqProof</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Utils.html#t:LeqProof\" title=\"Grisette.Utils\">LeqProof</a> m n","name":"unsafeLeqProof","module":"Grisette.Utils","link":"Grisette-Utils.html#v:unsafeLeqProof"},{"display_html":"<a href=\"#v:testLeq\">testLeq</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> m -&gt; <a href=\"Grisette-Utils.html#t:NatRepr\" title=\"Grisette.Utils\">NatRepr</a> n -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"Grisette-Utils.html#t:LeqProof\" title=\"Grisette.Utils\">LeqProof</a> m n)","name":"testLeq","module":"Grisette.Utils","link":"Grisette-Utils.html#v:testLeq"},{"display_html":"<a href=\"#v:leqRefl\">leqRefl</a> :: <span class=\"keyword\">forall</span> f (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). f n -&gt; <a href=\"Grisette-Utils.html#t:LeqProof\" title=\"Grisette.Utils\">LeqProof</a> n n","name":"leqRefl","module":"Grisette.Utils","link":"Grisette-Utils.html#v:leqRefl"},{"display_html":"<a href=\"#v:leqSucc\">leqSucc</a> :: <span class=\"keyword\">forall</span> f (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). f n -&gt; <a href=\"Grisette-Utils.html#t:LeqProof\" title=\"Grisette.Utils\">LeqProof</a> n (n <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> 1)","name":"leqSucc","module":"Grisette.Utils","link":"Grisette-Utils.html#v:leqSucc"},{"display_html":"<a href=\"#v:leqTrans\">leqTrans</a> :: <span class=\"keyword\">forall</span> (a :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (b :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (c :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Utils.html#t:LeqProof\" title=\"Grisette.Utils\">LeqProof</a> a b -&gt; <a href=\"Grisette-Utils.html#t:LeqProof\" title=\"Grisette.Utils\">LeqProof</a> b c -&gt; <a href=\"Grisette-Utils.html#t:LeqProof\" title=\"Grisette.Utils\">LeqProof</a> a c","name":"leqTrans","module":"Grisette.Utils","link":"Grisette-Utils.html#v:leqTrans"},{"display_html":"<a href=\"#v:leqZero\">leqZero</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Utils.html#t:LeqProof\" title=\"Grisette.Utils\">LeqProof</a> 0 n","name":"leqZero","module":"Grisette.Utils","link":"Grisette-Utils.html#v:leqZero"},{"display_html":"<a href=\"#v:leqAdd2\">leqAdd2</a> :: <span class=\"keyword\">forall</span> (xl :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (xh :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (yl :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (yh :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>). <a href=\"Grisette-Utils.html#t:LeqProof\" title=\"Grisette.Utils\">LeqProof</a> xl xh -&gt; <a href=\"Grisette-Utils.html#t:LeqProof\" title=\"Grisette.Utils\">LeqProof</a> yl yh -&gt; <a href=\"Grisette-Utils.html#t:LeqProof\" title=\"Grisette.Utils\">LeqProof</a> (xl <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> yl) (xh <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> yh)","name":"leqAdd2","module":"Grisette.Utils","link":"Grisette-Utils.html#v:leqAdd2"},{"display_html":"<a href=\"#v:leqAdd\">leqAdd</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Nat\" title=\"GHC.TypeLits\">Nat</a>) f (o :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a>). <a href=\"Grisette-Utils.html#t:LeqProof\" title=\"Grisette.Utils\">LeqProof</a> m n -&gt; f o -&gt; <a href=\"Grisette-Utils.html#t:LeqProof\" title=\"Grisette.Utils\">LeqProof</a> m (n <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> o)","name":"leqAdd","module":"Grisette.Utils","link":"Grisette-Utils.html#v:leqAdd"},{"display_html":"<a href=\"#v:leqAddPos\">leqAddPos</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a>) (n :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:Natural\" title=\"GHC.TypeLits\">Natural</a>) p q. (1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> m, 1 <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Ord.html#t:-60--61-\" title=\"Data.Type.Ord\">&lt;=</a> n) =&gt; p m -&gt; q n -&gt; <a href=\"Grisette-Utils.html#t:LeqProof\" title=\"Grisette.Utils\">LeqProof</a> 1 (m <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-TypeLits.html#t:-43-\" title=\"GHC.TypeLits\">+</a> n)","name":"leqAddPos","module":"Grisette.Utils","link":"Grisette-Utils.html#v:leqAddPos"},{"display_html":"module <a href=\"Grisette-Core.html\">Grisette.Core</a>","name":"","module":"Grisette","link":""},{"display_html":"module <a href=\"Grisette-SymPrim.html\">Grisette.SymPrim</a>","name":"","module":"Grisette","link":""},{"display_html":"module <a href=\"Grisette-Backend.html\">Grisette.Backend</a>","name":"","module":"Grisette","link":""},{"display_html":"module <a href=\"Grisette-Lib-Base.html\">Grisette.Lib.Base</a>","name":"","module":"Grisette","link":""},{"display_html":"module <a href=\"Grisette-Utils.html\">Grisette.Utils</a>","name":"","module":"Grisette","link":""},{"display_html":"module <a href=\"Grisette-TH.html\">Grisette.TH</a>","name":"","module":"Grisette","link":""}]